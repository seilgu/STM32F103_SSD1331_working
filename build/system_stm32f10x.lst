ARM GAS  /tmp/cc0MDSTj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f10x.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SetSysClockTo72,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SetSysClockTo72:
  23              	.LFB59:
  24              		.file 1 "cmsis_boot/system_stm32f10x.c"
   1:cmsis_boot/system_stm32f10x.c **** /**
   2:cmsis_boot/system_stm32f10x.c ****   ******************************************************************************
   3:cmsis_boot/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:cmsis_boot/system_stm32f10x.c ****   * @author  MCD Application Team
   5:cmsis_boot/system_stm32f10x.c ****   * @version V3.5.0
   6:cmsis_boot/system_stm32f10x.c ****   * @date    11-March-2011
   7:cmsis_boot/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:cmsis_boot/system_stm32f10x.c ****   * 
   9:cmsis_boot/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:cmsis_boot/system_stm32f10x.c ****   *     user application:
  11:cmsis_boot/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:cmsis_boot/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:cmsis_boot/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:cmsis_boot/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:cmsis_boot/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:cmsis_boot/system_stm32f10x.c ****   *
  17:cmsis_boot/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:cmsis_boot/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:cmsis_boot/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:cmsis_boot/system_stm32f10x.c ****   *                                     
  21:cmsis_boot/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:cmsis_boot/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:cmsis_boot/system_stm32f10x.c ****   *                                 during program execution.
  24:cmsis_boot/system_stm32f10x.c ****   *
  25:cmsis_boot/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:cmsis_boot/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:cmsis_boot/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:cmsis_boot/system_stm32f10x.c ****   *
  29:cmsis_boot/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:cmsis_boot/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:cmsis_boot/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:cmsis_boot/system_stm32f10x.c ****   *
  33:cmsis_boot/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:cmsis_boot/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
ARM GAS  /tmp/cc0MDSTj.s 			page 2


  35:cmsis_boot/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:cmsis_boot/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:cmsis_boot/system_stm32f10x.c ****   *    configuration.
  38:cmsis_boot/system_stm32f10x.c ****   *        
  39:cmsis_boot/system_stm32f10x.c ****   ******************************************************************************
  40:cmsis_boot/system_stm32f10x.c ****   * @attention
  41:cmsis_boot/system_stm32f10x.c ****   *
  42:cmsis_boot/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:cmsis_boot/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:cmsis_boot/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:cmsis_boot/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:cmsis_boot/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:cmsis_boot/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:cmsis_boot/system_stm32f10x.c ****   *
  49:cmsis_boot/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:cmsis_boot/system_stm32f10x.c ****   ******************************************************************************
  51:cmsis_boot/system_stm32f10x.c ****   */
  52:cmsis_boot/system_stm32f10x.c **** 
  53:cmsis_boot/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:cmsis_boot/system_stm32f10x.c ****   * @{
  55:cmsis_boot/system_stm32f10x.c ****   */
  56:cmsis_boot/system_stm32f10x.c **** 
  57:cmsis_boot/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:cmsis_boot/system_stm32f10x.c ****   * @{
  59:cmsis_boot/system_stm32f10x.c ****   */  
  60:cmsis_boot/system_stm32f10x.c ****   
  61:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:cmsis_boot/system_stm32f10x.c ****   * @{
  63:cmsis_boot/system_stm32f10x.c ****   */
  64:cmsis_boot/system_stm32f10x.c **** 
  65:cmsis_boot/system_stm32f10x.c **** #include "stm32f10x.h"
  66:cmsis_boot/system_stm32f10x.c **** 
  67:cmsis_boot/system_stm32f10x.c **** /**
  68:cmsis_boot/system_stm32f10x.c ****   * @}
  69:cmsis_boot/system_stm32f10x.c ****   */
  70:cmsis_boot/system_stm32f10x.c **** 
  71:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:cmsis_boot/system_stm32f10x.c ****   * @{
  73:cmsis_boot/system_stm32f10x.c ****   */
  74:cmsis_boot/system_stm32f10x.c **** 
  75:cmsis_boot/system_stm32f10x.c **** /**
  76:cmsis_boot/system_stm32f10x.c ****   * @}
  77:cmsis_boot/system_stm32f10x.c ****   */
  78:cmsis_boot/system_stm32f10x.c **** 
  79:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:cmsis_boot/system_stm32f10x.c ****   * @{
  81:cmsis_boot/system_stm32f10x.c ****   */
  82:cmsis_boot/system_stm32f10x.c **** 
  83:cmsis_boot/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:cmsis_boot/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:cmsis_boot/system_stm32f10x.c ****    
  86:cmsis_boot/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:cmsis_boot/system_stm32f10x.c ****    ============== 
  88:cmsis_boot/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:cmsis_boot/system_stm32f10x.c **** 
  90:cmsis_boot/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:cmsis_boot/system_stm32f10x.c ****       maximum frequency.
ARM GAS  /tmp/cc0MDSTj.s 			page 3


  92:cmsis_boot/system_stm32f10x.c ****       
  93:cmsis_boot/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:cmsis_boot/system_stm32f10x.c ****     source.
  95:cmsis_boot/system_stm32f10x.c **** 
  96:cmsis_boot/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:cmsis_boot/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:cmsis_boot/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:cmsis_boot/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:cmsis_boot/system_stm32f10x.c ****           used to drive the System clock.
 101:cmsis_boot/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:cmsis_boot/system_stm32f10x.c ****           the System clock.
 103:cmsis_boot/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:cmsis_boot/system_stm32f10x.c ****     */
 105:cmsis_boot/system_stm32f10x.c ****     
 106:cmsis_boot/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:cmsis_boot/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:cmsis_boot/system_stm32f10x.c **** #else
 110:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:cmsis_boot/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:cmsis_boot/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:cmsis_boot/system_stm32f10x.c **** #endif
 117:cmsis_boot/system_stm32f10x.c **** 
 118:cmsis_boot/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:cmsis_boot/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:cmsis_boot/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:cmsis_boot/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:cmsis_boot/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:cmsis_boot/system_stm32f10x.c **** #endif
 124:cmsis_boot/system_stm32f10x.c **** 
 125:cmsis_boot/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:cmsis_boot/system_stm32f10x.c ****      Internal SRAM. */ 
 127:cmsis_boot/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:cmsis_boot/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:cmsis_boot/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:cmsis_boot/system_stm32f10x.c **** 
 131:cmsis_boot/system_stm32f10x.c **** 
 132:cmsis_boot/system_stm32f10x.c **** /**
 133:cmsis_boot/system_stm32f10x.c ****   * @}
 134:cmsis_boot/system_stm32f10x.c ****   */
 135:cmsis_boot/system_stm32f10x.c **** 
 136:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:cmsis_boot/system_stm32f10x.c ****   * @{
 138:cmsis_boot/system_stm32f10x.c ****   */
 139:cmsis_boot/system_stm32f10x.c **** 
 140:cmsis_boot/system_stm32f10x.c **** /**
 141:cmsis_boot/system_stm32f10x.c ****   * @}
 142:cmsis_boot/system_stm32f10x.c ****   */
 143:cmsis_boot/system_stm32f10x.c **** 
 144:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:cmsis_boot/system_stm32f10x.c ****   * @{
 146:cmsis_boot/system_stm32f10x.c ****   */
 147:cmsis_boot/system_stm32f10x.c **** 
 148:cmsis_boot/system_stm32f10x.c **** /*******************************************************************************
ARM GAS  /tmp/cc0MDSTj.s 			page 4


 149:cmsis_boot/system_stm32f10x.c **** *  Clock Definitions
 150:cmsis_boot/system_stm32f10x.c **** *******************************************************************************/
 151:cmsis_boot/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:cmsis_boot/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:cmsis_boot/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:cmsis_boot/system_stm32f10x.c **** #endif
 166:cmsis_boot/system_stm32f10x.c **** 
 167:cmsis_boot/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:cmsis_boot/system_stm32f10x.c **** /**
 169:cmsis_boot/system_stm32f10x.c ****   * @}
 170:cmsis_boot/system_stm32f10x.c ****   */
 171:cmsis_boot/system_stm32f10x.c **** 
 172:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:cmsis_boot/system_stm32f10x.c ****   * @{
 174:cmsis_boot/system_stm32f10x.c ****   */
 175:cmsis_boot/system_stm32f10x.c **** 
 176:cmsis_boot/system_stm32f10x.c **** static void SetSysClock(void);
 177:cmsis_boot/system_stm32f10x.c **** 
 178:cmsis_boot/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:cmsis_boot/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:cmsis_boot/system_stm32f10x.c **** #endif
 191:cmsis_boot/system_stm32f10x.c **** 
 192:cmsis_boot/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:cmsis_boot/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:cmsis_boot/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:cmsis_boot/system_stm32f10x.c **** 
 196:cmsis_boot/system_stm32f10x.c **** /**
 197:cmsis_boot/system_stm32f10x.c ****   * @}
 198:cmsis_boot/system_stm32f10x.c ****   */
 199:cmsis_boot/system_stm32f10x.c **** 
 200:cmsis_boot/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:cmsis_boot/system_stm32f10x.c ****   * @{
 202:cmsis_boot/system_stm32f10x.c ****   */
 203:cmsis_boot/system_stm32f10x.c **** 
 204:cmsis_boot/system_stm32f10x.c **** /**
 205:cmsis_boot/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
ARM GAS  /tmp/cc0MDSTj.s 			page 5


 206:cmsis_boot/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:cmsis_boot/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:cmsis_boot/system_stm32f10x.c ****   * @param  None
 210:cmsis_boot/system_stm32f10x.c ****   * @retval None
 211:cmsis_boot/system_stm32f10x.c ****   */
 212:cmsis_boot/system_stm32f10x.c **** void SystemInit (void)
 213:cmsis_boot/system_stm32f10x.c **** {
 214:cmsis_boot/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:cmsis_boot/system_stm32f10x.c ****   /* Set HSION bit */
 216:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 217:cmsis_boot/system_stm32f10x.c **** 
 218:cmsis_boot/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:cmsis_boot/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:cmsis_boot/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 221:cmsis_boot/system_stm32f10x.c **** #else
 222:cmsis_boot/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:cmsis_boot/system_stm32f10x.c ****   
 225:cmsis_boot/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:cmsis_boot/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 227:cmsis_boot/system_stm32f10x.c **** 
 228:cmsis_boot/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:cmsis_boot/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 230:cmsis_boot/system_stm32f10x.c **** 
 231:cmsis_boot/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:cmsis_boot/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 233:cmsis_boot/system_stm32f10x.c **** 
 234:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:cmsis_boot/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:cmsis_boot/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:cmsis_boot/system_stm32f10x.c **** 
 238:cmsis_boot/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:cmsis_boot/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:cmsis_boot/system_stm32f10x.c **** 
 241:cmsis_boot/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:cmsis_boot/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:cmsis_boot/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:cmsis_boot/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:cmsis_boot/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:cmsis_boot/system_stm32f10x.c **** 
 247:cmsis_boot/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:cmsis_boot/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:cmsis_boot/system_stm32f10x.c **** #else
 250:cmsis_boot/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:cmsis_boot/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 252:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:cmsis_boot/system_stm32f10x.c ****     
 254:cmsis_boot/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:cmsis_boot/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:cmsis_boot/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:cmsis_boot/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:cmsis_boot/system_stm32f10x.c **** #endif 
 259:cmsis_boot/system_stm32f10x.c **** 
 260:cmsis_boot/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:cmsis_boot/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:cmsis_boot/system_stm32f10x.c ****   SetSysClock();
ARM GAS  /tmp/cc0MDSTj.s 			page 6


 263:cmsis_boot/system_stm32f10x.c **** 
 264:cmsis_boot/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:cmsis_boot/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:cmsis_boot/system_stm32f10x.c **** #else
 267:cmsis_boot/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 268:cmsis_boot/system_stm32f10x.c **** #endif 
 269:cmsis_boot/system_stm32f10x.c **** }
 270:cmsis_boot/system_stm32f10x.c **** 
 271:cmsis_boot/system_stm32f10x.c **** /**
 272:cmsis_boot/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:cmsis_boot/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:cmsis_boot/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:cmsis_boot/system_stm32f10x.c ****   *         other parameters.
 276:cmsis_boot/system_stm32f10x.c ****   *           
 277:cmsis_boot/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:cmsis_boot/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:cmsis_boot/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:cmsis_boot/system_stm32f10x.c ****   *     
 281:cmsis_boot/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:cmsis_boot/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:cmsis_boot/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:cmsis_boot/system_stm32f10x.c ****   *             
 285:cmsis_boot/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:cmsis_boot/system_stm32f10x.c ****   *                                              
 287:cmsis_boot/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:cmsis_boot/system_stm32f10x.c ****   *                          
 289:cmsis_boot/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:cmsis_boot/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:cmsis_boot/system_stm32f10x.c ****   *         
 292:cmsis_boot/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:cmsis_boot/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:cmsis_boot/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:cmsis_boot/system_stm32f10x.c ****   *    
 296:cmsis_boot/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:cmsis_boot/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:cmsis_boot/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:cmsis_boot/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:cmsis_boot/system_stm32f10x.c ****   *                
 301:cmsis_boot/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:cmsis_boot/system_stm32f10x.c ****   *           value for HSE crystal.
 303:cmsis_boot/system_stm32f10x.c ****   * @param  None
 304:cmsis_boot/system_stm32f10x.c ****   * @retval None
 305:cmsis_boot/system_stm32f10x.c ****   */
 306:cmsis_boot/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:cmsis_boot/system_stm32f10x.c **** {
 308:cmsis_boot/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 309:cmsis_boot/system_stm32f10x.c **** 
 310:cmsis_boot/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:cmsis_boot/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:cmsis_boot/system_stm32f10x.c **** 
 314:cmsis_boot/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:cmsis_boot/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:cmsis_boot/system_stm32f10x.c ****     
 318:cmsis_boot/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:cmsis_boot/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
ARM GAS  /tmp/cc0MDSTj.s 			page 7


 320:cmsis_boot/system_stm32f10x.c ****   
 321:cmsis_boot/system_stm32f10x.c ****   switch (tmp)
 322:cmsis_boot/system_stm32f10x.c ****   {
 323:cmsis_boot/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:cmsis_boot/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 325:cmsis_boot/system_stm32f10x.c ****       break;
 326:cmsis_boot/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:cmsis_boot/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 328:cmsis_boot/system_stm32f10x.c ****       break;
 329:cmsis_boot/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:cmsis_boot/system_stm32f10x.c **** 
 331:cmsis_boot/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:cmsis_boot/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 333:cmsis_boot/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 334:cmsis_boot/system_stm32f10x.c ****       
 335:cmsis_boot/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:cmsis_boot/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 337:cmsis_boot/system_stm32f10x.c ****       
 338:cmsis_boot/system_stm32f10x.c ****       if (pllsource == 0x00)
 339:cmsis_boot/system_stm32f10x.c ****       {
 340:cmsis_boot/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:cmsis_boot/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 342:cmsis_boot/system_stm32f10x.c ****       }
 343:cmsis_boot/system_stm32f10x.c ****       else
 344:cmsis_boot/system_stm32f10x.c ****       {
 345:cmsis_boot/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:cmsis_boot/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:cmsis_boot/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:cmsis_boot/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:cmsis_boot/system_stm32f10x.c ****  #else
 350:cmsis_boot/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:cmsis_boot/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:cmsis_boot/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:cmsis_boot/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:cmsis_boot/system_stm32f10x.c ****         }
 355:cmsis_boot/system_stm32f10x.c ****         else
 356:cmsis_boot/system_stm32f10x.c ****         {
 357:cmsis_boot/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:cmsis_boot/system_stm32f10x.c ****         }
 359:cmsis_boot/system_stm32f10x.c ****  #endif
 360:cmsis_boot/system_stm32f10x.c ****       }
 361:cmsis_boot/system_stm32f10x.c **** #else
 362:cmsis_boot/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:cmsis_boot/system_stm32f10x.c ****       
 364:cmsis_boot/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:cmsis_boot/system_stm32f10x.c ****       {
 366:cmsis_boot/system_stm32f10x.c ****          pllmull += 2;
 367:cmsis_boot/system_stm32f10x.c ****       }
 368:cmsis_boot/system_stm32f10x.c ****       else
 369:cmsis_boot/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:cmsis_boot/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:cmsis_boot/system_stm32f10x.c ****       }
 372:cmsis_boot/system_stm32f10x.c ****             
 373:cmsis_boot/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:cmsis_boot/system_stm32f10x.c ****       {
 375:cmsis_boot/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:cmsis_boot/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
ARM GAS  /tmp/cc0MDSTj.s 			page 8


 377:cmsis_boot/system_stm32f10x.c ****       }
 378:cmsis_boot/system_stm32f10x.c ****       else
 379:cmsis_boot/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:cmsis_boot/system_stm32f10x.c ****         
 381:cmsis_boot/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:cmsis_boot/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:cmsis_boot/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:cmsis_boot/system_stm32f10x.c ****         
 385:cmsis_boot/system_stm32f10x.c ****         if (prediv1source == 0)
 386:cmsis_boot/system_stm32f10x.c ****         { 
 387:cmsis_boot/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:cmsis_boot/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:cmsis_boot/system_stm32f10x.c ****         }
 390:cmsis_boot/system_stm32f10x.c ****         else
 391:cmsis_boot/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:cmsis_boot/system_stm32f10x.c ****           
 393:cmsis_boot/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:cmsis_boot/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:cmsis_boot/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:cmsis_boot/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:cmsis_boot/system_stm32f10x.c ****         }
 398:cmsis_boot/system_stm32f10x.c ****       }
 399:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:cmsis_boot/system_stm32f10x.c ****       break;
 401:cmsis_boot/system_stm32f10x.c **** 
 402:cmsis_boot/system_stm32f10x.c ****     default:
 403:cmsis_boot/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 404:cmsis_boot/system_stm32f10x.c ****       break;
 405:cmsis_boot/system_stm32f10x.c ****   }
 406:cmsis_boot/system_stm32f10x.c ****   
 407:cmsis_boot/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:cmsis_boot/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:cmsis_boot/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 410:cmsis_boot/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:cmsis_boot/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 412:cmsis_boot/system_stm32f10x.c **** }
 413:cmsis_boot/system_stm32f10x.c **** 
 414:cmsis_boot/system_stm32f10x.c **** /**
 415:cmsis_boot/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:cmsis_boot/system_stm32f10x.c ****   * @param  None
 417:cmsis_boot/system_stm32f10x.c ****   * @retval None
 418:cmsis_boot/system_stm32f10x.c ****   */
 419:cmsis_boot/system_stm32f10x.c **** static void SetSysClock(void)
 420:cmsis_boot/system_stm32f10x.c **** {
 421:cmsis_boot/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:cmsis_boot/system_stm32f10x.c ****   SetSysClockToHSE();
 423:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:cmsis_boot/system_stm32f10x.c ****   SetSysClockTo24();
 425:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:cmsis_boot/system_stm32f10x.c ****   SetSysClockTo36();
 427:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:cmsis_boot/system_stm32f10x.c ****   SetSysClockTo48();
 429:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:cmsis_boot/system_stm32f10x.c ****   SetSysClockTo56();  
 431:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:cmsis_boot/system_stm32f10x.c ****   SetSysClockTo72();
 433:cmsis_boot/system_stm32f10x.c **** #endif
ARM GAS  /tmp/cc0MDSTj.s 			page 9


 434:cmsis_boot/system_stm32f10x.c ****  
 435:cmsis_boot/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:cmsis_boot/system_stm32f10x.c ****     source (default after reset) */ 
 437:cmsis_boot/system_stm32f10x.c **** }
 438:cmsis_boot/system_stm32f10x.c **** 
 439:cmsis_boot/system_stm32f10x.c **** /**
 440:cmsis_boot/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:cmsis_boot/system_stm32f10x.c ****   *          before jump to __main
 442:cmsis_boot/system_stm32f10x.c ****   * @param  None
 443:cmsis_boot/system_stm32f10x.c ****   * @retval None
 444:cmsis_boot/system_stm32f10x.c ****   */ 
 445:cmsis_boot/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:cmsis_boot/system_stm32f10x.c **** /**
 447:cmsis_boot/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:cmsis_boot/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:cmsis_boot/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:cmsis_boot/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:cmsis_boot/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:cmsis_boot/system_stm32f10x.c ****   * @param  None
 453:cmsis_boot/system_stm32f10x.c ****   * @retval None
 454:cmsis_boot/system_stm32f10x.c ****   */ 
 455:cmsis_boot/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:cmsis_boot/system_stm32f10x.c **** {
 457:cmsis_boot/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:cmsis_boot/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:cmsis_boot/system_stm32f10x.c **** 
 460:cmsis_boot/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:cmsis_boot/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:cmsis_boot/system_stm32f10x.c ****   
 463:cmsis_boot/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:cmsis_boot/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:cmsis_boot/system_stm32f10x.c ****   
 466:cmsis_boot/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:cmsis_boot/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:cmsis_boot/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:cmsis_boot/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:cmsis_boot/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:cmsis_boot/system_stm32f10x.c ****   
 472:cmsis_boot/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:cmsis_boot/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:cmsis_boot/system_stm32f10x.c **** 
 475:cmsis_boot/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:cmsis_boot/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:cmsis_boot/system_stm32f10x.c **** 
 478:cmsis_boot/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:cmsis_boot/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:cmsis_boot/system_stm32f10x.c **** 
 481:cmsis_boot/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:cmsis_boot/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:cmsis_boot/system_stm32f10x.c ****    
 484:cmsis_boot/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:cmsis_boot/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:cmsis_boot/system_stm32f10x.c ****   
 487:cmsis_boot/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:cmsis_boot/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:cmsis_boot/system_stm32f10x.c **** }
 490:cmsis_boot/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
ARM GAS  /tmp/cc0MDSTj.s 			page 10


 491:cmsis_boot/system_stm32f10x.c **** 
 492:cmsis_boot/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:cmsis_boot/system_stm32f10x.c **** /**
 494:cmsis_boot/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:cmsis_boot/system_stm32f10x.c ****   * @param  None
 498:cmsis_boot/system_stm32f10x.c ****   * @retval None
 499:cmsis_boot/system_stm32f10x.c ****   */
 500:cmsis_boot/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:cmsis_boot/system_stm32f10x.c **** {
 502:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:cmsis_boot/system_stm32f10x.c ****   
 504:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 506:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:cmsis_boot/system_stm32f10x.c ****  
 508:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:cmsis_boot/system_stm32f10x.c ****   do
 510:cmsis_boot/system_stm32f10x.c ****   {
 511:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
 513:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:cmsis_boot/system_stm32f10x.c **** 
 515:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:cmsis_boot/system_stm32f10x.c ****   {
 517:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:cmsis_boot/system_stm32f10x.c ****   }
 519:cmsis_boot/system_stm32f10x.c ****   else
 520:cmsis_boot/system_stm32f10x.c ****   {
 521:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:cmsis_boot/system_stm32f10x.c ****   }  
 523:cmsis_boot/system_stm32f10x.c **** 
 524:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:cmsis_boot/system_stm32f10x.c ****   {
 526:cmsis_boot/system_stm32f10x.c **** 
 527:cmsis_boot/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:cmsis_boot/system_stm32f10x.c **** 
 531:cmsis_boot/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:cmsis_boot/system_stm32f10x.c **** 
 534:cmsis_boot/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:cmsis_boot/system_stm32f10x.c **** #else
 537:cmsis_boot/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:cmsis_boot/system_stm32f10x.c **** 	{
 539:cmsis_boot/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:cmsis_boot/system_stm32f10x.c **** 	}
 541:cmsis_boot/system_stm32f10x.c **** 	else
 542:cmsis_boot/system_stm32f10x.c **** 	{
 543:cmsis_boot/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:cmsis_boot/system_stm32f10x.c **** 	}
 545:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:cmsis_boot/system_stm32f10x.c **** #endif
 547:cmsis_boot/system_stm32f10x.c ****  
ARM GAS  /tmp/cc0MDSTj.s 			page 11


 548:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:cmsis_boot/system_stm32f10x.c ****       
 551:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:cmsis_boot/system_stm32f10x.c ****     
 554:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:cmsis_boot/system_stm32f10x.c ****     
 557:cmsis_boot/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:cmsis_boot/system_stm32f10x.c **** 
 561:cmsis_boot/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:cmsis_boot/system_stm32f10x.c ****     {
 564:cmsis_boot/system_stm32f10x.c ****     }
 565:cmsis_boot/system_stm32f10x.c ****   }
 566:cmsis_boot/system_stm32f10x.c ****   else
 567:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:cmsis_boot/system_stm32f10x.c ****   }  
 570:cmsis_boot/system_stm32f10x.c **** }
 571:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:cmsis_boot/system_stm32f10x.c **** /**
 573:cmsis_boot/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:cmsis_boot/system_stm32f10x.c ****   * @param  None
 577:cmsis_boot/system_stm32f10x.c ****   * @retval None
 578:cmsis_boot/system_stm32f10x.c ****   */
 579:cmsis_boot/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:cmsis_boot/system_stm32f10x.c **** {
 581:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:cmsis_boot/system_stm32f10x.c ****   
 583:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 585:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:cmsis_boot/system_stm32f10x.c ****  
 587:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:cmsis_boot/system_stm32f10x.c ****   do
 589:cmsis_boot/system_stm32f10x.c ****   {
 590:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
 592:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:cmsis_boot/system_stm32f10x.c **** 
 594:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:cmsis_boot/system_stm32f10x.c ****   {
 596:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:cmsis_boot/system_stm32f10x.c ****   }
 598:cmsis_boot/system_stm32f10x.c ****   else
 599:cmsis_boot/system_stm32f10x.c ****   {
 600:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:cmsis_boot/system_stm32f10x.c ****   }  
 602:cmsis_boot/system_stm32f10x.c **** 
 603:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:cmsis_boot/system_stm32f10x.c ****   {
ARM GAS  /tmp/cc0MDSTj.s 			page 12


 605:cmsis_boot/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:cmsis_boot/system_stm32f10x.c **** 
 609:cmsis_boot/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:cmsis_boot/system_stm32f10x.c **** #endif
 613:cmsis_boot/system_stm32f10x.c ****  
 614:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:cmsis_boot/system_stm32f10x.c ****       
 617:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:cmsis_boot/system_stm32f10x.c ****     
 620:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:cmsis_boot/system_stm32f10x.c ****     
 623:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:cmsis_boot/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:cmsis_boot/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:cmsis_boot/system_stm32f10x.c **** 
 630:cmsis_boot/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:cmsis_boot/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:cmsis_boot/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:cmsis_boot/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:cmsis_boot/system_stm32f10x.c ****   
 637:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL2 */
 638:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:cmsis_boot/system_stm32f10x.c ****     {
 642:cmsis_boot/system_stm32f10x.c ****     }   
 643:cmsis_boot/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:cmsis_boot/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:cmsis_boot/system_stm32f10x.c **** #else    
 648:cmsis_boot/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:cmsis_boot/system_stm32f10x.c **** 
 653:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL */
 654:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:cmsis_boot/system_stm32f10x.c **** 
 656:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:cmsis_boot/system_stm32f10x.c ****     {
 659:cmsis_boot/system_stm32f10x.c ****     }
 660:cmsis_boot/system_stm32f10x.c **** 
 661:cmsis_boot/system_stm32f10x.c ****     /* Select PLL as system clock source */
ARM GAS  /tmp/cc0MDSTj.s 			page 13


 662:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:cmsis_boot/system_stm32f10x.c **** 
 665:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:cmsis_boot/system_stm32f10x.c ****     {
 668:cmsis_boot/system_stm32f10x.c ****     }
 669:cmsis_boot/system_stm32f10x.c ****   }
 670:cmsis_boot/system_stm32f10x.c ****   else
 671:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:cmsis_boot/system_stm32f10x.c ****   } 
 674:cmsis_boot/system_stm32f10x.c **** }
 675:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:cmsis_boot/system_stm32f10x.c **** /**
 677:cmsis_boot/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:cmsis_boot/system_stm32f10x.c ****   * @param  None
 681:cmsis_boot/system_stm32f10x.c ****   * @retval None
 682:cmsis_boot/system_stm32f10x.c ****   */
 683:cmsis_boot/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:cmsis_boot/system_stm32f10x.c **** {
 685:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:cmsis_boot/system_stm32f10x.c ****   
 687:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 689:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:cmsis_boot/system_stm32f10x.c ****  
 691:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:cmsis_boot/system_stm32f10x.c ****   do
 693:cmsis_boot/system_stm32f10x.c ****   {
 694:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
 696:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:cmsis_boot/system_stm32f10x.c **** 
 698:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:cmsis_boot/system_stm32f10x.c ****   {
 700:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:cmsis_boot/system_stm32f10x.c ****   }
 702:cmsis_boot/system_stm32f10x.c ****   else
 703:cmsis_boot/system_stm32f10x.c ****   {
 704:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:cmsis_boot/system_stm32f10x.c ****   }  
 706:cmsis_boot/system_stm32f10x.c **** 
 707:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:cmsis_boot/system_stm32f10x.c ****   {
 709:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:cmsis_boot/system_stm32f10x.c **** 
 712:cmsis_boot/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:cmsis_boot/system_stm32f10x.c ****  
 716:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:cmsis_boot/system_stm32f10x.c ****       
ARM GAS  /tmp/cc0MDSTj.s 			page 14


 719:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:cmsis_boot/system_stm32f10x.c ****     
 722:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:cmsis_boot/system_stm32f10x.c ****     
 725:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:cmsis_boot/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:cmsis_boot/system_stm32f10x.c ****     
 728:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:cmsis_boot/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:cmsis_boot/system_stm32f10x.c **** 
 733:cmsis_boot/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:cmsis_boot/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:cmsis_boot/system_stm32f10x.c ****         
 736:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:cmsis_boot/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:cmsis_boot/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:cmsis_boot/system_stm32f10x.c ****   
 741:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL2 */
 742:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:cmsis_boot/system_stm32f10x.c ****     {
 746:cmsis_boot/system_stm32f10x.c ****     }
 747:cmsis_boot/system_stm32f10x.c ****     
 748:cmsis_boot/system_stm32f10x.c **** #else    
 749:cmsis_boot/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:cmsis_boot/system_stm32f10x.c **** 
 754:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL */
 755:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:cmsis_boot/system_stm32f10x.c **** 
 757:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:cmsis_boot/system_stm32f10x.c ****     {
 760:cmsis_boot/system_stm32f10x.c ****     }
 761:cmsis_boot/system_stm32f10x.c **** 
 762:cmsis_boot/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:cmsis_boot/system_stm32f10x.c **** 
 766:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:cmsis_boot/system_stm32f10x.c ****     {
 769:cmsis_boot/system_stm32f10x.c ****     }
 770:cmsis_boot/system_stm32f10x.c ****   }
 771:cmsis_boot/system_stm32f10x.c ****   else
 772:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:cmsis_boot/system_stm32f10x.c ****   } 
 775:cmsis_boot/system_stm32f10x.c **** }
ARM GAS  /tmp/cc0MDSTj.s 			page 15


 776:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:cmsis_boot/system_stm32f10x.c **** /**
 778:cmsis_boot/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:cmsis_boot/system_stm32f10x.c ****   * @param  None
 782:cmsis_boot/system_stm32f10x.c ****   * @retval None
 783:cmsis_boot/system_stm32f10x.c ****   */
 784:cmsis_boot/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:cmsis_boot/system_stm32f10x.c **** {
 786:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:cmsis_boot/system_stm32f10x.c ****   
 788:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 790:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:cmsis_boot/system_stm32f10x.c ****  
 792:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:cmsis_boot/system_stm32f10x.c ****   do
 794:cmsis_boot/system_stm32f10x.c ****   {
 795:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
 797:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:cmsis_boot/system_stm32f10x.c **** 
 799:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:cmsis_boot/system_stm32f10x.c ****   {
 801:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:cmsis_boot/system_stm32f10x.c ****   }
 803:cmsis_boot/system_stm32f10x.c ****   else
 804:cmsis_boot/system_stm32f10x.c ****   {
 805:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:cmsis_boot/system_stm32f10x.c ****   }  
 807:cmsis_boot/system_stm32f10x.c **** 
 808:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:cmsis_boot/system_stm32f10x.c ****   {
 810:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:cmsis_boot/system_stm32f10x.c **** 
 813:cmsis_boot/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:cmsis_boot/system_stm32f10x.c ****  
 817:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:cmsis_boot/system_stm32f10x.c ****       
 820:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:cmsis_boot/system_stm32f10x.c ****     
 823:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:cmsis_boot/system_stm32f10x.c ****     
 826:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:cmsis_boot/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:cmsis_boot/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:cmsis_boot/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:cmsis_boot/system_stm32f10x.c ****         
 831:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:cmsis_boot/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
ARM GAS  /tmp/cc0MDSTj.s 			page 16


 833:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:cmsis_boot/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:cmsis_boot/system_stm32f10x.c ****   
 836:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL2 */
 837:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:cmsis_boot/system_stm32f10x.c ****     {
 841:cmsis_boot/system_stm32f10x.c ****     }
 842:cmsis_boot/system_stm32f10x.c ****     
 843:cmsis_boot/system_stm32f10x.c ****    
 844:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:cmsis_boot/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:cmsis_boot/system_stm32f10x.c **** #else    
 849:cmsis_boot/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:cmsis_boot/system_stm32f10x.c **** 
 854:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL */
 855:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:cmsis_boot/system_stm32f10x.c **** 
 857:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:cmsis_boot/system_stm32f10x.c ****     {
 860:cmsis_boot/system_stm32f10x.c ****     }
 861:cmsis_boot/system_stm32f10x.c **** 
 862:cmsis_boot/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:cmsis_boot/system_stm32f10x.c **** 
 866:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:cmsis_boot/system_stm32f10x.c ****     {
 869:cmsis_boot/system_stm32f10x.c ****     }
 870:cmsis_boot/system_stm32f10x.c ****   }
 871:cmsis_boot/system_stm32f10x.c ****   else
 872:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:cmsis_boot/system_stm32f10x.c ****   } 
 875:cmsis_boot/system_stm32f10x.c **** }
 876:cmsis_boot/system_stm32f10x.c **** 
 877:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:cmsis_boot/system_stm32f10x.c **** /**
 879:cmsis_boot/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:cmsis_boot/system_stm32f10x.c ****   * @param  None
 883:cmsis_boot/system_stm32f10x.c ****   * @retval None
 884:cmsis_boot/system_stm32f10x.c ****   */
 885:cmsis_boot/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:cmsis_boot/system_stm32f10x.c **** {
 887:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:cmsis_boot/system_stm32f10x.c ****   
 889:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
ARM GAS  /tmp/cc0MDSTj.s 			page 17


 890:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 891:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:cmsis_boot/system_stm32f10x.c ****  
 893:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:cmsis_boot/system_stm32f10x.c ****   do
 895:cmsis_boot/system_stm32f10x.c ****   {
 896:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
 898:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:cmsis_boot/system_stm32f10x.c **** 
 900:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:cmsis_boot/system_stm32f10x.c ****   {
 902:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:cmsis_boot/system_stm32f10x.c ****   }
 904:cmsis_boot/system_stm32f10x.c ****   else
 905:cmsis_boot/system_stm32f10x.c ****   {
 906:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:cmsis_boot/system_stm32f10x.c ****   }  
 908:cmsis_boot/system_stm32f10x.c **** 
 909:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:cmsis_boot/system_stm32f10x.c ****   {
 911:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:cmsis_boot/system_stm32f10x.c **** 
 914:cmsis_boot/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:cmsis_boot/system_stm32f10x.c ****  
 918:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:cmsis_boot/system_stm32f10x.c ****       
 921:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:cmsis_boot/system_stm32f10x.c ****     
 924:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:cmsis_boot/system_stm32f10x.c **** 
 927:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:cmsis_boot/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:cmsis_boot/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:cmsis_boot/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:cmsis_boot/system_stm32f10x.c ****         
 932:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:cmsis_boot/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:cmsis_boot/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:cmsis_boot/system_stm32f10x.c ****   
 937:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL2 */
 938:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:cmsis_boot/system_stm32f10x.c ****     {
 942:cmsis_boot/system_stm32f10x.c ****     }
 943:cmsis_boot/system_stm32f10x.c ****     
 944:cmsis_boot/system_stm32f10x.c ****    
 945:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
ARM GAS  /tmp/cc0MDSTj.s 			page 18


 947:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:cmsis_boot/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:cmsis_boot/system_stm32f10x.c **** #else     
 950:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:cmsis_boot/system_stm32f10x.c **** 
 954:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:cmsis_boot/system_stm32f10x.c **** 
 956:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL */
 957:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:cmsis_boot/system_stm32f10x.c **** 
 959:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:cmsis_boot/system_stm32f10x.c ****     {
 962:cmsis_boot/system_stm32f10x.c ****     }
 963:cmsis_boot/system_stm32f10x.c **** 
 964:cmsis_boot/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:cmsis_boot/system_stm32f10x.c **** 
 968:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:cmsis_boot/system_stm32f10x.c ****     {
 971:cmsis_boot/system_stm32f10x.c ****     }
 972:cmsis_boot/system_stm32f10x.c ****   }
 973:cmsis_boot/system_stm32f10x.c ****   else
 974:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:cmsis_boot/system_stm32f10x.c ****   } 
 977:cmsis_boot/system_stm32f10x.c **** }
 978:cmsis_boot/system_stm32f10x.c **** 
 979:cmsis_boot/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:cmsis_boot/system_stm32f10x.c **** /**
 981:cmsis_boot/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:cmsis_boot/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:cmsis_boot/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:cmsis_boot/system_stm32f10x.c ****   * @param  None
 985:cmsis_boot/system_stm32f10x.c ****   * @retval None
 986:cmsis_boot/system_stm32f10x.c ****   */
 987:cmsis_boot/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:cmsis_boot/system_stm32f10x.c **** {
  25              		.loc 1 988 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
 989:cmsis_boot/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  33              		.loc 1 989 0
  34 0002 0023     		movs	r3, #0
  35 0004 0193     		str	r3, [sp, #4]
  36 0006 0093     		str	r3, [sp]
 990:cmsis_boot/system_stm32f10x.c ****   
 991:cmsis_boot/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
ARM GAS  /tmp/cc0MDSTj.s 			page 19


 992:cmsis_boot/system_stm32f10x.c ****   /* Enable HSE */    
 993:cmsis_boot/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  37              		.loc 1 993 0
  38 0008 2C4A     		ldr	r2, .L11
  39 000a 1368     		ldr	r3, [r2]
  40 000c 43F48033 		orr	r3, r3, #65536
  41 0010 1360     		str	r3, [r2]
  42              	.L3:
 994:cmsis_boot/system_stm32f10x.c ****  
 995:cmsis_boot/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:cmsis_boot/system_stm32f10x.c ****   do
 997:cmsis_boot/system_stm32f10x.c ****   {
 998:cmsis_boot/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  43              		.loc 1 998 0 discriminator 2
  44 0012 2A4B     		ldr	r3, .L11
  45 0014 1B68     		ldr	r3, [r3]
  46 0016 03F40033 		and	r3, r3, #131072
  47 001a 0093     		str	r3, [sp]
 999:cmsis_boot/system_stm32f10x.c ****     StartUpCounter++;  
  48              		.loc 1 999 0 discriminator 2
  49 001c 019B     		ldr	r3, [sp, #4]
  50 001e 0133     		adds	r3, r3, #1
  51 0020 0193     		str	r3, [sp, #4]
1000:cmsis_boot/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  52              		.loc 1 1000 0 discriminator 2
  53 0022 009B     		ldr	r3, [sp]
  54 0024 1BB9     		cbnz	r3, .L2
  55              		.loc 1 1000 0 is_stmt 0 discriminator 1
  56 0026 019B     		ldr	r3, [sp, #4]
  57 0028 B3F5A06F 		cmp	r3, #1280
  58 002c F1D1     		bne	.L3
  59              	.L2:
1001:cmsis_boot/system_stm32f10x.c **** 
1002:cmsis_boot/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  60              		.loc 1 1002 0 is_stmt 1
  61 002e 234B     		ldr	r3, .L11
  62 0030 1B68     		ldr	r3, [r3]
  63 0032 13F4003F 		tst	r3, #131072
  64 0036 06D0     		beq	.L4
1003:cmsis_boot/system_stm32f10x.c ****   {
1004:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
  65              		.loc 1 1004 0
  66 0038 0123     		movs	r3, #1
  67 003a 0093     		str	r3, [sp]
  68              	.L5:
1005:cmsis_boot/system_stm32f10x.c ****   }
1006:cmsis_boot/system_stm32f10x.c ****   else
1007:cmsis_boot/system_stm32f10x.c ****   {
1008:cmsis_boot/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
1009:cmsis_boot/system_stm32f10x.c ****   }  
1010:cmsis_boot/system_stm32f10x.c **** 
1011:cmsis_boot/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
  69              		.loc 1 1011 0
  70 003c 009B     		ldr	r3, [sp]
  71 003e 012B     		cmp	r3, #1
  72 0040 04D0     		beq	.L10
  73              	.L1:
ARM GAS  /tmp/cc0MDSTj.s 			page 20


1012:cmsis_boot/system_stm32f10x.c ****   {
1013:cmsis_boot/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
1015:cmsis_boot/system_stm32f10x.c **** 
1016:cmsis_boot/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
1018:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
1019:cmsis_boot/system_stm32f10x.c **** 
1020:cmsis_boot/system_stm32f10x.c ****  
1021:cmsis_boot/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
1023:cmsis_boot/system_stm32f10x.c ****       
1024:cmsis_boot/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
1026:cmsis_boot/system_stm32f10x.c ****     
1027:cmsis_boot/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
1029:cmsis_boot/system_stm32f10x.c **** 
1030:cmsis_boot/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:cmsis_boot/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:cmsis_boot/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:cmsis_boot/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:cmsis_boot/system_stm32f10x.c ****         
1035:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:cmsis_boot/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:cmsis_boot/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:cmsis_boot/system_stm32f10x.c ****   
1040:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL2 */
1041:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:cmsis_boot/system_stm32f10x.c ****     {
1045:cmsis_boot/system_stm32f10x.c ****     }
1046:cmsis_boot/system_stm32f10x.c ****     
1047:cmsis_boot/system_stm32f10x.c ****    
1048:cmsis_boot/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:cmsis_boot/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:cmsis_boot/system_stm32f10x.c **** #else    
1053:cmsis_boot/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
1055:cmsis_boot/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
1057:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:cmsis_boot/system_stm32f10x.c **** 
1059:cmsis_boot/system_stm32f10x.c ****     /* Enable PLL */
1060:cmsis_boot/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
1061:cmsis_boot/system_stm32f10x.c **** 
1062:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:cmsis_boot/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
1064:cmsis_boot/system_stm32f10x.c ****     {
1065:cmsis_boot/system_stm32f10x.c ****     }
1066:cmsis_boot/system_stm32f10x.c ****     
1067:cmsis_boot/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
ARM GAS  /tmp/cc0MDSTj.s 			page 21


1069:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
1070:cmsis_boot/system_stm32f10x.c **** 
1071:cmsis_boot/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:cmsis_boot/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
1073:cmsis_boot/system_stm32f10x.c ****     {
1074:cmsis_boot/system_stm32f10x.c ****     }
1075:cmsis_boot/system_stm32f10x.c ****   }
1076:cmsis_boot/system_stm32f10x.c ****   else
1077:cmsis_boot/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:cmsis_boot/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:cmsis_boot/system_stm32f10x.c ****   }
1080:cmsis_boot/system_stm32f10x.c **** }
  74              		.loc 1 1080 0
  75 0042 02B0     		add	sp, sp, #8
  76              	.LCFI1:
  77              		.cfi_remember_state
  78              		.cfi_def_cfa_offset 0
  79              		@ sp needed
  80 0044 7047     		bx	lr
  81              	.L4:
  82              	.LCFI2:
  83              		.cfi_restore_state
1008:cmsis_boot/system_stm32f10x.c ****   }  
  84              		.loc 1 1008 0
  85 0046 0023     		movs	r3, #0
  86 0048 0093     		str	r3, [sp]
  87 004a F7E7     		b	.L5
  88              	.L10:
1014:cmsis_boot/system_stm32f10x.c **** 
  89              		.loc 1 1014 0
  90 004c 1C4B     		ldr	r3, .L11+4
  91 004e 1A68     		ldr	r2, [r3]
  92 0050 42F01002 		orr	r2, r2, #16
  93 0054 1A60     		str	r2, [r3]
1017:cmsis_boot/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
  94              		.loc 1 1017 0
  95 0056 1A68     		ldr	r2, [r3]
  96 0058 22F00302 		bic	r2, r2, #3
  97 005c 1A60     		str	r2, [r3]
1018:cmsis_boot/system_stm32f10x.c **** 
  98              		.loc 1 1018 0
  99 005e 1A68     		ldr	r2, [r3]
 100 0060 42F00202 		orr	r2, r2, #2
 101 0064 1A60     		str	r2, [r3]
1022:cmsis_boot/system_stm32f10x.c ****       
 102              		.loc 1 1022 0
 103 0066 A3F58053 		sub	r3, r3, #4096
 104 006a 5A68     		ldr	r2, [r3, #4]
 105 006c 5A60     		str	r2, [r3, #4]
1025:cmsis_boot/system_stm32f10x.c ****     
 106              		.loc 1 1025 0
 107 006e 5A68     		ldr	r2, [r3, #4]
 108 0070 5A60     		str	r2, [r3, #4]
1028:cmsis_boot/system_stm32f10x.c **** 
 109              		.loc 1 1028 0
 110 0072 5A68     		ldr	r2, [r3, #4]
 111 0074 42F48062 		orr	r2, r2, #1024
ARM GAS  /tmp/cc0MDSTj.s 			page 22


 112 0078 5A60     		str	r2, [r3, #4]
1054:cmsis_boot/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 113              		.loc 1 1054 0
 114 007a 5A68     		ldr	r2, [r3, #4]
 115 007c 22F47C12 		bic	r2, r2, #4128768
 116 0080 5A60     		str	r2, [r3, #4]
1056:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 117              		.loc 1 1056 0
 118 0082 5A68     		ldr	r2, [r3, #4]
 119 0084 42F4E812 		orr	r2, r2, #1900544
 120 0088 5A60     		str	r2, [r3, #4]
1060:cmsis_boot/system_stm32f10x.c **** 
 121              		.loc 1 1060 0
 122 008a 1A68     		ldr	r2, [r3]
 123 008c 42F08072 		orr	r2, r2, #16777216
 124 0090 1A60     		str	r2, [r3]
 125              	.L7:
1063:cmsis_boot/system_stm32f10x.c ****     {
 126              		.loc 1 1063 0 discriminator 1
 127 0092 0A4B     		ldr	r3, .L11
 128 0094 1B68     		ldr	r3, [r3]
 129 0096 13F0007F 		tst	r3, #33554432
 130 009a FAD0     		beq	.L7
1068:cmsis_boot/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 131              		.loc 1 1068 0
 132 009c 074B     		ldr	r3, .L11
 133 009e 5A68     		ldr	r2, [r3, #4]
 134 00a0 22F00302 		bic	r2, r2, #3
 135 00a4 5A60     		str	r2, [r3, #4]
1069:cmsis_boot/system_stm32f10x.c **** 
 136              		.loc 1 1069 0
 137 00a6 5A68     		ldr	r2, [r3, #4]
 138 00a8 42F00202 		orr	r2, r2, #2
 139 00ac 5A60     		str	r2, [r3, #4]
 140              	.L8:
1072:cmsis_boot/system_stm32f10x.c ****     {
 141              		.loc 1 1072 0 discriminator 1
 142 00ae 034B     		ldr	r3, .L11
 143 00b0 5B68     		ldr	r3, [r3, #4]
 144 00b2 03F00C03 		and	r3, r3, #12
 145 00b6 082B     		cmp	r3, #8
 146 00b8 F9D1     		bne	.L8
 147 00ba C2E7     		b	.L1
 148              	.L12:
 149              		.align	2
 150              	.L11:
 151 00bc 00100240 		.word	1073876992
 152 00c0 00200240 		.word	1073881088
 153              		.cfi_endproc
 154              	.LFE59:
 156              		.section	.text.SetSysClock,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	SetSysClock:
ARM GAS  /tmp/cc0MDSTj.s 			page 23


 164              	.LFB58:
 420:cmsis_boot/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 165              		.loc 1 420 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 432:cmsis_boot/system_stm32f10x.c **** #endif
 174              		.loc 1 432 0
 175 0002 FFF7FEFF 		bl	SetSysClockTo72
 176              	.LVL0:
 177 0006 08BD     		pop	{r3, pc}
 178              		.cfi_endproc
 179              	.LFE58:
 181              		.section	.text.SystemInit,"ax",%progbits
 182              		.align	1
 183              		.global	SystemInit
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	SystemInit:
 190              	.LFB56:
 213:cmsis_boot/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 191              		.loc 1 213 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 216:cmsis_boot/system_stm32f10x.c **** 
 200              		.loc 1 216 0
 201 0002 104B     		ldr	r3, .L17
 202 0004 1A68     		ldr	r2, [r3]
 203 0006 42F00102 		orr	r2, r2, #1
 204 000a 1A60     		str	r2, [r3]
 220:cmsis_boot/system_stm32f10x.c **** #else
 205              		.loc 1 220 0
 206 000c 5968     		ldr	r1, [r3, #4]
 207 000e 0E4A     		ldr	r2, .L17+4
 208 0010 0A40     		ands	r2, r2, r1
 209 0012 5A60     		str	r2, [r3, #4]
 226:cmsis_boot/system_stm32f10x.c **** 
 210              		.loc 1 226 0
 211 0014 1A68     		ldr	r2, [r3]
 212 0016 22F08472 		bic	r2, r2, #17301504
 213 001a 22F48032 		bic	r2, r2, #65536
 214 001e 1A60     		str	r2, [r3]
 229:cmsis_boot/system_stm32f10x.c **** 
 215              		.loc 1 229 0
ARM GAS  /tmp/cc0MDSTj.s 			page 24


 216 0020 1A68     		ldr	r2, [r3]
 217 0022 22F48022 		bic	r2, r2, #262144
 218 0026 1A60     		str	r2, [r3]
 232:cmsis_boot/system_stm32f10x.c **** 
 219              		.loc 1 232 0
 220 0028 5A68     		ldr	r2, [r3, #4]
 221 002a 22F4FE02 		bic	r2, r2, #8323072
 222 002e 5A60     		str	r2, [r3, #4]
 251:cmsis_boot/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 223              		.loc 1 251 0
 224 0030 4FF41F02 		mov	r2, #10420224
 225 0034 9A60     		str	r2, [r3, #8]
 262:cmsis_boot/system_stm32f10x.c **** 
 226              		.loc 1 262 0
 227 0036 FFF7FEFF 		bl	SetSysClock
 228              	.LVL1:
 267:cmsis_boot/system_stm32f10x.c **** #endif 
 229              		.loc 1 267 0
 230 003a 4FF00062 		mov	r2, #134217728
 231 003e 034B     		ldr	r3, .L17+8
 232 0040 9A60     		str	r2, [r3, #8]
 233 0042 08BD     		pop	{r3, pc}
 234              	.L18:
 235              		.align	2
 236              	.L17:
 237 0044 00100240 		.word	1073876992
 238 0048 0000FFF8 		.word	-117506048
 239 004c 00ED00E0 		.word	-536810240
 240              		.cfi_endproc
 241              	.LFE56:
 243              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 244              		.align	1
 245              		.global	SystemCoreClockUpdate
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	SystemCoreClockUpdate:
 252              	.LFB57:
 307:cmsis_boot/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 253              		.loc 1 307 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL2:
 319:cmsis_boot/system_stm32f10x.c ****   
 259              		.loc 1 319 0
 260 0000 1F4B     		ldr	r3, .L30
 261 0002 5B68     		ldr	r3, [r3, #4]
 262 0004 03F00C03 		and	r3, r3, #12
 263              	.LVL3:
 321:cmsis_boot/system_stm32f10x.c ****   {
 264              		.loc 1 321 0
 265 0008 042B     		cmp	r3, #4
 266 000a 15D0     		beq	.L21
 267 000c 082B     		cmp	r3, #8
ARM GAS  /tmp/cc0MDSTj.s 			page 25


 268 000e 17D0     		beq	.L22
 269 0010 1BB1     		cbz	r3, .L28
 403:cmsis_boot/system_stm32f10x.c ****       break;
 270              		.loc 1 403 0
 271 0012 1C4A     		ldr	r2, .L30+4
 272 0014 1C4B     		ldr	r3, .L30+8
 273              	.LVL4:
 274 0016 1A60     		str	r2, [r3]
 404:cmsis_boot/system_stm32f10x.c ****   }
 275              		.loc 1 404 0
 276 0018 02E0     		b	.L24
 277              	.LVL5:
 278              	.L28:
 324:cmsis_boot/system_stm32f10x.c ****       break;
 279              		.loc 1 324 0
 280 001a 1A4A     		ldr	r2, .L30+4
 281 001c 1A4B     		ldr	r3, .L30+8
 282              	.LVL6:
 283 001e 1A60     		str	r2, [r3]
 284              	.LVL7:
 285              	.L24:
 409:cmsis_boot/system_stm32f10x.c ****   /* HCLK clock frequency */
 286              		.loc 1 409 0
 287 0020 174B     		ldr	r3, .L30
 288 0022 5B68     		ldr	r3, [r3, #4]
 289 0024 C3F30313 		ubfx	r3, r3, #4, #4
 290 0028 184A     		ldr	r2, .L30+12
 291 002a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 292 002c DAB2     		uxtb	r2, r3
 293              	.LVL8:
 411:cmsis_boot/system_stm32f10x.c **** }
 294              		.loc 1 411 0
 295 002e 1649     		ldr	r1, .L30+8
 296 0030 0B68     		ldr	r3, [r1]
 297 0032 D340     		lsrs	r3, r3, r2
 298 0034 0B60     		str	r3, [r1]
 299 0036 7047     		bx	lr
 300              	.LVL9:
 301              	.L21:
 327:cmsis_boot/system_stm32f10x.c ****       break;
 302              		.loc 1 327 0
 303 0038 124A     		ldr	r2, .L30+4
 304 003a 134B     		ldr	r3, .L30+8
 305              	.LVL10:
 306 003c 1A60     		str	r2, [r3]
 328:cmsis_boot/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 307              		.loc 1 328 0
 308 003e EFE7     		b	.L24
 309              	.LVL11:
 310              	.L22:
 332:cmsis_boot/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 311              		.loc 1 332 0
 312 0040 0F4A     		ldr	r2, .L30
 313 0042 5368     		ldr	r3, [r2, #4]
 314              	.LVL12:
 333:cmsis_boot/system_stm32f10x.c ****       
 315              		.loc 1 333 0
ARM GAS  /tmp/cc0MDSTj.s 			page 26


 316 0044 5268     		ldr	r2, [r2, #4]
 317              	.LVL13:
 336:cmsis_boot/system_stm32f10x.c ****       
 318              		.loc 1 336 0
 319 0046 C3F38343 		ubfx	r3, r3, #18, #4
 320              	.LVL14:
 321 004a 0233     		adds	r3, r3, #2
 322              	.LVL15:
 338:cmsis_boot/system_stm32f10x.c ****       {
 323              		.loc 1 338 0
 324 004c 12F4803F 		tst	r2, #65536
 325 0050 0AD0     		beq	.L29
 351:cmsis_boot/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 326              		.loc 1 351 0
 327 0052 0B4A     		ldr	r2, .L30
 328              	.LVL16:
 329 0054 5268     		ldr	r2, [r2, #4]
 330 0056 12F4003F 		tst	r2, #131072
 331 005a 0BD0     		beq	.L26
 353:cmsis_boot/system_stm32f10x.c ****         }
 332              		.loc 1 353 0
 333 005c 0C4A     		ldr	r2, .L30+16
 334 005e 02FB03F3 		mul	r3, r2, r3
 335              	.LVL17:
 336 0062 094A     		ldr	r2, .L30+8
 337 0064 1360     		str	r3, [r2]
 338 0066 DBE7     		b	.L24
 339              	.LVL18:
 340              	.L29:
 341:cmsis_boot/system_stm32f10x.c ****       }
 341              		.loc 1 341 0
 342 0068 094A     		ldr	r2, .L30+16
 343              	.LVL19:
 344 006a 02FB03F3 		mul	r3, r2, r3
 345              	.LVL20:
 346 006e 064A     		ldr	r2, .L30+8
 347 0070 1360     		str	r3, [r2]
 348 0072 D5E7     		b	.L24
 349              	.LVL21:
 350              	.L26:
 357:cmsis_boot/system_stm32f10x.c ****         }
 351              		.loc 1 357 0
 352 0074 034A     		ldr	r2, .L30+4
 353 0076 02FB03F3 		mul	r3, r2, r3
 354              	.LVL22:
 355 007a 034A     		ldr	r2, .L30+8
 356 007c 1360     		str	r3, [r2]
 357 007e CFE7     		b	.L24
 358              	.L31:
 359              		.align	2
 360              	.L30:
 361 0080 00100240 		.word	1073876992
 362 0084 00127A00 		.word	8000000
 363 0088 00000000 		.word	.LANCHOR0
 364 008c 00000000 		.word	.LANCHOR1
 365 0090 00093D00 		.word	4000000
 366              		.cfi_endproc
ARM GAS  /tmp/cc0MDSTj.s 			page 27


 367              	.LFE57:
 369              		.global	AHBPrescTable
 370              		.global	SystemCoreClock
 371              		.section	.data.AHBPrescTable,"aw",%progbits
 372              		.align	2
 373              		.set	.LANCHOR1,. + 0
 376              	AHBPrescTable:
 377 0000 00       		.byte	0
 378 0001 00       		.byte	0
 379 0002 00       		.byte	0
 380 0003 00       		.byte	0
 381 0004 00       		.byte	0
 382 0005 00       		.byte	0
 383 0006 00       		.byte	0
 384 0007 00       		.byte	0
 385 0008 01       		.byte	1
 386 0009 02       		.byte	2
 387 000a 03       		.byte	3
 388 000b 04       		.byte	4
 389 000c 06       		.byte	6
 390 000d 07       		.byte	7
 391 000e 08       		.byte	8
 392 000f 09       		.byte	9
 393              		.section	.data.SystemCoreClock,"aw",%progbits
 394              		.align	2
 395              		.set	.LANCHOR0,. + 0
 398              	SystemCoreClock:
 399 0000 00A24A04 		.word	72000000
 400              		.text
 401              	.Letext0:
 402              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 403              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 404              		.file 4 "cmsis/core_cm3.h"
 405              		.file 5 "cmsis_boot/system_stm32f10x.h"
 406              		.file 6 "cmsis_boot/stm32f10x.h"
ARM GAS  /tmp/cc0MDSTj.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f10x.c
     /tmp/cc0MDSTj.s:16     .text.SetSysClockTo72:0000000000000000 $t
     /tmp/cc0MDSTj.s:22     .text.SetSysClockTo72:0000000000000000 SetSysClockTo72
     /tmp/cc0MDSTj.s:151    .text.SetSysClockTo72:00000000000000bc $d
     /tmp/cc0MDSTj.s:157    .text.SetSysClock:0000000000000000 $t
     /tmp/cc0MDSTj.s:163    .text.SetSysClock:0000000000000000 SetSysClock
     /tmp/cc0MDSTj.s:182    .text.SystemInit:0000000000000000 $t
     /tmp/cc0MDSTj.s:189    .text.SystemInit:0000000000000000 SystemInit
     /tmp/cc0MDSTj.s:237    .text.SystemInit:0000000000000044 $d
     /tmp/cc0MDSTj.s:244    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cc0MDSTj.s:251    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cc0MDSTj.s:361    .text.SystemCoreClockUpdate:0000000000000080 $d
     /tmp/cc0MDSTj.s:376    .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cc0MDSTj.s:398    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cc0MDSTj.s:372    .data.AHBPrescTable:0000000000000000 $d
     /tmp/cc0MDSTj.s:394    .data.SystemCoreClock:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
