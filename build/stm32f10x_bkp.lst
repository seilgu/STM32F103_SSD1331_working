ARM GAS  /tmp/ccbfLKV7.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_bkp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.BKP_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	BKP_DeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	BKP_DeInit:
  24              	.LFB56:
  25              		.file 1 "stm_lib/src/stm32f10x_bkp.c"
   1:stm_lib/src/stm32f10x_bkp.c **** /**
   2:stm_lib/src/stm32f10x_bkp.c ****   ******************************************************************************
   3:stm_lib/src/stm32f10x_bkp.c ****   * @file    stm32f10x_bkp.c
   4:stm_lib/src/stm32f10x_bkp.c ****   * @author  MCD Application Team
   5:stm_lib/src/stm32f10x_bkp.c ****   * @version V3.5.0
   6:stm_lib/src/stm32f10x_bkp.c ****   * @date    11-March-2011
   7:stm_lib/src/stm32f10x_bkp.c ****   * @brief   This file provides all the BKP firmware functions.
   8:stm_lib/src/stm32f10x_bkp.c ****   ******************************************************************************
   9:stm_lib/src/stm32f10x_bkp.c ****   * @attention
  10:stm_lib/src/stm32f10x_bkp.c ****   *
  11:stm_lib/src/stm32f10x_bkp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:stm_lib/src/stm32f10x_bkp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:stm_lib/src/stm32f10x_bkp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:stm_lib/src/stm32f10x_bkp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:stm_lib/src/stm32f10x_bkp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:stm_lib/src/stm32f10x_bkp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:stm_lib/src/stm32f10x_bkp.c ****   *
  18:stm_lib/src/stm32f10x_bkp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:stm_lib/src/stm32f10x_bkp.c ****   ******************************************************************************
  20:stm_lib/src/stm32f10x_bkp.c ****   */
  21:stm_lib/src/stm32f10x_bkp.c **** 
  22:stm_lib/src/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  23:stm_lib/src/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  24:stm_lib/src/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  25:stm_lib/src/stm32f10x_bkp.c **** 
  26:stm_lib/src/stm32f10x_bkp.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:stm_lib/src/stm32f10x_bkp.c ****   * @{
  28:stm_lib/src/stm32f10x_bkp.c ****   */
  29:stm_lib/src/stm32f10x_bkp.c **** 
  30:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP 
  31:stm_lib/src/stm32f10x_bkp.c ****   * @brief BKP driver modules
  32:stm_lib/src/stm32f10x_bkp.c ****   * @{
  33:stm_lib/src/stm32f10x_bkp.c ****   */
ARM GAS  /tmp/ccbfLKV7.s 			page 2


  34:stm_lib/src/stm32f10x_bkp.c **** 
  35:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_TypesDefinitions
  36:stm_lib/src/stm32f10x_bkp.c ****   * @{
  37:stm_lib/src/stm32f10x_bkp.c ****   */
  38:stm_lib/src/stm32f10x_bkp.c **** 
  39:stm_lib/src/stm32f10x_bkp.c **** /**
  40:stm_lib/src/stm32f10x_bkp.c ****   * @}
  41:stm_lib/src/stm32f10x_bkp.c ****   */
  42:stm_lib/src/stm32f10x_bkp.c **** 
  43:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Defines
  44:stm_lib/src/stm32f10x_bkp.c ****   * @{
  45:stm_lib/src/stm32f10x_bkp.c ****   */
  46:stm_lib/src/stm32f10x_bkp.c **** 
  47:stm_lib/src/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region --------------- */
  48:stm_lib/src/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  49:stm_lib/src/stm32f10x_bkp.c **** 
  50:stm_lib/src/stm32f10x_bkp.c **** /* --- CR Register ----*/
  51:stm_lib/src/stm32f10x_bkp.c **** 
  52:stm_lib/src/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  53:stm_lib/src/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  54:stm_lib/src/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  55:stm_lib/src/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  56:stm_lib/src/stm32f10x_bkp.c **** 
  57:stm_lib/src/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  58:stm_lib/src/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  59:stm_lib/src/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  60:stm_lib/src/stm32f10x_bkp.c **** 
  61:stm_lib/src/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  62:stm_lib/src/stm32f10x_bkp.c **** 
  63:stm_lib/src/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  64:stm_lib/src/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  65:stm_lib/src/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  66:stm_lib/src/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  67:stm_lib/src/stm32f10x_bkp.c **** 
  68:stm_lib/src/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  69:stm_lib/src/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  70:stm_lib/src/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  71:stm_lib/src/stm32f10x_bkp.c **** 
  72:stm_lib/src/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  73:stm_lib/src/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  74:stm_lib/src/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  75:stm_lib/src/stm32f10x_bkp.c **** 
  76:stm_lib/src/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  77:stm_lib/src/stm32f10x_bkp.c **** 
  78:stm_lib/src/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  79:stm_lib/src/stm32f10x_bkp.c **** #define RTCCR_CAL_MASK    ((uint16_t)0xFF80)
  80:stm_lib/src/stm32f10x_bkp.c **** #define RTCCR_MASK        ((uint16_t)0xFC7F)
  81:stm_lib/src/stm32f10x_bkp.c **** 
  82:stm_lib/src/stm32f10x_bkp.c **** /**
  83:stm_lib/src/stm32f10x_bkp.c ****   * @}
  84:stm_lib/src/stm32f10x_bkp.c ****   */ 
  85:stm_lib/src/stm32f10x_bkp.c **** 
  86:stm_lib/src/stm32f10x_bkp.c **** 
  87:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Macros
  88:stm_lib/src/stm32f10x_bkp.c ****   * @{
  89:stm_lib/src/stm32f10x_bkp.c ****   */
  90:stm_lib/src/stm32f10x_bkp.c **** 
ARM GAS  /tmp/ccbfLKV7.s 			page 3


  91:stm_lib/src/stm32f10x_bkp.c **** /**
  92:stm_lib/src/stm32f10x_bkp.c ****   * @}
  93:stm_lib/src/stm32f10x_bkp.c ****   */
  94:stm_lib/src/stm32f10x_bkp.c **** 
  95:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Variables
  96:stm_lib/src/stm32f10x_bkp.c ****   * @{
  97:stm_lib/src/stm32f10x_bkp.c ****   */
  98:stm_lib/src/stm32f10x_bkp.c **** 
  99:stm_lib/src/stm32f10x_bkp.c **** /**
 100:stm_lib/src/stm32f10x_bkp.c ****   * @}
 101:stm_lib/src/stm32f10x_bkp.c ****   */
 102:stm_lib/src/stm32f10x_bkp.c **** 
 103:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_FunctionPrototypes
 104:stm_lib/src/stm32f10x_bkp.c ****   * @{
 105:stm_lib/src/stm32f10x_bkp.c ****   */
 106:stm_lib/src/stm32f10x_bkp.c **** 
 107:stm_lib/src/stm32f10x_bkp.c **** /**
 108:stm_lib/src/stm32f10x_bkp.c ****   * @}
 109:stm_lib/src/stm32f10x_bkp.c ****   */
 110:stm_lib/src/stm32f10x_bkp.c **** 
 111:stm_lib/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Functions
 112:stm_lib/src/stm32f10x_bkp.c ****   * @{
 113:stm_lib/src/stm32f10x_bkp.c ****   */
 114:stm_lib/src/stm32f10x_bkp.c **** 
 115:stm_lib/src/stm32f10x_bkp.c **** /**
 116:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Deinitializes the BKP peripheral registers to their default reset values.
 117:stm_lib/src/stm32f10x_bkp.c ****   * @param  None
 118:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 119:stm_lib/src/stm32f10x_bkp.c ****   */
 120:stm_lib/src/stm32f10x_bkp.c **** void BKP_DeInit(void)
 121:stm_lib/src/stm32f10x_bkp.c **** {
  26              		.loc 1 121 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 122:stm_lib/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  35              		.loc 1 122 0
  36 0002 0120     		movs	r0, #1
  37 0004 FFF7FEFF 		bl	RCC_BackupResetCmd
  38              	.LVL0:
 123:stm_lib/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  39              		.loc 1 123 0
  40 0008 0020     		movs	r0, #0
  41 000a FFF7FEFF 		bl	RCC_BackupResetCmd
  42              	.LVL1:
  43 000e 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
  45              	.LFE56:
  47              		.section	.text.BKP_TamperPinLevelConfig,"ax",%progbits
  48              		.align	1
  49              		.global	BKP_TamperPinLevelConfig
  50              		.syntax unified
ARM GAS  /tmp/ccbfLKV7.s 			page 4


  51              		.thumb
  52              		.thumb_func
  53              		.fpu softvfp
  55              	BKP_TamperPinLevelConfig:
  56              	.LFB57:
 124:stm_lib/src/stm32f10x_bkp.c **** }
 125:stm_lib/src/stm32f10x_bkp.c **** 
 126:stm_lib/src/stm32f10x_bkp.c **** /**
 127:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Configures the Tamper Pin active level.
 128:stm_lib/src/stm32f10x_bkp.c ****   * @param  BKP_TamperPinLevel: specifies the Tamper Pin active level.
 129:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 130:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_High: Tamper pin active on high level
 131:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_Low: Tamper pin active on low level
 132:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 133:stm_lib/src/stm32f10x_bkp.c ****   */
 134:stm_lib/src/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)
 135:stm_lib/src/stm32f10x_bkp.c **** {
  57              		.loc 1 135 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL2:
 136:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 137:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
 138:stm_lib/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPAL_BB = BKP_TamperPinLevel;
  63              		.loc 1 138 0
  64 0000 014B     		ldr	r3, .L4
  65 0002 1860     		str	r0, [r3]
  66 0004 7047     		bx	lr
  67              	.L5:
  68 0006 00BF     		.align	2
  69              	.L4:
  70 0008 04860D42 		.word	1108182532
  71              		.cfi_endproc
  72              	.LFE57:
  74              		.section	.text.BKP_TamperPinCmd,"ax",%progbits
  75              		.align	1
  76              		.global	BKP_TamperPinCmd
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu softvfp
  82              	BKP_TamperPinCmd:
  83              	.LFB58:
 139:stm_lib/src/stm32f10x_bkp.c **** }
 140:stm_lib/src/stm32f10x_bkp.c **** 
 141:stm_lib/src/stm32f10x_bkp.c **** /**
 142:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin activation.
 143:stm_lib/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin activation.
 144:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 145:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 146:stm_lib/src/stm32f10x_bkp.c ****   */
 147:stm_lib/src/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 148:stm_lib/src/stm32f10x_bkp.c **** {
  84              		.loc 1 148 0
  85              		.cfi_startproc
ARM GAS  /tmp/ccbfLKV7.s 			page 5


  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL3:
 149:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 150:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 151:stm_lib/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPE_BB = (uint32_t)NewState;
  90              		.loc 1 151 0
  91 0000 014B     		ldr	r3, .L7
  92 0002 1860     		str	r0, [r3]
  93 0004 7047     		bx	lr
  94              	.L8:
  95 0006 00BF     		.align	2
  96              	.L7:
  97 0008 00860D42 		.word	1108182528
  98              		.cfi_endproc
  99              	.LFE58:
 101              		.section	.text.BKP_ITConfig,"ax",%progbits
 102              		.align	1
 103              		.global	BKP_ITConfig
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	BKP_ITConfig:
 110              	.LFB59:
 152:stm_lib/src/stm32f10x_bkp.c **** }
 153:stm_lib/src/stm32f10x_bkp.c **** 
 154:stm_lib/src/stm32f10x_bkp.c **** /**
 155:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin Interrupt.
 156:stm_lib/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin Interrupt.
 157:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 158:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 159:stm_lib/src/stm32f10x_bkp.c ****   */
 160:stm_lib/src/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 161:stm_lib/src/stm32f10x_bkp.c **** {
 111              		.loc 1 161 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL4:
 162:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 163:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 164:stm_lib/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CSR_TPIE_BB = (uint32_t)NewState;
 117              		.loc 1 164 0
 118 0000 014B     		ldr	r3, .L10
 119 0002 1860     		str	r0, [r3]
 120 0004 7047     		bx	lr
 121              	.L11:
 122 0006 00BF     		.align	2
 123              	.L10:
 124 0008 88860D42 		.word	1108182664
 125              		.cfi_endproc
 126              	.LFE59:
 128              		.section	.text.BKP_RTCOutputConfig,"ax",%progbits
 129              		.align	1
ARM GAS  /tmp/ccbfLKV7.s 			page 6


 130              		.global	BKP_RTCOutputConfig
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu softvfp
 136              	BKP_RTCOutputConfig:
 137              	.LFB60:
 165:stm_lib/src/stm32f10x_bkp.c **** }
 166:stm_lib/src/stm32f10x_bkp.c **** 
 167:stm_lib/src/stm32f10x_bkp.c **** /**
 168:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Select the RTC output source to output on the Tamper pin.
 169:stm_lib/src/stm32f10x_bkp.c ****   * @param  BKP_RTCOutputSource: specifies the RTC output source.
 170:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 171:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 172:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency
 173:stm_lib/src/stm32f10x_bkp.c ****   *                                          divided by 64 on the Tamper pin.
 174:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on
 175:stm_lib/src/stm32f10x_bkp.c ****   *                                     the Tamper pin.
 176:stm_lib/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Second: output the RTC Second pulse signal on
 177:stm_lib/src/stm32f10x_bkp.c ****   *                                      the Tamper pin.  
 178:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 179:stm_lib/src/stm32f10x_bkp.c ****   */
 180:stm_lib/src/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)
 181:stm_lib/src/stm32f10x_bkp.c **** {
 138              		.loc 1 181 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL5:
 182:stm_lib/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 183:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 184:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 185:stm_lib/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 144              		.loc 1 185 0
 145 0000 034A     		ldr	r2, .L13
 146 0002 938D     		ldrh	r3, [r2, #44]
 147 0004 9BB2     		uxth	r3, r3
 148              	.LVL6:
 186:stm_lib/src/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 187:stm_lib/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_MASK;
 149              		.loc 1 187 0
 150 0006 23F46073 		bic	r3, r3, #896
 151              	.LVL7:
 188:stm_lib/src/stm32f10x_bkp.c ****   
 189:stm_lib/src/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
 190:stm_lib/src/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 152              		.loc 1 190 0
 153 000a 1843     		orrs	r0, r0, r3
 154              	.LVL8:
 191:stm_lib/src/stm32f10x_bkp.c ****   /* Store the new value */
 192:stm_lib/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 155              		.loc 1 192 0
 156 000c 9085     		strh	r0, [r2, #44]	@ movhi
 157 000e 7047     		bx	lr
 158              	.L14:
 159              		.align	2
ARM GAS  /tmp/ccbfLKV7.s 			page 7


 160              	.L13:
 161 0010 006C0040 		.word	1073769472
 162              		.cfi_endproc
 163              	.LFE60:
 165              		.section	.text.BKP_SetRTCCalibrationValue,"ax",%progbits
 166              		.align	1
 167              		.global	BKP_SetRTCCalibrationValue
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	BKP_SetRTCCalibrationValue:
 174              	.LFB61:
 193:stm_lib/src/stm32f10x_bkp.c **** }
 194:stm_lib/src/stm32f10x_bkp.c **** 
 195:stm_lib/src/stm32f10x_bkp.c **** /**
 196:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Sets RTC Clock Calibration value.
 197:stm_lib/src/stm32f10x_bkp.c ****   * @param  CalibrationValue: specifies the RTC Clock Calibration value.
 198:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter must be a number between 0 and 0x7F.
 199:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 200:stm_lib/src/stm32f10x_bkp.c ****   */
 201:stm_lib/src/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)
 202:stm_lib/src/stm32f10x_bkp.c **** {
 175              		.loc 1 202 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL9:
 203:stm_lib/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 204:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 205:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 206:stm_lib/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 181              		.loc 1 206 0
 182 0000 034A     		ldr	r2, .L16
 183 0002 938D     		ldrh	r3, [r2, #44]
 184 0004 9BB2     		uxth	r3, r3
 185              	.LVL10:
 207:stm_lib/src/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 208:stm_lib/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_MASK;
 186              		.loc 1 208 0
 187 0006 23F07F03 		bic	r3, r3, #127
 188              	.LVL11:
 209:stm_lib/src/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 210:stm_lib/src/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 189              		.loc 1 210 0
 190 000a 1843     		orrs	r0, r0, r3
 191              	.LVL12:
 211:stm_lib/src/stm32f10x_bkp.c ****   /* Store the new value */
 212:stm_lib/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 192              		.loc 1 212 0
 193 000c 9085     		strh	r0, [r2, #44]	@ movhi
 194 000e 7047     		bx	lr
 195              	.L17:
 196              		.align	2
 197              	.L16:
 198 0010 006C0040 		.word	1073769472
ARM GAS  /tmp/ccbfLKV7.s 			page 8


 199              		.cfi_endproc
 200              	.LFE61:
 202              		.section	.text.BKP_WriteBackupRegister,"ax",%progbits
 203              		.align	1
 204              		.global	BKP_WriteBackupRegister
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	BKP_WriteBackupRegister:
 211              	.LFB62:
 213:stm_lib/src/stm32f10x_bkp.c **** }
 214:stm_lib/src/stm32f10x_bkp.c **** 
 215:stm_lib/src/stm32f10x_bkp.c **** /**
 216:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Writes user data to the specified Data Backup Register.
 217:stm_lib/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 218:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 219:stm_lib/src/stm32f10x_bkp.c ****   * @param  Data: data to write
 220:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 221:stm_lib/src/stm32f10x_bkp.c ****   */
 222:stm_lib/src/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)
 223:stm_lib/src/stm32f10x_bkp.c **** {
 212              		.loc 1 223 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL13:
 218 0000 82B0     		sub	sp, sp, #8
 219              	.LCFI1:
 220              		.cfi_def_cfa_offset 8
 224:stm_lib/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 221              		.loc 1 224 0
 222 0002 0023     		movs	r3, #0
 223 0004 0193     		str	r3, [sp, #4]
 225:stm_lib/src/stm32f10x_bkp.c **** 
 226:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 227:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 228:stm_lib/src/stm32f10x_bkp.c **** 
 229:stm_lib/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 224              		.loc 1 229 0
 225 0006 044B     		ldr	r3, .L20
 226 0008 0193     		str	r3, [sp, #4]
 230:stm_lib/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 227              		.loc 1 230 0
 228 000a 019B     		ldr	r3, [sp, #4]
 229 000c 1844     		add	r0, r0, r3
 230              	.LVL14:
 231 000e 0190     		str	r0, [sp, #4]
 231:stm_lib/src/stm32f10x_bkp.c **** 
 232:stm_lib/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) tmp = Data;
 232              		.loc 1 232 0
 233 0010 019B     		ldr	r3, [sp, #4]
 234 0012 1960     		str	r1, [r3]
 233:stm_lib/src/stm32f10x_bkp.c **** }
 235              		.loc 1 233 0
 236 0014 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccbfLKV7.s 			page 9


 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 0
 239              		@ sp needed
 240 0016 7047     		bx	lr
 241              	.L21:
 242              		.align	2
 243              	.L20:
 244 0018 006C0040 		.word	1073769472
 245              		.cfi_endproc
 246              	.LFE62:
 248              		.section	.text.BKP_ReadBackupRegister,"ax",%progbits
 249              		.align	1
 250              		.global	BKP_ReadBackupRegister
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu softvfp
 256              	BKP_ReadBackupRegister:
 257              	.LFB63:
 234:stm_lib/src/stm32f10x_bkp.c **** 
 235:stm_lib/src/stm32f10x_bkp.c **** /**
 236:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Reads data from the specified Data Backup Register.
 237:stm_lib/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 238:stm_lib/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 239:stm_lib/src/stm32f10x_bkp.c ****   * @retval The content of the specified Data Backup Register
 240:stm_lib/src/stm32f10x_bkp.c ****   */
 241:stm_lib/src/stm32f10x_bkp.c **** uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)
 242:stm_lib/src/stm32f10x_bkp.c **** {
 258              		.loc 1 242 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL15:
 264 0000 82B0     		sub	sp, sp, #8
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 243:stm_lib/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 267              		.loc 1 243 0
 268 0002 0023     		movs	r3, #0
 269 0004 0193     		str	r3, [sp, #4]
 244:stm_lib/src/stm32f10x_bkp.c **** 
 245:stm_lib/src/stm32f10x_bkp.c ****   /* Check the parameters */
 246:stm_lib/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 247:stm_lib/src/stm32f10x_bkp.c **** 
 248:stm_lib/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 270              		.loc 1 248 0
 271 0006 054B     		ldr	r3, .L24
 272 0008 0193     		str	r3, [sp, #4]
 249:stm_lib/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 273              		.loc 1 249 0
 274 000a 019B     		ldr	r3, [sp, #4]
 275 000c 1844     		add	r0, r0, r3
 276              	.LVL16:
 277 000e 0190     		str	r0, [sp, #4]
 250:stm_lib/src/stm32f10x_bkp.c **** 
 251:stm_lib/src/stm32f10x_bkp.c ****   return (*(__IO uint16_t *) tmp);
ARM GAS  /tmp/ccbfLKV7.s 			page 10


 278              		.loc 1 251 0
 279 0010 019B     		ldr	r3, [sp, #4]
 280 0012 1888     		ldrh	r0, [r3]
 252:stm_lib/src/stm32f10x_bkp.c **** }
 281              		.loc 1 252 0
 282 0014 80B2     		uxth	r0, r0
 283 0016 02B0     		add	sp, sp, #8
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 0
 286              		@ sp needed
 287 0018 7047     		bx	lr
 288              	.L25:
 289 001a 00BF     		.align	2
 290              	.L24:
 291 001c 006C0040 		.word	1073769472
 292              		.cfi_endproc
 293              	.LFE63:
 295              		.section	.text.BKP_GetFlagStatus,"ax",%progbits
 296              		.align	1
 297              		.global	BKP_GetFlagStatus
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu softvfp
 303              	BKP_GetFlagStatus:
 304              	.LFB64:
 253:stm_lib/src/stm32f10x_bkp.c **** 
 254:stm_lib/src/stm32f10x_bkp.c **** /**
 255:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Event flag is set or not.
 256:stm_lib/src/stm32f10x_bkp.c ****   * @param  None
 257:stm_lib/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Event flag (SET or RESET).
 258:stm_lib/src/stm32f10x_bkp.c ****   */
 259:stm_lib/src/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 260:stm_lib/src/stm32f10x_bkp.c **** {
 305              		.loc 1 260 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 261:stm_lib/src/stm32f10x_bkp.c ****   return (FlagStatus)(*(__IO uint32_t *) CSR_TEF_BB);
 310              		.loc 1 261 0
 311 0000 014B     		ldr	r3, .L27
 312 0002 1868     		ldr	r0, [r3]
 262:stm_lib/src/stm32f10x_bkp.c **** }
 313              		.loc 1 262 0
 314 0004 C0B2     		uxtb	r0, r0
 315 0006 7047     		bx	lr
 316              	.L28:
 317              		.align	2
 318              	.L27:
 319 0008 A0860D42 		.word	1108182688
 320              		.cfi_endproc
 321              	.LFE64:
 323              		.section	.text.BKP_ClearFlag,"ax",%progbits
 324              		.align	1
 325              		.global	BKP_ClearFlag
 326              		.syntax unified
ARM GAS  /tmp/ccbfLKV7.s 			page 11


 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	BKP_ClearFlag:
 332              	.LFB65:
 263:stm_lib/src/stm32f10x_bkp.c **** 
 264:stm_lib/src/stm32f10x_bkp.c **** /**
 265:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Event pending flag.
 266:stm_lib/src/stm32f10x_bkp.c ****   * @param  None
 267:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 268:stm_lib/src/stm32f10x_bkp.c ****   */
 269:stm_lib/src/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 270:stm_lib/src/stm32f10x_bkp.c **** {
 333              		.loc 1 270 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 271:stm_lib/src/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 272:stm_lib/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTE;
 338              		.loc 1 272 0
 339 0000 034A     		ldr	r2, .L30
 340 0002 938E     		ldrh	r3, [r2, #52]
 341 0004 9BB2     		uxth	r3, r3
 342 0006 43F00103 		orr	r3, r3, #1
 343 000a 9386     		strh	r3, [r2, #52]	@ movhi
 344 000c 7047     		bx	lr
 345              	.L31:
 346 000e 00BF     		.align	2
 347              	.L30:
 348 0010 006C0040 		.word	1073769472
 349              		.cfi_endproc
 350              	.LFE65:
 352              		.section	.text.BKP_GetITStatus,"ax",%progbits
 353              		.align	1
 354              		.global	BKP_GetITStatus
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu softvfp
 360              	BKP_GetITStatus:
 361              	.LFB66:
 273:stm_lib/src/stm32f10x_bkp.c **** }
 274:stm_lib/src/stm32f10x_bkp.c **** 
 275:stm_lib/src/stm32f10x_bkp.c **** /**
 276:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Interrupt has occurred or not.
 277:stm_lib/src/stm32f10x_bkp.c ****   * @param  None
 278:stm_lib/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Interrupt (SET or RESET).
 279:stm_lib/src/stm32f10x_bkp.c ****   */
 280:stm_lib/src/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 281:stm_lib/src/stm32f10x_bkp.c **** {
 362              		.loc 1 281 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 282:stm_lib/src/stm32f10x_bkp.c ****   return (ITStatus)(*(__IO uint32_t *) CSR_TIF_BB);
ARM GAS  /tmp/ccbfLKV7.s 			page 12


 367              		.loc 1 282 0
 368 0000 014B     		ldr	r3, .L33
 369 0002 1868     		ldr	r0, [r3]
 283:stm_lib/src/stm32f10x_bkp.c **** }
 370              		.loc 1 283 0
 371 0004 C0B2     		uxtb	r0, r0
 372 0006 7047     		bx	lr
 373              	.L34:
 374              		.align	2
 375              	.L33:
 376 0008 A4860D42 		.word	1108182692
 377              		.cfi_endproc
 378              	.LFE66:
 380              		.section	.text.BKP_ClearITPendingBit,"ax",%progbits
 381              		.align	1
 382              		.global	BKP_ClearITPendingBit
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu softvfp
 388              	BKP_ClearITPendingBit:
 389              	.LFB67:
 284:stm_lib/src/stm32f10x_bkp.c **** 
 285:stm_lib/src/stm32f10x_bkp.c **** /**
 286:stm_lib/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Interrupt pending bit.
 287:stm_lib/src/stm32f10x_bkp.c ****   * @param  None
 288:stm_lib/src/stm32f10x_bkp.c ****   * @retval None
 289:stm_lib/src/stm32f10x_bkp.c ****   */
 290:stm_lib/src/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 291:stm_lib/src/stm32f10x_bkp.c **** {
 390              		.loc 1 291 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 292:stm_lib/src/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 293:stm_lib/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTI;
 395              		.loc 1 293 0
 396 0000 034A     		ldr	r2, .L36
 397 0002 938E     		ldrh	r3, [r2, #52]
 398 0004 9BB2     		uxth	r3, r3
 399 0006 43F00203 		orr	r3, r3, #2
 400 000a 9386     		strh	r3, [r2, #52]	@ movhi
 401 000c 7047     		bx	lr
 402              	.L37:
 403 000e 00BF     		.align	2
 404              	.L36:
 405 0010 006C0040 		.word	1073769472
 406              		.cfi_endproc
 407              	.LFE67:
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 412              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 413              		.file 4 "cmsis/core_cm3.h"
 414              		.file 5 "cmsis_boot/system_stm32f10x.h"
 415              		.file 6 "stm_lib/inc/stm32f10x.h"
ARM GAS  /tmp/ccbfLKV7.s 			page 13


 416              		.file 7 "stm_lib/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccbfLKV7.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_bkp.c
     /tmp/ccbfLKV7.s:16     .text.BKP_DeInit:0000000000000000 $t
     /tmp/ccbfLKV7.s:23     .text.BKP_DeInit:0000000000000000 BKP_DeInit
     /tmp/ccbfLKV7.s:48     .text.BKP_TamperPinLevelConfig:0000000000000000 $t
     /tmp/ccbfLKV7.s:55     .text.BKP_TamperPinLevelConfig:0000000000000000 BKP_TamperPinLevelConfig
     /tmp/ccbfLKV7.s:70     .text.BKP_TamperPinLevelConfig:0000000000000008 $d
     /tmp/ccbfLKV7.s:75     .text.BKP_TamperPinCmd:0000000000000000 $t
     /tmp/ccbfLKV7.s:82     .text.BKP_TamperPinCmd:0000000000000000 BKP_TamperPinCmd
     /tmp/ccbfLKV7.s:97     .text.BKP_TamperPinCmd:0000000000000008 $d
     /tmp/ccbfLKV7.s:102    .text.BKP_ITConfig:0000000000000000 $t
     /tmp/ccbfLKV7.s:109    .text.BKP_ITConfig:0000000000000000 BKP_ITConfig
     /tmp/ccbfLKV7.s:124    .text.BKP_ITConfig:0000000000000008 $d
     /tmp/ccbfLKV7.s:129    .text.BKP_RTCOutputConfig:0000000000000000 $t
     /tmp/ccbfLKV7.s:136    .text.BKP_RTCOutputConfig:0000000000000000 BKP_RTCOutputConfig
     /tmp/ccbfLKV7.s:161    .text.BKP_RTCOutputConfig:0000000000000010 $d
     /tmp/ccbfLKV7.s:166    .text.BKP_SetRTCCalibrationValue:0000000000000000 $t
     /tmp/ccbfLKV7.s:173    .text.BKP_SetRTCCalibrationValue:0000000000000000 BKP_SetRTCCalibrationValue
     /tmp/ccbfLKV7.s:198    .text.BKP_SetRTCCalibrationValue:0000000000000010 $d
     /tmp/ccbfLKV7.s:203    .text.BKP_WriteBackupRegister:0000000000000000 $t
     /tmp/ccbfLKV7.s:210    .text.BKP_WriteBackupRegister:0000000000000000 BKP_WriteBackupRegister
     /tmp/ccbfLKV7.s:244    .text.BKP_WriteBackupRegister:0000000000000018 $d
     /tmp/ccbfLKV7.s:249    .text.BKP_ReadBackupRegister:0000000000000000 $t
     /tmp/ccbfLKV7.s:256    .text.BKP_ReadBackupRegister:0000000000000000 BKP_ReadBackupRegister
     /tmp/ccbfLKV7.s:291    .text.BKP_ReadBackupRegister:000000000000001c $d
     /tmp/ccbfLKV7.s:296    .text.BKP_GetFlagStatus:0000000000000000 $t
     /tmp/ccbfLKV7.s:303    .text.BKP_GetFlagStatus:0000000000000000 BKP_GetFlagStatus
     /tmp/ccbfLKV7.s:319    .text.BKP_GetFlagStatus:0000000000000008 $d
     /tmp/ccbfLKV7.s:324    .text.BKP_ClearFlag:0000000000000000 $t
     /tmp/ccbfLKV7.s:331    .text.BKP_ClearFlag:0000000000000000 BKP_ClearFlag
     /tmp/ccbfLKV7.s:348    .text.BKP_ClearFlag:0000000000000010 $d
     /tmp/ccbfLKV7.s:353    .text.BKP_GetITStatus:0000000000000000 $t
     /tmp/ccbfLKV7.s:360    .text.BKP_GetITStatus:0000000000000000 BKP_GetITStatus
     /tmp/ccbfLKV7.s:376    .text.BKP_GetITStatus:0000000000000008 $d
     /tmp/ccbfLKV7.s:381    .text.BKP_ClearITPendingBit:0000000000000000 $t
     /tmp/ccbfLKV7.s:388    .text.BKP_ClearITPendingBit:0000000000000000 BKP_ClearITPendingBit
     /tmp/ccbfLKV7.s:405    .text.BKP_ClearITPendingBit:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_BackupResetCmd
