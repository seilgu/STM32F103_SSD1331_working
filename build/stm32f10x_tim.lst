ARM GAS  /tmp/ccu4SMAM.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.TI1_Config,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	TI1_Config:
  23              	.LFB143:
  24              		.file 1 "stm_lib/src/stm32f10x_tim.c"
   1:stm_lib/src/stm32f10x_tim.c **** /**
   2:stm_lib/src/stm32f10x_tim.c ****   ******************************************************************************
   3:stm_lib/src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:stm_lib/src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:stm_lib/src/stm32f10x_tim.c ****   * @version V3.5.0
   6:stm_lib/src/stm32f10x_tim.c ****   * @date    11-March-2011
   7:stm_lib/src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:stm_lib/src/stm32f10x_tim.c ****   ******************************************************************************
   9:stm_lib/src/stm32f10x_tim.c ****   * @attention
  10:stm_lib/src/stm32f10x_tim.c ****   *
  11:stm_lib/src/stm32f10x_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:stm_lib/src/stm32f10x_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:stm_lib/src/stm32f10x_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:stm_lib/src/stm32f10x_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:stm_lib/src/stm32f10x_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:stm_lib/src/stm32f10x_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:stm_lib/src/stm32f10x_tim.c ****   *
  18:stm_lib/src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:stm_lib/src/stm32f10x_tim.c ****   ******************************************************************************
  20:stm_lib/src/stm32f10x_tim.c ****   */
  21:stm_lib/src/stm32f10x_tim.c **** 
  22:stm_lib/src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  23:stm_lib/src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  24:stm_lib/src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  25:stm_lib/src/stm32f10x_tim.c **** 
  26:stm_lib/src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:stm_lib/src/stm32f10x_tim.c ****   * @{
  28:stm_lib/src/stm32f10x_tim.c ****   */
  29:stm_lib/src/stm32f10x_tim.c **** 
  30:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM 
  31:stm_lib/src/stm32f10x_tim.c ****   * @brief TIM driver modules
  32:stm_lib/src/stm32f10x_tim.c ****   * @{
  33:stm_lib/src/stm32f10x_tim.c ****   */
  34:stm_lib/src/stm32f10x_tim.c **** 
ARM GAS  /tmp/ccu4SMAM.s 			page 2


  35:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  36:stm_lib/src/stm32f10x_tim.c ****   * @{
  37:stm_lib/src/stm32f10x_tim.c ****   */
  38:stm_lib/src/stm32f10x_tim.c **** 
  39:stm_lib/src/stm32f10x_tim.c **** /**
  40:stm_lib/src/stm32f10x_tim.c ****   * @}
  41:stm_lib/src/stm32f10x_tim.c ****   */
  42:stm_lib/src/stm32f10x_tim.c **** 
  43:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  44:stm_lib/src/stm32f10x_tim.c ****   * @{
  45:stm_lib/src/stm32f10x_tim.c ****   */
  46:stm_lib/src/stm32f10x_tim.c **** 
  47:stm_lib/src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  48:stm_lib/src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  49:stm_lib/src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  50:stm_lib/src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  51:stm_lib/src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  52:stm_lib/src/stm32f10x_tim.c **** 
  53:stm_lib/src/stm32f10x_tim.c **** /**
  54:stm_lib/src/stm32f10x_tim.c ****   * @}
  55:stm_lib/src/stm32f10x_tim.c ****   */
  56:stm_lib/src/stm32f10x_tim.c **** 
  57:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  58:stm_lib/src/stm32f10x_tim.c ****   * @{
  59:stm_lib/src/stm32f10x_tim.c ****   */
  60:stm_lib/src/stm32f10x_tim.c **** 
  61:stm_lib/src/stm32f10x_tim.c **** /**
  62:stm_lib/src/stm32f10x_tim.c ****   * @}
  63:stm_lib/src/stm32f10x_tim.c ****   */
  64:stm_lib/src/stm32f10x_tim.c **** 
  65:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  66:stm_lib/src/stm32f10x_tim.c ****   * @{
  67:stm_lib/src/stm32f10x_tim.c ****   */
  68:stm_lib/src/stm32f10x_tim.c **** 
  69:stm_lib/src/stm32f10x_tim.c **** /**
  70:stm_lib/src/stm32f10x_tim.c ****   * @}
  71:stm_lib/src/stm32f10x_tim.c ****   */
  72:stm_lib/src/stm32f10x_tim.c **** 
  73:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  74:stm_lib/src/stm32f10x_tim.c ****   * @{
  75:stm_lib/src/stm32f10x_tim.c ****   */
  76:stm_lib/src/stm32f10x_tim.c **** 
  77:stm_lib/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  78:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  79:stm_lib/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  80:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  81:stm_lib/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  82:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  83:stm_lib/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:stm_lib/src/stm32f10x_tim.c **** /**
  86:stm_lib/src/stm32f10x_tim.c ****   * @}
  87:stm_lib/src/stm32f10x_tim.c ****   */
  88:stm_lib/src/stm32f10x_tim.c **** 
  89:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  90:stm_lib/src/stm32f10x_tim.c ****   * @{
  91:stm_lib/src/stm32f10x_tim.c ****   */
ARM GAS  /tmp/ccu4SMAM.s 			page 3


  92:stm_lib/src/stm32f10x_tim.c **** 
  93:stm_lib/src/stm32f10x_tim.c **** /**
  94:stm_lib/src/stm32f10x_tim.c ****   * @}
  95:stm_lib/src/stm32f10x_tim.c ****   */
  96:stm_lib/src/stm32f10x_tim.c **** 
  97:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  98:stm_lib/src/stm32f10x_tim.c ****   * @{
  99:stm_lib/src/stm32f10x_tim.c ****   */
 100:stm_lib/src/stm32f10x_tim.c **** 
 101:stm_lib/src/stm32f10x_tim.c **** /**
 102:stm_lib/src/stm32f10x_tim.c ****   * @}
 103:stm_lib/src/stm32f10x_tim.c ****   */
 104:stm_lib/src/stm32f10x_tim.c **** 
 105:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 106:stm_lib/src/stm32f10x_tim.c ****   * @{
 107:stm_lib/src/stm32f10x_tim.c ****   */
 108:stm_lib/src/stm32f10x_tim.c **** 
 109:stm_lib/src/stm32f10x_tim.c **** /**
 110:stm_lib/src/stm32f10x_tim.c ****   * @}
 111:stm_lib/src/stm32f10x_tim.c ****   */
 112:stm_lib/src/stm32f10x_tim.c **** 
 113:stm_lib/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 114:stm_lib/src/stm32f10x_tim.c ****   * @{
 115:stm_lib/src/stm32f10x_tim.c ****   */
 116:stm_lib/src/stm32f10x_tim.c **** 
 117:stm_lib/src/stm32f10x_tim.c **** /**
 118:stm_lib/src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 119:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 120:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 121:stm_lib/src/stm32f10x_tim.c ****   */
 122:stm_lib/src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 123:stm_lib/src/stm32f10x_tim.c **** {
 124:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 125:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 126:stm_lib/src/stm32f10x_tim.c ****  
 127:stm_lib/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 128:stm_lib/src/stm32f10x_tim.c ****   {
 129:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 130:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 131:stm_lib/src/stm32f10x_tim.c ****   }     
 132:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 133:stm_lib/src/stm32f10x_tim.c ****   {
 134:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 135:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 136:stm_lib/src/stm32f10x_tim.c ****   }
 137:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 138:stm_lib/src/stm32f10x_tim.c ****   {
 139:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 140:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 141:stm_lib/src/stm32f10x_tim.c ****   }
 142:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 143:stm_lib/src/stm32f10x_tim.c ****   {
 144:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 145:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 146:stm_lib/src/stm32f10x_tim.c ****   } 
 147:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 148:stm_lib/src/stm32f10x_tim.c ****   {
ARM GAS  /tmp/ccu4SMAM.s 			page 4


 149:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 150:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 151:stm_lib/src/stm32f10x_tim.c ****   } 
 152:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 153:stm_lib/src/stm32f10x_tim.c ****   {
 154:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 155:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 156:stm_lib/src/stm32f10x_tim.c ****   } 
 157:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 158:stm_lib/src/stm32f10x_tim.c ****   {
 159:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 160:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 161:stm_lib/src/stm32f10x_tim.c ****   } 
 162:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 163:stm_lib/src/stm32f10x_tim.c ****   {
 164:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 165:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 166:stm_lib/src/stm32f10x_tim.c ****   }
 167:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 168:stm_lib/src/stm32f10x_tim.c ****   {      
 169:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 170:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 171:stm_lib/src/stm32f10x_tim.c ****    }  
 172:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 173:stm_lib/src/stm32f10x_tim.c ****   {      
 174:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 175:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 176:stm_lib/src/stm32f10x_tim.c ****   }  
 177:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 178:stm_lib/src/stm32f10x_tim.c ****   {     
 179:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 180:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 181:stm_lib/src/stm32f10x_tim.c ****   }  
 182:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 183:stm_lib/src/stm32f10x_tim.c ****   {      
 184:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 185:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 186:stm_lib/src/stm32f10x_tim.c ****   }  
 187:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 188:stm_lib/src/stm32f10x_tim.c ****   {       
 189:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 190:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 191:stm_lib/src/stm32f10x_tim.c ****   }
 192:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 193:stm_lib/src/stm32f10x_tim.c ****   {       
 194:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 195:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 196:stm_lib/src/stm32f10x_tim.c ****   }        
 197:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 198:stm_lib/src/stm32f10x_tim.c ****   {
 199:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 200:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 201:stm_lib/src/stm32f10x_tim.c ****   } 
 202:stm_lib/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 203:stm_lib/src/stm32f10x_tim.c ****   {
 204:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 205:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
ARM GAS  /tmp/ccu4SMAM.s 			page 5


 206:stm_lib/src/stm32f10x_tim.c ****   } 
 207:stm_lib/src/stm32f10x_tim.c ****   else
 208:stm_lib/src/stm32f10x_tim.c ****   {
 209:stm_lib/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 210:stm_lib/src/stm32f10x_tim.c ****     {
 211:stm_lib/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 212:stm_lib/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 213:stm_lib/src/stm32f10x_tim.c ****     }  
 214:stm_lib/src/stm32f10x_tim.c ****   }
 215:stm_lib/src/stm32f10x_tim.c **** }
 216:stm_lib/src/stm32f10x_tim.c **** 
 217:stm_lib/src/stm32f10x_tim.c **** /**
 218:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 219:stm_lib/src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 220:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 221:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 222:stm_lib/src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 223:stm_lib/src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 224:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 225:stm_lib/src/stm32f10x_tim.c ****   */
 226:stm_lib/src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 227:stm_lib/src/stm32f10x_tim.c **** {
 228:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 229:stm_lib/src/stm32f10x_tim.c **** 
 230:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 231:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 232:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 233:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 234:stm_lib/src/stm32f10x_tim.c **** 
 235:stm_lib/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 236:stm_lib/src/stm32f10x_tim.c **** 
 237:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 238:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 239:stm_lib/src/stm32f10x_tim.c ****   {
 240:stm_lib/src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 241:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 242:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 243:stm_lib/src/stm32f10x_tim.c ****   }
 244:stm_lib/src/stm32f10x_tim.c ****  
 245:stm_lib/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 246:stm_lib/src/stm32f10x_tim.c ****   {
 247:stm_lib/src/stm32f10x_tim.c ****     /* Set the clock division */
 248:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 249:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 250:stm_lib/src/stm32f10x_tim.c ****   }
 251:stm_lib/src/stm32f10x_tim.c **** 
 252:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 253:stm_lib/src/stm32f10x_tim.c **** 
 254:stm_lib/src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 255:stm_lib/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 256:stm_lib/src/stm32f10x_tim.c ****  
 257:stm_lib/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 258:stm_lib/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 259:stm_lib/src/stm32f10x_tim.c ****     
 260:stm_lib/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 261:stm_lib/src/stm32f10x_tim.c ****   {
 262:stm_lib/src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
ARM GAS  /tmp/ccu4SMAM.s 			page 6


 263:stm_lib/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 264:stm_lib/src/stm32f10x_tim.c ****   }
 265:stm_lib/src/stm32f10x_tim.c **** 
 266:stm_lib/src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 267:stm_lib/src/stm32f10x_tim.c ****      values immediately */
 268:stm_lib/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 269:stm_lib/src/stm32f10x_tim.c **** }
 270:stm_lib/src/stm32f10x_tim.c **** 
 271:stm_lib/src/stm32f10x_tim.c **** /**
 272:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 273:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 274:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 275:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 276:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 277:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 278:stm_lib/src/stm32f10x_tim.c ****   */
 279:stm_lib/src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 280:stm_lib/src/stm32f10x_tim.c **** {
 281:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 282:stm_lib/src/stm32f10x_tim.c ****    
 283:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 284:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 285:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 286:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 287:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 288:stm_lib/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 289:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 290:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 291:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 292:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 293:stm_lib/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 294:stm_lib/src/stm32f10x_tim.c ****   
 295:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 296:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 297:stm_lib/src/stm32f10x_tim.c ****     
 298:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 299:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 300:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 301:stm_lib/src/stm32f10x_tim.c **** 
 302:stm_lib/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 303:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 304:stm_lib/src/stm32f10x_tim.c ****   
 305:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 306:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 307:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 308:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 309:stm_lib/src/stm32f10x_tim.c ****   
 310:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output State */
 311:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 312:stm_lib/src/stm32f10x_tim.c ****     
 313:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 314:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 315:stm_lib/src/stm32f10x_tim.c ****   {
 316:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 317:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 318:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 319:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
ARM GAS  /tmp/ccu4SMAM.s 			page 7


 320:stm_lib/src/stm32f10x_tim.c ****     
 321:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 322:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 323:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 324:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 325:stm_lib/src/stm32f10x_tim.c ****     
 326:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 327:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 328:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N State */
 329:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 330:stm_lib/src/stm32f10x_tim.c ****     
 331:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 332:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 333:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 334:stm_lib/src/stm32f10x_tim.c ****     
 335:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 336:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 337:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 338:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 339:stm_lib/src/stm32f10x_tim.c ****   }
 340:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 341:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 342:stm_lib/src/stm32f10x_tim.c ****   
 343:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 344:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 345:stm_lib/src/stm32f10x_tim.c **** 
 346:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 347:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 348:stm_lib/src/stm32f10x_tim.c ****  
 349:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 350:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 351:stm_lib/src/stm32f10x_tim.c **** }
 352:stm_lib/src/stm32f10x_tim.c **** 
 353:stm_lib/src/stm32f10x_tim.c **** /**
 354:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 355:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 356:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 357:stm_lib/src/stm32f10x_tim.c ****   *         the TIM peripheral.
 358:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 359:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 360:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 361:stm_lib/src/stm32f10x_tim.c ****   */
 362:stm_lib/src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 363:stm_lib/src/stm32f10x_tim.c **** {
 364:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 365:stm_lib/src/stm32f10x_tim.c ****    
 366:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 367:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 368:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 369:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 370:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 371:stm_lib/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 372:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 373:stm_lib/src/stm32f10x_tim.c ****   
 374:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
 375:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 376:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
ARM GAS  /tmp/ccu4SMAM.s 			page 8


 377:stm_lib/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 378:stm_lib/src/stm32f10x_tim.c ****   
 379:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 380:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 381:stm_lib/src/stm32f10x_tim.c ****     
 382:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 383:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 384:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 385:stm_lib/src/stm32f10x_tim.c ****   
 386:stm_lib/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 387:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 388:stm_lib/src/stm32f10x_tim.c ****   
 389:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 390:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 391:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 392:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 393:stm_lib/src/stm32f10x_tim.c ****   
 394:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output State */
 395:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 396:stm_lib/src/stm32f10x_tim.c ****     
 397:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 398:stm_lib/src/stm32f10x_tim.c ****   {
 399:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 400:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 401:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 402:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 403:stm_lib/src/stm32f10x_tim.c ****     
 404:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 405:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 406:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 407:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 408:stm_lib/src/stm32f10x_tim.c ****     
 409:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 410:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 411:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N State */
 412:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 413:stm_lib/src/stm32f10x_tim.c ****     
 414:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 415:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 416:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 417:stm_lib/src/stm32f10x_tim.c ****     
 418:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 419:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 420:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 421:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 422:stm_lib/src/stm32f10x_tim.c ****   }
 423:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 424:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 425:stm_lib/src/stm32f10x_tim.c ****   
 426:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 427:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 428:stm_lib/src/stm32f10x_tim.c **** 
 429:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 430:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 431:stm_lib/src/stm32f10x_tim.c ****   
 432:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 433:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
ARM GAS  /tmp/ccu4SMAM.s 			page 9


 434:stm_lib/src/stm32f10x_tim.c **** }
 435:stm_lib/src/stm32f10x_tim.c **** 
 436:stm_lib/src/stm32f10x_tim.c **** /**
 437:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 438:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 439:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 440:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 441:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 442:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 443:stm_lib/src/stm32f10x_tim.c ****   */
 444:stm_lib/src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 445:stm_lib/src/stm32f10x_tim.c **** {
 446:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 447:stm_lib/src/stm32f10x_tim.c ****    
 448:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 449:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 450:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 451:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 452:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 453:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 454:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 455:stm_lib/src/stm32f10x_tim.c ****   
 456:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 457:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 458:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 459:stm_lib/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 460:stm_lib/src/stm32f10x_tim.c ****   
 461:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 462:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 463:stm_lib/src/stm32f10x_tim.c ****     
 464:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 465:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 466:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 467:stm_lib/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 468:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 469:stm_lib/src/stm32f10x_tim.c ****   
 470:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 471:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 472:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 473:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 474:stm_lib/src/stm32f10x_tim.c ****   
 475:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output State */
 476:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 477:stm_lib/src/stm32f10x_tim.c ****     
 478:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 479:stm_lib/src/stm32f10x_tim.c ****   {
 480:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 481:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 482:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 483:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 484:stm_lib/src/stm32f10x_tim.c ****     
 485:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 486:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 487:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 488:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 489:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 490:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
ARM GAS  /tmp/ccu4SMAM.s 			page 10


 491:stm_lib/src/stm32f10x_tim.c ****     
 492:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N State */
 493:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 494:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 495:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 496:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 497:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 498:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 499:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 500:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 501:stm_lib/src/stm32f10x_tim.c ****   }
 502:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 503:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 504:stm_lib/src/stm32f10x_tim.c ****   
 505:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 506:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 507:stm_lib/src/stm32f10x_tim.c **** 
 508:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 509:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 510:stm_lib/src/stm32f10x_tim.c ****   
 511:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 512:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 513:stm_lib/src/stm32f10x_tim.c **** }
 514:stm_lib/src/stm32f10x_tim.c **** 
 515:stm_lib/src/stm32f10x_tim.c **** /**
 516:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 517:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 518:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 519:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 520:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 521:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 522:stm_lib/src/stm32f10x_tim.c ****   */
 523:stm_lib/src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 524:stm_lib/src/stm32f10x_tim.c **** {
 525:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 526:stm_lib/src/stm32f10x_tim.c ****    
 527:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 528:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 529:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 530:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 531:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 532:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 533:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 534:stm_lib/src/stm32f10x_tim.c ****   
 535:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 536:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 537:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 538:stm_lib/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 539:stm_lib/src/stm32f10x_tim.c ****   
 540:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 541:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 542:stm_lib/src/stm32f10x_tim.c ****     
 543:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 544:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 545:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 546:stm_lib/src/stm32f10x_tim.c ****   
 547:stm_lib/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
ARM GAS  /tmp/ccu4SMAM.s 			page 11


 548:stm_lib/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 549:stm_lib/src/stm32f10x_tim.c ****   
 550:stm_lib/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 551:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 552:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 553:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 554:stm_lib/src/stm32f10x_tim.c ****   
 555:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output State */
 556:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 557:stm_lib/src/stm32f10x_tim.c ****     
 558:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 559:stm_lib/src/stm32f10x_tim.c ****   {
 560:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 561:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 562:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 563:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 564:stm_lib/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 565:stm_lib/src/stm32f10x_tim.c ****   }
 566:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 567:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 568:stm_lib/src/stm32f10x_tim.c ****   
 569:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 570:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 571:stm_lib/src/stm32f10x_tim.c **** 
 572:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 573:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 574:stm_lib/src/stm32f10x_tim.c ****   
 575:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 576:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 577:stm_lib/src/stm32f10x_tim.c **** }
 578:stm_lib/src/stm32f10x_tim.c **** 
 579:stm_lib/src/stm32f10x_tim.c **** /**
 580:stm_lib/src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 581:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 582:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 583:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 584:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 585:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 586:stm_lib/src/stm32f10x_tim.c ****   */
 587:stm_lib/src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 588:stm_lib/src/stm32f10x_tim.c **** {
 589:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 590:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 591:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 592:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 593:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 594:stm_lib/src/stm32f10x_tim.c ****   
 595:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 596:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 597:stm_lib/src/stm32f10x_tim.c ****   {
 598:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 599:stm_lib/src/stm32f10x_tim.c ****   }
 600:stm_lib/src/stm32f10x_tim.c ****   else
 601:stm_lib/src/stm32f10x_tim.c ****   {
 602:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
 603:stm_lib/src/stm32f10x_tim.c ****   }
 604:stm_lib/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
ARM GAS  /tmp/ccu4SMAM.s 			page 12


 605:stm_lib/src/stm32f10x_tim.c ****   {
 606:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 607:stm_lib/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 608:stm_lib/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 609:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 610:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 611:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 612:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 613:stm_lib/src/stm32f10x_tim.c ****   }
 614:stm_lib/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 615:stm_lib/src/stm32f10x_tim.c ****   {
 616:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 617:stm_lib/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 618:stm_lib/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 619:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 620:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 621:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 622:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 623:stm_lib/src/stm32f10x_tim.c ****   }
 624:stm_lib/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 625:stm_lib/src/stm32f10x_tim.c ****   {
 626:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 627:stm_lib/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 628:stm_lib/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 629:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 630:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 631:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 632:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 633:stm_lib/src/stm32f10x_tim.c ****   }
 634:stm_lib/src/stm32f10x_tim.c ****   else
 635:stm_lib/src/stm32f10x_tim.c ****   {
 636:stm_lib/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 637:stm_lib/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 638:stm_lib/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 639:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 640:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 641:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 642:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 643:stm_lib/src/stm32f10x_tim.c ****   }
 644:stm_lib/src/stm32f10x_tim.c **** }
 645:stm_lib/src/stm32f10x_tim.c **** 
 646:stm_lib/src/stm32f10x_tim.c **** /**
 647:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 648:stm_lib/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 649:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 650:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 651:stm_lib/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 652:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 653:stm_lib/src/stm32f10x_tim.c ****   */
 654:stm_lib/src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 655:stm_lib/src/stm32f10x_tim.c **** {
 656:stm_lib/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 657:stm_lib/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 658:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 659:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 660:stm_lib/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 661:stm_lib/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
ARM GAS  /tmp/ccu4SMAM.s 			page 13


 662:stm_lib/src/stm32f10x_tim.c ****   {
 663:stm_lib/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 664:stm_lib/src/stm32f10x_tim.c ****   }
 665:stm_lib/src/stm32f10x_tim.c ****   else
 666:stm_lib/src/stm32f10x_tim.c ****   {
 667:stm_lib/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 668:stm_lib/src/stm32f10x_tim.c ****   }
 669:stm_lib/src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 670:stm_lib/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 671:stm_lib/src/stm32f10x_tim.c ****   {
 672:stm_lib/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 673:stm_lib/src/stm32f10x_tim.c ****   }
 674:stm_lib/src/stm32f10x_tim.c ****   else
 675:stm_lib/src/stm32f10x_tim.c ****   {
 676:stm_lib/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 677:stm_lib/src/stm32f10x_tim.c ****   }
 678:stm_lib/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 679:stm_lib/src/stm32f10x_tim.c ****   {
 680:stm_lib/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 681:stm_lib/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 682:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 683:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 684:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 685:stm_lib/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 686:stm_lib/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 687:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 688:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 689:stm_lib/src/stm32f10x_tim.c ****   }
 690:stm_lib/src/stm32f10x_tim.c ****   else
 691:stm_lib/src/stm32f10x_tim.c ****   { 
 692:stm_lib/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 693:stm_lib/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 694:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 695:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 696:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 697:stm_lib/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 698:stm_lib/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 699:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 700:stm_lib/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 701:stm_lib/src/stm32f10x_tim.c ****   }
 702:stm_lib/src/stm32f10x_tim.c **** }
 703:stm_lib/src/stm32f10x_tim.c **** 
 704:stm_lib/src/stm32f10x_tim.c **** /**
 705:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 706:stm_lib/src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 707:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 708:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 709:stm_lib/src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 710:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 711:stm_lib/src/stm32f10x_tim.c ****   */
 712:stm_lib/src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 713:stm_lib/src/stm32f10x_tim.c **** {
 714:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 715:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 716:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 717:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 718:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
ARM GAS  /tmp/ccu4SMAM.s 			page 14


 719:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 720:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 721:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 722:stm_lib/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 723:stm_lib/src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 724:stm_lib/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 725:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 726:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 727:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 728:stm_lib/src/stm32f10x_tim.c **** }
 729:stm_lib/src/stm32f10x_tim.c **** 
 730:stm_lib/src/stm32f10x_tim.c **** /**
 731:stm_lib/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 732:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 733:stm_lib/src/stm32f10x_tim.c ****   *         structure which will be initialized.
 734:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 735:stm_lib/src/stm32f10x_tim.c ****   */
 736:stm_lib/src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 737:stm_lib/src/stm32f10x_tim.c **** {
 738:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 739:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 740:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 741:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 742:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 743:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 744:stm_lib/src/stm32f10x_tim.c **** }
 745:stm_lib/src/stm32f10x_tim.c **** 
 746:stm_lib/src/stm32f10x_tim.c **** /**
 747:stm_lib/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 748:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 749:stm_lib/src/stm32f10x_tim.c ****   *         be initialized.
 750:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 751:stm_lib/src/stm32f10x_tim.c ****   */
 752:stm_lib/src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 753:stm_lib/src/stm32f10x_tim.c **** {
 754:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 755:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 756:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 757:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 758:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 759:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 760:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 761:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 762:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 763:stm_lib/src/stm32f10x_tim.c **** }
 764:stm_lib/src/stm32f10x_tim.c **** 
 765:stm_lib/src/stm32f10x_tim.c **** /**
 766:stm_lib/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 767:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 768:stm_lib/src/stm32f10x_tim.c ****   *         be initialized.
 769:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 770:stm_lib/src/stm32f10x_tim.c ****   */
 771:stm_lib/src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 772:stm_lib/src/stm32f10x_tim.c **** {
 773:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 774:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 775:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
ARM GAS  /tmp/ccu4SMAM.s 			page 15


 776:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 777:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 778:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 779:stm_lib/src/stm32f10x_tim.c **** }
 780:stm_lib/src/stm32f10x_tim.c **** 
 781:stm_lib/src/stm32f10x_tim.c **** /**
 782:stm_lib/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 783:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 784:stm_lib/src/stm32f10x_tim.c ****   *         will be initialized.
 785:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 786:stm_lib/src/stm32f10x_tim.c ****   */
 787:stm_lib/src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 788:stm_lib/src/stm32f10x_tim.c **** {
 789:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 790:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 791:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 792:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 793:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 794:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 795:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 796:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 797:stm_lib/src/stm32f10x_tim.c **** }
 798:stm_lib/src/stm32f10x_tim.c **** 
 799:stm_lib/src/stm32f10x_tim.c **** /**
 800:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 801:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 802:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 803:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 804:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 805:stm_lib/src/stm32f10x_tim.c ****   */
 806:stm_lib/src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 807:stm_lib/src/stm32f10x_tim.c **** {
 808:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 809:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 810:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 811:stm_lib/src/stm32f10x_tim.c ****   
 812:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 813:stm_lib/src/stm32f10x_tim.c ****   {
 814:stm_lib/src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 815:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 816:stm_lib/src/stm32f10x_tim.c ****   }
 817:stm_lib/src/stm32f10x_tim.c ****   else
 818:stm_lib/src/stm32f10x_tim.c ****   {
 819:stm_lib/src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 820:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 821:stm_lib/src/stm32f10x_tim.c ****   }
 822:stm_lib/src/stm32f10x_tim.c **** }
 823:stm_lib/src/stm32f10x_tim.c **** 
 824:stm_lib/src/stm32f10x_tim.c **** /**
 825:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 826:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 827:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 828:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 829:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 830:stm_lib/src/stm32f10x_tim.c ****   */
 831:stm_lib/src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 832:stm_lib/src/stm32f10x_tim.c **** {
ARM GAS  /tmp/ccu4SMAM.s 			page 16


 833:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 834:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 835:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 836:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 837:stm_lib/src/stm32f10x_tim.c ****   {
 838:stm_lib/src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 839:stm_lib/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 840:stm_lib/src/stm32f10x_tim.c ****   }
 841:stm_lib/src/stm32f10x_tim.c ****   else
 842:stm_lib/src/stm32f10x_tim.c ****   {
 843:stm_lib/src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 844:stm_lib/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 845:stm_lib/src/stm32f10x_tim.c ****   }  
 846:stm_lib/src/stm32f10x_tim.c **** }
 847:stm_lib/src/stm32f10x_tim.c **** 
 848:stm_lib/src/stm32f10x_tim.c **** /**
 849:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 850:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 851:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 852:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 853:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 854:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 855:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 856:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 857:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 858:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 859:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 860:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 861:stm_lib/src/stm32f10x_tim.c ****   * @note 
 862:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 863:stm_lib/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 864:stm_lib/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 865:stm_lib/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 866:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 867:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 868:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 869:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 870:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 871:stm_lib/src/stm32f10x_tim.c ****   */
 872:stm_lib/src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 873:stm_lib/src/stm32f10x_tim.c **** {  
 874:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 875:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 876:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 877:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 878:stm_lib/src/stm32f10x_tim.c ****   
 879:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 880:stm_lib/src/stm32f10x_tim.c ****   {
 881:stm_lib/src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 882:stm_lib/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 883:stm_lib/src/stm32f10x_tim.c ****   }
 884:stm_lib/src/stm32f10x_tim.c ****   else
 885:stm_lib/src/stm32f10x_tim.c ****   {
 886:stm_lib/src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 887:stm_lib/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 888:stm_lib/src/stm32f10x_tim.c ****   }
 889:stm_lib/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccu4SMAM.s 			page 17


 890:stm_lib/src/stm32f10x_tim.c **** 
 891:stm_lib/src/stm32f10x_tim.c **** /**
 892:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 893:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 894:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 895:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 896:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 897:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 898:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 899:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 900:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 901:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 902:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 903:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 904:stm_lib/src/stm32f10x_tim.c ****   * @note 
 905:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 906:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 907:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 908:stm_lib/src/stm32f10x_tim.c ****   */
 909:stm_lib/src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 910:stm_lib/src/stm32f10x_tim.c **** { 
 911:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 912:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 913:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 914:stm_lib/src/stm32f10x_tim.c ****   
 915:stm_lib/src/stm32f10x_tim.c ****   /* Set the event sources */
 916:stm_lib/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 917:stm_lib/src/stm32f10x_tim.c **** }
 918:stm_lib/src/stm32f10x_tim.c **** 
 919:stm_lib/src/stm32f10x_tim.c **** /**
 920:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 921:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 922:stm_lib/src/stm32f10x_tim.c ****   *   the TIM peripheral.
 923:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 924:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 925:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 926:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 927:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 928:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 929:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 930:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 931:stm_lib/src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 932:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 933:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 934:stm_lib/src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 935:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 936:stm_lib/src/stm32f10x_tim.c ****   */
 937:stm_lib/src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 938:stm_lib/src/stm32f10x_tim.c **** {
 939:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 940:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 941:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 942:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 943:stm_lib/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 944:stm_lib/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 945:stm_lib/src/stm32f10x_tim.c **** }
 946:stm_lib/src/stm32f10x_tim.c **** 
ARM GAS  /tmp/ccu4SMAM.s 			page 18


 947:stm_lib/src/stm32f10x_tim.c **** /**
 948:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 949:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 950:stm_lib/src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 951:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 952:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 953:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 954:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 955:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 956:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 957:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 958:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 959:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 960:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 961:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 962:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 963:stm_lib/src/stm32f10x_tim.c ****   */
 964:stm_lib/src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 965:stm_lib/src/stm32f10x_tim.c **** { 
 966:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 967:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 968:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 969:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 970:stm_lib/src/stm32f10x_tim.c ****   
 971:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 972:stm_lib/src/stm32f10x_tim.c ****   {
 973:stm_lib/src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 974:stm_lib/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 975:stm_lib/src/stm32f10x_tim.c ****   }
 976:stm_lib/src/stm32f10x_tim.c ****   else
 977:stm_lib/src/stm32f10x_tim.c ****   {
 978:stm_lib/src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 979:stm_lib/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 980:stm_lib/src/stm32f10x_tim.c ****   }
 981:stm_lib/src/stm32f10x_tim.c **** }
 982:stm_lib/src/stm32f10x_tim.c **** 
 983:stm_lib/src/stm32f10x_tim.c **** /**
 984:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 985:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 986:stm_lib/src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 987:stm_lib/src/stm32f10x_tim.c ****   * @retval None
 988:stm_lib/src/stm32f10x_tim.c ****   */
 989:stm_lib/src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 990:stm_lib/src/stm32f10x_tim.c **** {
 991:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 992:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 993:stm_lib/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 994:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 995:stm_lib/src/stm32f10x_tim.c **** }
 996:stm_lib/src/stm32f10x_tim.c **** 
 997:stm_lib/src/stm32f10x_tim.c **** /**
 998:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
 999:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1000:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1001:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1002:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1003:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
ARM GAS  /tmp/ccu4SMAM.s 			page 19


1004:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1005:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1006:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1007:stm_lib/src/stm32f10x_tim.c ****   */
1008:stm_lib/src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1009:stm_lib/src/stm32f10x_tim.c **** {
1010:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1011:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1012:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
1013:stm_lib/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1014:stm_lib/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
1015:stm_lib/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1016:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1017:stm_lib/src/stm32f10x_tim.c **** }
1018:stm_lib/src/stm32f10x_tim.c **** 
1019:stm_lib/src/stm32f10x_tim.c **** /**
1020:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1021:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1022:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1023:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1024:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1025:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1026:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1027:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1028:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1029:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1030:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1031:stm_lib/src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1032:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1033:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1034:stm_lib/src/stm32f10x_tim.c ****   */
1035:stm_lib/src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1036:stm_lib/src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1037:stm_lib/src/stm32f10x_tim.c **** {
1038:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1039:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1040:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
1041:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
1042:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
1043:stm_lib/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1044:stm_lib/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
1045:stm_lib/src/stm32f10x_tim.c ****   {
1046:stm_lib/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1047:stm_lib/src/stm32f10x_tim.c ****   }
1048:stm_lib/src/stm32f10x_tim.c ****   else
1049:stm_lib/src/stm32f10x_tim.c ****   {
1050:stm_lib/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1051:stm_lib/src/stm32f10x_tim.c ****   }
1052:stm_lib/src/stm32f10x_tim.c ****   /* Select the Trigger source */
1053:stm_lib/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
1054:stm_lib/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1055:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1056:stm_lib/src/stm32f10x_tim.c **** }
1057:stm_lib/src/stm32f10x_tim.c **** 
1058:stm_lib/src/stm32f10x_tim.c **** /**
1059:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1060:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
ARM GAS  /tmp/ccu4SMAM.s 			page 20


1061:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1062:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1063:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1064:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1065:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1066:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1067:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1068:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1070:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1071:stm_lib/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1072:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1073:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1074:stm_lib/src/stm32f10x_tim.c ****   */
1075:stm_lib/src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1076:stm_lib/src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1077:stm_lib/src/stm32f10x_tim.c **** {
1078:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1079:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1080:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1081:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1082:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1083:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1084:stm_lib/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1085:stm_lib/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1086:stm_lib/src/stm32f10x_tim.c ****   
1087:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1088:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1089:stm_lib/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1090:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1091:stm_lib/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1092:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
1093:stm_lib/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1094:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1095:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
1096:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1097:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1098:stm_lib/src/stm32f10x_tim.c **** }
1099:stm_lib/src/stm32f10x_tim.c **** 
1100:stm_lib/src/stm32f10x_tim.c **** /**
1101:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1102:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1104:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1105:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1106:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1107:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1108:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1109:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1110:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1112:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1113:stm_lib/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1114:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1115:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1116:stm_lib/src/stm32f10x_tim.c ****   */
1117:stm_lib/src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
ARM GAS  /tmp/ccu4SMAM.s 			page 21


1118:stm_lib/src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1119:stm_lib/src/stm32f10x_tim.c **** {
1120:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1121:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1122:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1123:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1124:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1125:stm_lib/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1126:stm_lib/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1127:stm_lib/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1128:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
1129:stm_lib/src/stm32f10x_tim.c **** }
1130:stm_lib/src/stm32f10x_tim.c **** 
1131:stm_lib/src/stm32f10x_tim.c **** /**
1132:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1133:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1134:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1135:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1136:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1137:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1138:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1139:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1140:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1141:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1143:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1144:stm_lib/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1145:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1146:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1147:stm_lib/src/stm32f10x_tim.c ****   */
1148:stm_lib/src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1149:stm_lib/src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1150:stm_lib/src/stm32f10x_tim.c **** {
1151:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1152:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1153:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1154:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1155:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1156:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1157:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1158:stm_lib/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1159:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
1160:stm_lib/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1161:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
1162:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1163:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1164:stm_lib/src/stm32f10x_tim.c **** }
1165:stm_lib/src/stm32f10x_tim.c **** 
1166:stm_lib/src/stm32f10x_tim.c **** /**
1167:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1168:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1169:stm_lib/src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1170:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1171:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1172:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
1173:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1174:stm_lib/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /tmp/ccu4SMAM.s 			page 22


1175:stm_lib/src/stm32f10x_tim.c ****   */
1176:stm_lib/src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1177:stm_lib/src/stm32f10x_tim.c **** {
1178:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1179:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1180:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
1181:stm_lib/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1182:stm_lib/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
1183:stm_lib/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1184:stm_lib/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
1185:stm_lib/src/stm32f10x_tim.c **** }
1186:stm_lib/src/stm32f10x_tim.c **** 
1187:stm_lib/src/stm32f10x_tim.c **** /**
1188:stm_lib/src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1189:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1190:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1191:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1192:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1193:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1194:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1195:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1196:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1197:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1198:stm_lib/src/stm32f10x_tim.c ****   */
1199:stm_lib/src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1200:stm_lib/src/stm32f10x_tim.c **** {
1201:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
1202:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1203:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1204:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
1205:stm_lib/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
1206:stm_lib/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1207:stm_lib/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
1208:stm_lib/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1209:stm_lib/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
1210:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1211:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
1212:stm_lib/src/stm32f10x_tim.c **** }
1213:stm_lib/src/stm32f10x_tim.c **** 
1214:stm_lib/src/stm32f10x_tim.c **** /**
1215:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1216:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1217:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1218:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1219:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1220:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1221:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1222:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1223:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1224:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1225:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1226:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1227:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1228:stm_lib/src/stm32f10x_tim.c ****   */
1229:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1230:stm_lib/src/stm32f10x_tim.c **** {
1231:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
ARM GAS  /tmp/ccu4SMAM.s 			page 23


1232:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1233:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1234:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
1235:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1236:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1237:stm_lib/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1238:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1239:stm_lib/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1240:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
1241:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1242:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1243:stm_lib/src/stm32f10x_tim.c **** }
1244:stm_lib/src/stm32f10x_tim.c **** 
1245:stm_lib/src/stm32f10x_tim.c **** /**
1246:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1247:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1248:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1249:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1250:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1251:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1252:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1253:stm_lib/src/stm32f10x_tim.c ****   *                                on the level of the other input.
1254:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1255:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1257:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1258:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1259:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1260:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1261:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1262:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1263:stm_lib/src/stm32f10x_tim.c ****   */
1264:stm_lib/src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1265:stm_lib/src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1266:stm_lib/src/stm32f10x_tim.c **** {
1267:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1268:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1269:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1270:stm_lib/src/stm32f10x_tim.c ****     
1271:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1272:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1273:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
1274:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
1275:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
1276:stm_lib/src/stm32f10x_tim.c **** 
1277:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1278:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1279:stm_lib/src/stm32f10x_tim.c ****   
1280:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1281:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1282:stm_lib/src/stm32f10x_tim.c ****   
1283:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1284:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1285:stm_lib/src/stm32f10x_tim.c ****   
1286:stm_lib/src/stm32f10x_tim.c ****   /* Set the encoder Mode */
1287:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1288:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
ARM GAS  /tmp/ccu4SMAM.s 			page 24


1289:stm_lib/src/stm32f10x_tim.c ****   
1290:stm_lib/src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1291:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
1292:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
1293:stm_lib/src/stm32f10x_tim.c ****   
1294:stm_lib/src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1295:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
1296:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
1297:stm_lib/src/stm32f10x_tim.c ****   
1298:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1299:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1300:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1301:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1302:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1303:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1304:stm_lib/src/stm32f10x_tim.c **** }
1305:stm_lib/src/stm32f10x_tim.c **** 
1306:stm_lib/src/stm32f10x_tim.c **** /**
1307:stm_lib/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1308:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1309:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1310:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1311:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1312:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1313:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1314:stm_lib/src/stm32f10x_tim.c ****   */
1315:stm_lib/src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1316:stm_lib/src/stm32f10x_tim.c **** {
1317:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1318:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1319:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1320:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1321:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1322:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1323:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
1324:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1325:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1326:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1327:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1328:stm_lib/src/stm32f10x_tim.c **** }
1329:stm_lib/src/stm32f10x_tim.c **** 
1330:stm_lib/src/stm32f10x_tim.c **** /**
1331:stm_lib/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1332:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1333:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1334:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1335:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1336:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1337:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1338:stm_lib/src/stm32f10x_tim.c ****   */
1339:stm_lib/src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1340:stm_lib/src/stm32f10x_tim.c **** {
1341:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1342:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1343:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1344:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1345:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
ARM GAS  /tmp/ccu4SMAM.s 			page 25


1346:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1347:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
1348:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1349:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1350:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1351:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1352:stm_lib/src/stm32f10x_tim.c **** }
1353:stm_lib/src/stm32f10x_tim.c **** 
1354:stm_lib/src/stm32f10x_tim.c **** /**
1355:stm_lib/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1356:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1357:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1358:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1359:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1360:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1361:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1362:stm_lib/src/stm32f10x_tim.c ****   */
1363:stm_lib/src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1364:stm_lib/src/stm32f10x_tim.c **** {
1365:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1366:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1367:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1368:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1369:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1370:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1371:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
1372:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1373:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1374:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1375:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1376:stm_lib/src/stm32f10x_tim.c **** }
1377:stm_lib/src/stm32f10x_tim.c **** 
1378:stm_lib/src/stm32f10x_tim.c **** /**
1379:stm_lib/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1380:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1381:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1382:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1383:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1384:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1385:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1386:stm_lib/src/stm32f10x_tim.c ****   */
1387:stm_lib/src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1388:stm_lib/src/stm32f10x_tim.c **** {
1389:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1390:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1391:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1392:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1393:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1394:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1395:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
1396:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1397:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1398:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1399:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1400:stm_lib/src/stm32f10x_tim.c **** }
1401:stm_lib/src/stm32f10x_tim.c **** 
1402:stm_lib/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccu4SMAM.s 			page 26


1403:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1404:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1405:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1406:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1407:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1408:stm_lib/src/stm32f10x_tim.c ****   */
1409:stm_lib/src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1410:stm_lib/src/stm32f10x_tim.c **** {
1411:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1412:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1413:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1414:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1415:stm_lib/src/stm32f10x_tim.c ****   {
1416:stm_lib/src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1417:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
1418:stm_lib/src/stm32f10x_tim.c ****   }
1419:stm_lib/src/stm32f10x_tim.c ****   else
1420:stm_lib/src/stm32f10x_tim.c ****   {
1421:stm_lib/src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1422:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
1423:stm_lib/src/stm32f10x_tim.c ****   }
1424:stm_lib/src/stm32f10x_tim.c **** }
1425:stm_lib/src/stm32f10x_tim.c **** 
1426:stm_lib/src/stm32f10x_tim.c **** /**
1427:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1428:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1429:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1430:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1431:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1432:stm_lib/src/stm32f10x_tim.c ****   */
1433:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1434:stm_lib/src/stm32f10x_tim.c **** {
1435:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1436:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1437:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1438:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1439:stm_lib/src/stm32f10x_tim.c ****   {
1440:stm_lib/src/stm32f10x_tim.c ****     /* Set the COM Bit */
1441:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
1442:stm_lib/src/stm32f10x_tim.c ****   }
1443:stm_lib/src/stm32f10x_tim.c ****   else
1444:stm_lib/src/stm32f10x_tim.c ****   {
1445:stm_lib/src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1446:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
1447:stm_lib/src/stm32f10x_tim.c ****   }
1448:stm_lib/src/stm32f10x_tim.c **** }
1449:stm_lib/src/stm32f10x_tim.c **** 
1450:stm_lib/src/stm32f10x_tim.c **** /**
1451:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1452:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1453:stm_lib/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1454:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1455:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1456:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1457:stm_lib/src/stm32f10x_tim.c ****   */
1458:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1459:stm_lib/src/stm32f10x_tim.c **** {
ARM GAS  /tmp/ccu4SMAM.s 			page 27


1460:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1461:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1462:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1463:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1464:stm_lib/src/stm32f10x_tim.c ****   {
1465:stm_lib/src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1466:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
1467:stm_lib/src/stm32f10x_tim.c ****   }
1468:stm_lib/src/stm32f10x_tim.c ****   else
1469:stm_lib/src/stm32f10x_tim.c ****   {
1470:stm_lib/src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1471:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
1472:stm_lib/src/stm32f10x_tim.c ****   }
1473:stm_lib/src/stm32f10x_tim.c **** }
1474:stm_lib/src/stm32f10x_tim.c **** 
1475:stm_lib/src/stm32f10x_tim.c **** /**
1476:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1477:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1478:stm_lib/src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1479:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1480:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1481:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1482:stm_lib/src/stm32f10x_tim.c ****   */
1483:stm_lib/src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1484:stm_lib/src/stm32f10x_tim.c **** { 
1485:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1486:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1487:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1488:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1489:stm_lib/src/stm32f10x_tim.c ****   {
1490:stm_lib/src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1491:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
1492:stm_lib/src/stm32f10x_tim.c ****   }
1493:stm_lib/src/stm32f10x_tim.c ****   else
1494:stm_lib/src/stm32f10x_tim.c ****   {
1495:stm_lib/src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1496:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
1497:stm_lib/src/stm32f10x_tim.c ****   }
1498:stm_lib/src/stm32f10x_tim.c **** }
1499:stm_lib/src/stm32f10x_tim.c **** 
1500:stm_lib/src/stm32f10x_tim.c **** /**
1501:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1502:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1503:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1504:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1505:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1506:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1507:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1508:stm_lib/src/stm32f10x_tim.c ****   */
1509:stm_lib/src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1510:stm_lib/src/stm32f10x_tim.c **** {
1511:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1512:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1513:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1514:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1515:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1516:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
ARM GAS  /tmp/ccu4SMAM.s 			page 28


1517:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
1518:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1519:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1520:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1521:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1522:stm_lib/src/stm32f10x_tim.c **** }
1523:stm_lib/src/stm32f10x_tim.c **** 
1524:stm_lib/src/stm32f10x_tim.c **** /**
1525:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1526:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1527:stm_lib/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1528:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1529:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1530:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1531:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1532:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1533:stm_lib/src/stm32f10x_tim.c ****   */
1534:stm_lib/src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1535:stm_lib/src/stm32f10x_tim.c **** {
1536:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1537:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1538:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1539:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1540:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1541:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1542:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
1543:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1544:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1545:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1546:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1547:stm_lib/src/stm32f10x_tim.c **** }
1548:stm_lib/src/stm32f10x_tim.c **** 
1549:stm_lib/src/stm32f10x_tim.c **** /**
1550:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1551:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1552:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1553:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1554:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1555:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1556:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1557:stm_lib/src/stm32f10x_tim.c ****   */
1558:stm_lib/src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1559:stm_lib/src/stm32f10x_tim.c **** {
1560:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1561:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1562:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1563:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1564:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1566:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
1567:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1568:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1569:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1570:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1571:stm_lib/src/stm32f10x_tim.c **** }
1572:stm_lib/src/stm32f10x_tim.c **** 
1573:stm_lib/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccu4SMAM.s 			page 29


1574:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1575:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1576:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1577:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1578:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1579:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1580:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1581:stm_lib/src/stm32f10x_tim.c ****   */
1582:stm_lib/src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1583:stm_lib/src/stm32f10x_tim.c **** {
1584:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1585:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1586:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1587:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1588:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1589:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1590:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
1591:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1592:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1593:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1594:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1595:stm_lib/src/stm32f10x_tim.c **** }
1596:stm_lib/src/stm32f10x_tim.c **** 
1597:stm_lib/src/stm32f10x_tim.c **** /**
1598:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1599:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1600:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1601:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1602:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1603:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1604:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1605:stm_lib/src/stm32f10x_tim.c ****   */
1606:stm_lib/src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1607:stm_lib/src/stm32f10x_tim.c **** {
1608:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1609:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1610:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1611:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1612:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1613:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1614:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1615:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
1616:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1617:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
1618:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1619:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1620:stm_lib/src/stm32f10x_tim.c **** }
1621:stm_lib/src/stm32f10x_tim.c **** 
1622:stm_lib/src/stm32f10x_tim.c **** /**
1623:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1624:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1625:stm_lib/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1626:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1627:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1628:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1629:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1630:stm_lib/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /tmp/ccu4SMAM.s 			page 30


1631:stm_lib/src/stm32f10x_tim.c ****   */
1632:stm_lib/src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1633:stm_lib/src/stm32f10x_tim.c **** {
1634:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1635:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1636:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1637:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1638:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1639:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1640:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1641:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
1642:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1643:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1644:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1645:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1646:stm_lib/src/stm32f10x_tim.c **** }
1647:stm_lib/src/stm32f10x_tim.c **** 
1648:stm_lib/src/stm32f10x_tim.c **** /**
1649:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1650:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1651:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1652:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1653:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1654:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1655:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1656:stm_lib/src/stm32f10x_tim.c ****   */
1657:stm_lib/src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1658:stm_lib/src/stm32f10x_tim.c **** {
1659:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1660:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1661:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1662:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1663:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1664:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1665:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1666:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
1667:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1668:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
1669:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1670:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1671:stm_lib/src/stm32f10x_tim.c **** }
1672:stm_lib/src/stm32f10x_tim.c **** 
1673:stm_lib/src/stm32f10x_tim.c **** /**
1674:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1675:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1676:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1677:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1678:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1679:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1680:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1681:stm_lib/src/stm32f10x_tim.c ****   */
1682:stm_lib/src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1683:stm_lib/src/stm32f10x_tim.c **** {
1684:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1685:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1686:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1687:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
ARM GAS  /tmp/ccu4SMAM.s 			page 31


1688:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1689:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1690:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1691:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
1692:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1693:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1694:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1695:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1696:stm_lib/src/stm32f10x_tim.c **** }
1697:stm_lib/src/stm32f10x_tim.c **** 
1698:stm_lib/src/stm32f10x_tim.c **** /**
1699:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1700:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1701:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1702:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1703:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1704:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1705:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1706:stm_lib/src/stm32f10x_tim.c ****   */
1707:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1708:stm_lib/src/stm32f10x_tim.c **** {
1709:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1710:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1711:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1712:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1713:stm_lib/src/stm32f10x_tim.c **** 
1714:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1715:stm_lib/src/stm32f10x_tim.c **** 
1716:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1717:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
1718:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1719:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
1720:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1721:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1722:stm_lib/src/stm32f10x_tim.c **** }
1723:stm_lib/src/stm32f10x_tim.c **** 
1724:stm_lib/src/stm32f10x_tim.c **** /**
1725:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1726:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1727:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1728:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1729:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1730:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1731:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1732:stm_lib/src/stm32f10x_tim.c ****   */
1733:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1734:stm_lib/src/stm32f10x_tim.c **** {
1735:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1736:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1737:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1738:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1739:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1740:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1741:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
1742:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1743:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1744:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
ARM GAS  /tmp/ccu4SMAM.s 			page 32


1745:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1746:stm_lib/src/stm32f10x_tim.c **** }
1747:stm_lib/src/stm32f10x_tim.c **** 
1748:stm_lib/src/stm32f10x_tim.c **** /**
1749:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1750:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1751:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1752:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1753:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1754:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1755:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1756:stm_lib/src/stm32f10x_tim.c ****   */
1757:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1758:stm_lib/src/stm32f10x_tim.c **** {
1759:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1760:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1761:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1762:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1763:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1764:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1765:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
1766:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1767:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
1768:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1769:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1770:stm_lib/src/stm32f10x_tim.c **** }
1771:stm_lib/src/stm32f10x_tim.c **** 
1772:stm_lib/src/stm32f10x_tim.c **** /**
1773:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1774:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1775:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1776:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1777:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1778:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1779:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1780:stm_lib/src/stm32f10x_tim.c ****   */
1781:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1782:stm_lib/src/stm32f10x_tim.c **** {
1783:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1784:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1785:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1786:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1787:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1788:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1789:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
1790:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1791:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1792:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1793:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1794:stm_lib/src/stm32f10x_tim.c **** }
1795:stm_lib/src/stm32f10x_tim.c **** 
1796:stm_lib/src/stm32f10x_tim.c **** /**
1797:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1798:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1799:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1800:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1801:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
ARM GAS  /tmp/ccu4SMAM.s 			page 33


1802:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1803:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1804:stm_lib/src/stm32f10x_tim.c ****   */
1805:stm_lib/src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1806:stm_lib/src/stm32f10x_tim.c **** {
1807:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1808:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1809:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1810:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1811:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1812:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1813:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
1814:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
1815:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1816:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1817:stm_lib/src/stm32f10x_tim.c **** }
1818:stm_lib/src/stm32f10x_tim.c **** 
1819:stm_lib/src/stm32f10x_tim.c **** /**
1820:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1821:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1822:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1823:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1824:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1825:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1826:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1827:stm_lib/src/stm32f10x_tim.c ****   */
1828:stm_lib/src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1829:stm_lib/src/stm32f10x_tim.c **** {
1830:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1831:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1832:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1833:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1834:stm_lib/src/stm32f10x_tim.c ****    
1835:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1836:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1837:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
1838:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
1839:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1840:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1841:stm_lib/src/stm32f10x_tim.c **** }
1842:stm_lib/src/stm32f10x_tim.c **** 
1843:stm_lib/src/stm32f10x_tim.c **** /**
1844:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1845:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1846:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1847:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1848:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1849:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1850:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1851:stm_lib/src/stm32f10x_tim.c ****   */
1852:stm_lib/src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1853:stm_lib/src/stm32f10x_tim.c **** {
1854:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1855:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1856:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1857:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1858:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccu4SMAM.s 			page 34


1859:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1860:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
1861:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1862:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1863:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1864:stm_lib/src/stm32f10x_tim.c **** }
1865:stm_lib/src/stm32f10x_tim.c **** 
1866:stm_lib/src/stm32f10x_tim.c **** /**
1867:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1868:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1869:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1870:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1871:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1872:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1873:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1874:stm_lib/src/stm32f10x_tim.c ****   */
1875:stm_lib/src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1876:stm_lib/src/stm32f10x_tim.c **** {
1877:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1878:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1879:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1880:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1881:stm_lib/src/stm32f10x_tim.c ****   
1882:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1883:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1884:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
1885:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1886:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1887:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1888:stm_lib/src/stm32f10x_tim.c **** }
1889:stm_lib/src/stm32f10x_tim.c **** 
1890:stm_lib/src/stm32f10x_tim.c **** /**
1891:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1892:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1893:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1894:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1895:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1896:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1897:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1898:stm_lib/src/stm32f10x_tim.c ****   */
1899:stm_lib/src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1900:stm_lib/src/stm32f10x_tim.c **** {
1901:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1902:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1903:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1904:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1905:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1906:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1907:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
1908:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1909:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1910:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1911:stm_lib/src/stm32f10x_tim.c **** }
1912:stm_lib/src/stm32f10x_tim.c **** 
1913:stm_lib/src/stm32f10x_tim.c **** /**
1914:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1915:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
ARM GAS  /tmp/ccu4SMAM.s 			page 35


1916:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1917:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1918:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1919:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1920:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1921:stm_lib/src/stm32f10x_tim.c ****   */
1922:stm_lib/src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1923:stm_lib/src/stm32f10x_tim.c **** {
1924:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1925:stm_lib/src/stm32f10x_tim.c ****  
1926:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1927:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1928:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1929:stm_lib/src/stm32f10x_tim.c ****     
1930:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1931:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1932:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
1933:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1934:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1935:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1936:stm_lib/src/stm32f10x_tim.c **** }
1937:stm_lib/src/stm32f10x_tim.c **** 
1938:stm_lib/src/stm32f10x_tim.c **** /**
1939:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1940:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1941:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1942:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1943:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1944:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1945:stm_lib/src/stm32f10x_tim.c ****   * @retval None
1946:stm_lib/src/stm32f10x_tim.c ****   */
1947:stm_lib/src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1948:stm_lib/src/stm32f10x_tim.c **** {
1949:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1950:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1951:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1952:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1953:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1954:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1955:stm_lib/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
1956:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1957:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1958:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1959:stm_lib/src/stm32f10x_tim.c **** }
1960:stm_lib/src/stm32f10x_tim.c **** 
1961:stm_lib/src/stm32f10x_tim.c **** /**
1962:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1963:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1964:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1965:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1966:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1967:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1968:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1969:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1970:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1971:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1972:stm_lib/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /tmp/ccu4SMAM.s 			page 36


1973:stm_lib/src/stm32f10x_tim.c ****   */
1974:stm_lib/src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1975:stm_lib/src/stm32f10x_tim.c **** {
1976:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
1977:stm_lib/src/stm32f10x_tim.c **** 
1978:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
1979:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1980:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1981:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1982:stm_lib/src/stm32f10x_tim.c **** 
1983:stm_lib/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
1984:stm_lib/src/stm32f10x_tim.c **** 
1985:stm_lib/src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1986:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1987:stm_lib/src/stm32f10x_tim.c **** 
1988:stm_lib/src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1989:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1990:stm_lib/src/stm32f10x_tim.c **** }
1991:stm_lib/src/stm32f10x_tim.c **** 
1992:stm_lib/src/stm32f10x_tim.c **** /**
1993:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1994:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1995:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1996:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1997:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1998:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1999:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2000:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2001:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2002:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2003:stm_lib/src/stm32f10x_tim.c ****   */
2004:stm_lib/src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2005:stm_lib/src/stm32f10x_tim.c **** {
2006:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
2007:stm_lib/src/stm32f10x_tim.c **** 
2008:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2009:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2010:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2011:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2012:stm_lib/src/stm32f10x_tim.c **** 
2013:stm_lib/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
2014:stm_lib/src/stm32f10x_tim.c **** 
2015:stm_lib/src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2016:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
2017:stm_lib/src/stm32f10x_tim.c **** 
2018:stm_lib/src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2019:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
2020:stm_lib/src/stm32f10x_tim.c **** }
2021:stm_lib/src/stm32f10x_tim.c **** 
2022:stm_lib/src/stm32f10x_tim.c **** /**
2023:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2024:stm_lib/src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2025:stm_lib/src/stm32f10x_tim.c ****   *         Compare Mode.
2026:stm_lib/src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2027:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2028:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2029:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
ARM GAS  /tmp/ccu4SMAM.s 			page 37


2030:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2031:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2032:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2033:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2034:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2035:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2037:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2038:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2039:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2040:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2041:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2042:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2043:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2044:stm_lib/src/stm32f10x_tim.c ****   */
2045:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2046:stm_lib/src/stm32f10x_tim.c **** {
2047:stm_lib/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
2048:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
2049:stm_lib/src/stm32f10x_tim.c **** 
2050:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2051:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2052:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2053:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
2054:stm_lib/src/stm32f10x_tim.c **** 
2055:stm_lib/src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
2056:stm_lib/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
2057:stm_lib/src/stm32f10x_tim.c **** 
2058:stm_lib/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
2059:stm_lib/src/stm32f10x_tim.c **** 
2060:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2061:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
2062:stm_lib/src/stm32f10x_tim.c **** 
2063:stm_lib/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
2064:stm_lib/src/stm32f10x_tim.c ****   {
2065:stm_lib/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
2066:stm_lib/src/stm32f10x_tim.c **** 
2067:stm_lib/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2068:stm_lib/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
2069:stm_lib/src/stm32f10x_tim.c ****    
2070:stm_lib/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2071:stm_lib/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
2072:stm_lib/src/stm32f10x_tim.c ****   }
2073:stm_lib/src/stm32f10x_tim.c ****   else
2074:stm_lib/src/stm32f10x_tim.c ****   {
2075:stm_lib/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
2076:stm_lib/src/stm32f10x_tim.c **** 
2077:stm_lib/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2078:stm_lib/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
2079:stm_lib/src/stm32f10x_tim.c ****     
2080:stm_lib/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2081:stm_lib/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
2082:stm_lib/src/stm32f10x_tim.c ****   }
2083:stm_lib/src/stm32f10x_tim.c **** }
2084:stm_lib/src/stm32f10x_tim.c **** 
2085:stm_lib/src/stm32f10x_tim.c **** /**
2086:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
ARM GAS  /tmp/ccu4SMAM.s 			page 38


2087:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2088:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2089:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2090:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2091:stm_lib/src/stm32f10x_tim.c ****   */
2092:stm_lib/src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2093:stm_lib/src/stm32f10x_tim.c **** {
2094:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2095:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2096:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2097:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2098:stm_lib/src/stm32f10x_tim.c ****   {
2099:stm_lib/src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2100:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
2101:stm_lib/src/stm32f10x_tim.c ****   }
2102:stm_lib/src/stm32f10x_tim.c ****   else
2103:stm_lib/src/stm32f10x_tim.c ****   {
2104:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2105:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
2106:stm_lib/src/stm32f10x_tim.c ****   }
2107:stm_lib/src/stm32f10x_tim.c **** }
2108:stm_lib/src/stm32f10x_tim.c **** 
2109:stm_lib/src/stm32f10x_tim.c **** /**
2110:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2111:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2112:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2113:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2114:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
2115:stm_lib/src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2116:stm_lib/src/stm32f10x_tim.c ****                                        through the slave mode controller.
2117:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
2118:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2119:stm_lib/src/stm32f10x_tim.c ****   */
2120:stm_lib/src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2121:stm_lib/src/stm32f10x_tim.c **** {
2122:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2123:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2124:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
2125:stm_lib/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
2126:stm_lib/src/stm32f10x_tim.c ****   {
2127:stm_lib/src/stm32f10x_tim.c ****     /* Set the URS Bit */
2128:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
2129:stm_lib/src/stm32f10x_tim.c ****   }
2130:stm_lib/src/stm32f10x_tim.c ****   else
2131:stm_lib/src/stm32f10x_tim.c ****   {
2132:stm_lib/src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2133:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
2134:stm_lib/src/stm32f10x_tim.c ****   }
2135:stm_lib/src/stm32f10x_tim.c **** }
2136:stm_lib/src/stm32f10x_tim.c **** 
2137:stm_lib/src/stm32f10x_tim.c **** /**
2138:stm_lib/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2139:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2140:stm_lib/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2141:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2142:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2143:stm_lib/src/stm32f10x_tim.c ****   */
ARM GAS  /tmp/ccu4SMAM.s 			page 39


2144:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2145:stm_lib/src/stm32f10x_tim.c **** {
2146:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2147:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2148:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2149:stm_lib/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2150:stm_lib/src/stm32f10x_tim.c ****   {
2151:stm_lib/src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2152:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
2153:stm_lib/src/stm32f10x_tim.c ****   }
2154:stm_lib/src/stm32f10x_tim.c ****   else
2155:stm_lib/src/stm32f10x_tim.c ****   {
2156:stm_lib/src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2157:stm_lib/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
2158:stm_lib/src/stm32f10x_tim.c ****   }
2159:stm_lib/src/stm32f10x_tim.c **** }
2160:stm_lib/src/stm32f10x_tim.c **** 
2161:stm_lib/src/stm32f10x_tim.c **** /**
2162:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2163:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2164:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2165:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2166:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2167:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2168:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2169:stm_lib/src/stm32f10x_tim.c ****   */
2170:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2171:stm_lib/src/stm32f10x_tim.c **** {
2172:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2173:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2174:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
2175:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2176:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
2177:stm_lib/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2178:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
2179:stm_lib/src/stm32f10x_tim.c **** }
2180:stm_lib/src/stm32f10x_tim.c **** 
2181:stm_lib/src/stm32f10x_tim.c **** /**
2182:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2183:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2184:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2185:stm_lib/src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2186:stm_lib/src/stm32f10x_tim.c ****   *
2187:stm_lib/src/stm32f10x_tim.c ****   *  - For all TIMx
2188:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2189:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2190:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2191:stm_lib/src/stm32f10x_tim.c ****   *
2192:stm_lib/src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2193:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2194:stm_lib/src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2195:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2196:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2197:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2198:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
2199:stm_lib/src/stm32f10x_tim.c ****   *
2200:stm_lib/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /tmp/ccu4SMAM.s 			page 40


2201:stm_lib/src/stm32f10x_tim.c ****   */
2202:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2203:stm_lib/src/stm32f10x_tim.c **** {
2204:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2205:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
2206:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2207:stm_lib/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2208:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
2209:stm_lib/src/stm32f10x_tim.c ****   /* Select the TRGO source */
2210:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2211:stm_lib/src/stm32f10x_tim.c **** }
2212:stm_lib/src/stm32f10x_tim.c **** 
2213:stm_lib/src/stm32f10x_tim.c **** /**
2214:stm_lib/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2215:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2216:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2217:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2218:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2219:stm_lib/src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2220:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2221:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2222:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2223:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2224:stm_lib/src/stm32f10x_tim.c ****   */
2225:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2226:stm_lib/src/stm32f10x_tim.c **** {
2227:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2228:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2229:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2230:stm_lib/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2231:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
2232:stm_lib/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2233:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2234:stm_lib/src/stm32f10x_tim.c **** }
2235:stm_lib/src/stm32f10x_tim.c **** 
2236:stm_lib/src/stm32f10x_tim.c **** /**
2237:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2238:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2239:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2240:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2241:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2242:stm_lib/src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2243:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2244:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2245:stm_lib/src/stm32f10x_tim.c ****   */
2246:stm_lib/src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2247:stm_lib/src/stm32f10x_tim.c **** {
2248:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2249:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2250:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2251:stm_lib/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2252:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
2253:stm_lib/src/stm32f10x_tim.c ****   
2254:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2255:stm_lib/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2256:stm_lib/src/stm32f10x_tim.c **** }
2257:stm_lib/src/stm32f10x_tim.c **** 
ARM GAS  /tmp/ccu4SMAM.s 			page 41


2258:stm_lib/src/stm32f10x_tim.c **** /**
2259:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2260:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2261:stm_lib/src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2262:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2263:stm_lib/src/stm32f10x_tim.c ****   */
2264:stm_lib/src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2265:stm_lib/src/stm32f10x_tim.c **** {
2266:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2267:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2268:stm_lib/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2269:stm_lib/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
2270:stm_lib/src/stm32f10x_tim.c **** }
2271:stm_lib/src/stm32f10x_tim.c **** 
2272:stm_lib/src/stm32f10x_tim.c **** /**
2273:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2274:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2275:stm_lib/src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2276:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2277:stm_lib/src/stm32f10x_tim.c ****   */
2278:stm_lib/src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2279:stm_lib/src/stm32f10x_tim.c **** {
2280:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2281:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2282:stm_lib/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2283:stm_lib/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
2284:stm_lib/src/stm32f10x_tim.c **** }
2285:stm_lib/src/stm32f10x_tim.c **** 
2286:stm_lib/src/stm32f10x_tim.c **** /**
2287:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2288:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2289:stm_lib/src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2290:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2291:stm_lib/src/stm32f10x_tim.c ****   */
2292:stm_lib/src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2293:stm_lib/src/stm32f10x_tim.c **** {
2294:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2295:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2296:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2297:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
2298:stm_lib/src/stm32f10x_tim.c **** }
2299:stm_lib/src/stm32f10x_tim.c **** 
2300:stm_lib/src/stm32f10x_tim.c **** /**
2301:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2302:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2303:stm_lib/src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2304:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2305:stm_lib/src/stm32f10x_tim.c ****   */
2306:stm_lib/src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2307:stm_lib/src/stm32f10x_tim.c **** {
2308:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2309:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2310:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2311:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
2312:stm_lib/src/stm32f10x_tim.c **** }
2313:stm_lib/src/stm32f10x_tim.c **** 
2314:stm_lib/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccu4SMAM.s 			page 42


2315:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2316:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2317:stm_lib/src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2318:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2319:stm_lib/src/stm32f10x_tim.c ****   */
2320:stm_lib/src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2321:stm_lib/src/stm32f10x_tim.c **** {
2322:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2323:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2324:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2325:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
2326:stm_lib/src/stm32f10x_tim.c **** }
2327:stm_lib/src/stm32f10x_tim.c **** 
2328:stm_lib/src/stm32f10x_tim.c **** /**
2329:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2330:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2331:stm_lib/src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2332:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2333:stm_lib/src/stm32f10x_tim.c ****   */
2334:stm_lib/src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2335:stm_lib/src/stm32f10x_tim.c **** {
2336:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2337:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2338:stm_lib/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2339:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
2340:stm_lib/src/stm32f10x_tim.c **** }
2341:stm_lib/src/stm32f10x_tim.c **** 
2342:stm_lib/src/stm32f10x_tim.c **** /**
2343:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2344:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2345:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2346:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2347:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2348:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2349:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2350:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2351:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2352:stm_lib/src/stm32f10x_tim.c ****   */
2353:stm_lib/src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2354:stm_lib/src/stm32f10x_tim.c **** {
2355:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2356:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2357:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2358:stm_lib/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2359:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
2360:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2361:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2362:stm_lib/src/stm32f10x_tim.c **** }
2363:stm_lib/src/stm32f10x_tim.c **** 
2364:stm_lib/src/stm32f10x_tim.c **** /**
2365:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2366:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2367:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2368:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2369:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2370:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2371:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
ARM GAS  /tmp/ccu4SMAM.s 			page 43


2372:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2373:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2374:stm_lib/src/stm32f10x_tim.c ****   */
2375:stm_lib/src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2376:stm_lib/src/stm32f10x_tim.c **** {
2377:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2378:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2379:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2380:stm_lib/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2381:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
2382:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2383:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2384:stm_lib/src/stm32f10x_tim.c **** }
2385:stm_lib/src/stm32f10x_tim.c **** 
2386:stm_lib/src/stm32f10x_tim.c **** /**
2387:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2388:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2389:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2390:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2391:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2392:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2393:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2394:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2395:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2396:stm_lib/src/stm32f10x_tim.c ****   */
2397:stm_lib/src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2398:stm_lib/src/stm32f10x_tim.c **** {
2399:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2400:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2401:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2402:stm_lib/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2403:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
2404:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2405:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2406:stm_lib/src/stm32f10x_tim.c **** }
2407:stm_lib/src/stm32f10x_tim.c **** 
2408:stm_lib/src/stm32f10x_tim.c **** /**
2409:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2410:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2411:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2412:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2413:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2414:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2415:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2416:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2417:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2418:stm_lib/src/stm32f10x_tim.c ****   */
2419:stm_lib/src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2420:stm_lib/src/stm32f10x_tim.c **** {  
2421:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2422:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2423:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2424:stm_lib/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2425:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
2426:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
2427:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2428:stm_lib/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccu4SMAM.s 			page 44


2429:stm_lib/src/stm32f10x_tim.c **** 
2430:stm_lib/src/stm32f10x_tim.c **** /**
2431:stm_lib/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2432:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2433:stm_lib/src/stm32f10x_tim.c ****   *   the TIM peripheral.
2434:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2435:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2436:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2437:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2438:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2439:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2440:stm_lib/src/stm32f10x_tim.c ****   */
2441:stm_lib/src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2442:stm_lib/src/stm32f10x_tim.c **** {
2443:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2444:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2445:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
2446:stm_lib/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2447:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
2448:stm_lib/src/stm32f10x_tim.c ****   /* Set the CKD value */
2449:stm_lib/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
2450:stm_lib/src/stm32f10x_tim.c **** }
2451:stm_lib/src/stm32f10x_tim.c **** 
2452:stm_lib/src/stm32f10x_tim.c **** /**
2453:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2454:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2455:stm_lib/src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2456:stm_lib/src/stm32f10x_tim.c ****   */
2457:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2458:stm_lib/src/stm32f10x_tim.c **** {
2459:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2460:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2461:stm_lib/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2462:stm_lib/src/stm32f10x_tim.c ****   return TIMx->CCR1;
2463:stm_lib/src/stm32f10x_tim.c **** }
2464:stm_lib/src/stm32f10x_tim.c **** 
2465:stm_lib/src/stm32f10x_tim.c **** /**
2466:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2467:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2468:stm_lib/src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2469:stm_lib/src/stm32f10x_tim.c ****   */
2470:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2471:stm_lib/src/stm32f10x_tim.c **** {
2472:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2473:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2474:stm_lib/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2475:stm_lib/src/stm32f10x_tim.c ****   return TIMx->CCR2;
2476:stm_lib/src/stm32f10x_tim.c **** }
2477:stm_lib/src/stm32f10x_tim.c **** 
2478:stm_lib/src/stm32f10x_tim.c **** /**
2479:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2480:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2481:stm_lib/src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2482:stm_lib/src/stm32f10x_tim.c ****   */
2483:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2484:stm_lib/src/stm32f10x_tim.c **** {
2485:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccu4SMAM.s 			page 45


2486:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2487:stm_lib/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2488:stm_lib/src/stm32f10x_tim.c ****   return TIMx->CCR3;
2489:stm_lib/src/stm32f10x_tim.c **** }
2490:stm_lib/src/stm32f10x_tim.c **** 
2491:stm_lib/src/stm32f10x_tim.c **** /**
2492:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2493:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2494:stm_lib/src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2495:stm_lib/src/stm32f10x_tim.c ****   */
2496:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2497:stm_lib/src/stm32f10x_tim.c **** {
2498:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2499:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2500:stm_lib/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2501:stm_lib/src/stm32f10x_tim.c ****   return TIMx->CCR4;
2502:stm_lib/src/stm32f10x_tim.c **** }
2503:stm_lib/src/stm32f10x_tim.c **** 
2504:stm_lib/src/stm32f10x_tim.c **** /**
2505:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2506:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2507:stm_lib/src/stm32f10x_tim.c ****   * @retval Counter Register value.
2508:stm_lib/src/stm32f10x_tim.c ****   */
2509:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2510:stm_lib/src/stm32f10x_tim.c **** {
2511:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2512:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2513:stm_lib/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2514:stm_lib/src/stm32f10x_tim.c ****   return TIMx->CNT;
2515:stm_lib/src/stm32f10x_tim.c **** }
2516:stm_lib/src/stm32f10x_tim.c **** 
2517:stm_lib/src/stm32f10x_tim.c **** /**
2518:stm_lib/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2519:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2520:stm_lib/src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2521:stm_lib/src/stm32f10x_tim.c ****   */
2522:stm_lib/src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2523:stm_lib/src/stm32f10x_tim.c **** {
2524:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2525:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2526:stm_lib/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2527:stm_lib/src/stm32f10x_tim.c ****   return TIMx->PSC;
2528:stm_lib/src/stm32f10x_tim.c **** }
2529:stm_lib/src/stm32f10x_tim.c **** 
2530:stm_lib/src/stm32f10x_tim.c **** /**
2531:stm_lib/src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2532:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2533:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2534:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2535:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2536:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2537:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2538:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2539:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2540:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2541:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2542:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
ARM GAS  /tmp/ccu4SMAM.s 			page 46


2543:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2544:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2545:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2546:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2547:stm_lib/src/stm32f10x_tim.c ****   * @note
2548:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2549:stm_lib/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2550:stm_lib/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2551:stm_lib/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2552:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2553:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2554:stm_lib/src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2555:stm_lib/src/stm32f10x_tim.c ****   */
2556:stm_lib/src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2557:stm_lib/src/stm32f10x_tim.c **** { 
2558:stm_lib/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2559:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2560:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2561:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2562:stm_lib/src/stm32f10x_tim.c ****   
2563:stm_lib/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2564:stm_lib/src/stm32f10x_tim.c ****   {
2565:stm_lib/src/stm32f10x_tim.c ****     bitstatus = SET;
2566:stm_lib/src/stm32f10x_tim.c ****   }
2567:stm_lib/src/stm32f10x_tim.c ****   else
2568:stm_lib/src/stm32f10x_tim.c ****   {
2569:stm_lib/src/stm32f10x_tim.c ****     bitstatus = RESET;
2570:stm_lib/src/stm32f10x_tim.c ****   }
2571:stm_lib/src/stm32f10x_tim.c ****   return bitstatus;
2572:stm_lib/src/stm32f10x_tim.c **** }
2573:stm_lib/src/stm32f10x_tim.c **** 
2574:stm_lib/src/stm32f10x_tim.c **** /**
2575:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2576:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2577:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2578:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2579:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2580:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2581:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2582:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2583:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2584:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2585:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2586:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2587:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2588:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2589:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2590:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2591:stm_lib/src/stm32f10x_tim.c ****   * @note
2592:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2593:stm_lib/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2594:stm_lib/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2595:stm_lib/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2596:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2597:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
2598:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2599:stm_lib/src/stm32f10x_tim.c ****   */
ARM GAS  /tmp/ccu4SMAM.s 			page 47


2600:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2601:stm_lib/src/stm32f10x_tim.c **** {  
2602:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2603:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2604:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
2605:stm_lib/src/stm32f10x_tim.c ****    
2606:stm_lib/src/stm32f10x_tim.c ****   /* Clear the flags */
2607:stm_lib/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2608:stm_lib/src/stm32f10x_tim.c **** }
2609:stm_lib/src/stm32f10x_tim.c **** 
2610:stm_lib/src/stm32f10x_tim.c **** /**
2611:stm_lib/src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2612:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2613:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2614:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2615:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2616:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2617:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2618:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2619:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2620:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2621:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2622:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2623:stm_lib/src/stm32f10x_tim.c ****   * @note
2624:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2625:stm_lib/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2626:stm_lib/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2627:stm_lib/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2628:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2629:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2630:stm_lib/src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2631:stm_lib/src/stm32f10x_tim.c ****   */
2632:stm_lib/src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2633:stm_lib/src/stm32f10x_tim.c **** {
2634:stm_lib/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2635:stm_lib/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2636:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2637:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2638:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2639:stm_lib/src/stm32f10x_tim.c ****    
2640:stm_lib/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2641:stm_lib/src/stm32f10x_tim.c ****   
2642:stm_lib/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2643:stm_lib/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2644:stm_lib/src/stm32f10x_tim.c ****   {
2645:stm_lib/src/stm32f10x_tim.c ****     bitstatus = SET;
2646:stm_lib/src/stm32f10x_tim.c ****   }
2647:stm_lib/src/stm32f10x_tim.c ****   else
2648:stm_lib/src/stm32f10x_tim.c ****   {
2649:stm_lib/src/stm32f10x_tim.c ****     bitstatus = RESET;
2650:stm_lib/src/stm32f10x_tim.c ****   }
2651:stm_lib/src/stm32f10x_tim.c ****   return bitstatus;
2652:stm_lib/src/stm32f10x_tim.c **** }
2653:stm_lib/src/stm32f10x_tim.c **** 
2654:stm_lib/src/stm32f10x_tim.c **** /**
2655:stm_lib/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2656:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
ARM GAS  /tmp/ccu4SMAM.s 			page 48


2657:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2658:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2659:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2660:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2661:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2662:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2663:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2664:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2665:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2666:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2667:stm_lib/src/stm32f10x_tim.c ****   * @note
2668:stm_lib/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2669:stm_lib/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2670:stm_lib/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2671:stm_lib/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2672:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2673:stm_lib/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2674:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2675:stm_lib/src/stm32f10x_tim.c ****   */
2676:stm_lib/src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2677:stm_lib/src/stm32f10x_tim.c **** {
2678:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
2679:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2680:stm_lib/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2681:stm_lib/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2682:stm_lib/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2683:stm_lib/src/stm32f10x_tim.c **** }
2684:stm_lib/src/stm32f10x_tim.c **** 
2685:stm_lib/src/stm32f10x_tim.c **** /**
2686:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2687:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2688:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2689:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2690:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2691:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2692:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2693:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2694:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2695:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2696:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2697:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2698:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2699:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2700:stm_lib/src/stm32f10x_tim.c ****   */
2701:stm_lib/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2702:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2703:stm_lib/src/stm32f10x_tim.c **** {
  25              		.loc 1 2703 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 30B4     		push	{r4, r5}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
ARM GAS  /tmp/ccu4SMAM.s 			page 49


  35              		.cfi_offset 5, -4
  36              	.LVL1:
2704:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
2705:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2706:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
  37              		.loc 1 2706 0
  38 0002 048C     		ldrh	r4, [r0, #32]
  39 0004 A4B2     		uxth	r4, r4
  40 0006 24F00104 		bic	r4, r4, #1
  41 000a A4B2     		uxth	r4, r4
  42 000c 0484     		strh	r4, [r0, #32]	@ movhi
2707:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  43              		.loc 1 2707 0
  44 000e 048B     		ldrh	r4, [r0, #24]
  45 0010 A4B2     		uxth	r4, r4
  46              	.LVL2:
2708:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
  47              		.loc 1 2708 0
  48 0012 058C     		ldrh	r5, [r0, #32]
  49 0014 ADB2     		uxth	r5, r5
  50              	.LVL3:
2709:stm_lib/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2710:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
  51              		.loc 1 2710 0
  52 0016 24F0F304 		bic	r4, r4, #243
  53              	.LVL4:
2711:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  54              		.loc 1 2711 0
  55 001a 1B01     		lsls	r3, r3, #4
  56              	.LVL5:
  57 001c 9BB2     		uxth	r3, r3
  58 001e 1A43     		orrs	r2, r2, r3
  59              	.LVL6:
  60 0020 1443     		orrs	r4, r4, r2
  61              	.LVL7:
2712:stm_lib/src/stm32f10x_tim.c ****   
2713:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
  62              		.loc 1 2713 0
  63 0022 124A     		ldr	r2, .L6
  64 0024 9042     		cmp	r0, r2
  65 0026 1AD0     		beq	.L2
  66              		.loc 1 2713 0 is_stmt 0 discriminator 1
  67 0028 114B     		ldr	r3, .L6+4
  68 002a 9842     		cmp	r0, r3
  69 002c 17D0     		beq	.L2
  70              		.loc 1 2713 0 discriminator 2
  71 002e B0F1804F 		cmp	r0, #1073741824
  72 0032 14D0     		beq	.L2
  73              		.loc 1 2713 0 discriminator 3
  74 0034 A3F59833 		sub	r3, r3, #77824
  75 0038 9842     		cmp	r0, r3
  76 003a 10D0     		beq	.L2
  77              		.loc 1 2713 0 discriminator 4
  78 003c 03F58063 		add	r3, r3, #1024
  79 0040 9842     		cmp	r0, r3
  80 0042 0CD0     		beq	.L2
2714:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
ARM GAS  /tmp/ccu4SMAM.s 			page 50


  81              		.loc 1 2714 0 is_stmt 1
  82 0044 03F58063 		add	r3, r3, #1024
  83 0048 9842     		cmp	r0, r3
  84 004a 08D0     		beq	.L2
2715:stm_lib/src/stm32f10x_tim.c ****   {
2716:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2717:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
2718:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
2719:stm_lib/src/stm32f10x_tim.c ****   }
2720:stm_lib/src/stm32f10x_tim.c ****   else
2721:stm_lib/src/stm32f10x_tim.c ****   {
2722:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
  85              		.loc 1 2723 0
  86 004c 25F00A03 		bic	r3, r5, #10
  87              	.LVL8:
2724:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  88              		.loc 1 2724 0
  89 0050 1943     		orrs	r1, r1, r3
  90              	.LVL9:
  91 0052 41F00101 		orr	r1, r1, #1
  92              	.LVL10:
  93              	.L4:
2725:stm_lib/src/stm32f10x_tim.c ****   }
2726:stm_lib/src/stm32f10x_tim.c **** 
2727:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2728:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  94              		.loc 1 2728 0
  95 0056 0483     		strh	r4, [r0, #24]	@ movhi
2729:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
  96              		.loc 1 2729 0
  97 0058 0184     		strh	r1, [r0, #32]	@ movhi
2730:stm_lib/src/stm32f10x_tim.c **** }
  98              		.loc 1 2730 0
  99 005a 30BC     		pop	{r4, r5}
 100              	.LCFI1:
 101              		.cfi_remember_state
 102              		.cfi_restore 5
 103              		.cfi_restore 4
 104              		.cfi_def_cfa_offset 0
 105              	.LVL11:
 106 005c 7047     		bx	lr
 107              	.LVL12:
 108              	.L2:
 109              	.LCFI2:
 110              		.cfi_restore_state
2717:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 111              		.loc 1 2717 0
 112 005e 25F00203 		bic	r3, r5, #2
 113              	.LVL13:
2718:stm_lib/src/stm32f10x_tim.c ****   }
 114              		.loc 1 2718 0
 115 0062 1943     		orrs	r1, r1, r3
 116              	.LVL14:
 117 0064 41F00101 		orr	r1, r1, #1
 118              	.LVL15:
 119 0068 F5E7     		b	.L4
ARM GAS  /tmp/ccu4SMAM.s 			page 51


 120              	.L7:
 121 006a 00BF     		.align	2
 122              	.L6:
 123 006c 002C0140 		.word	1073818624
 124 0070 00340140 		.word	1073820672
 125              		.cfi_endproc
 126              	.LFE143:
 128              		.section	.text.TI2_Config,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu softvfp
 135              	TI2_Config:
 136              	.LFB144:
2731:stm_lib/src/stm32f10x_tim.c **** 
2732:stm_lib/src/stm32f10x_tim.c **** /**
2733:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2734:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2735:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2736:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2737:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2738:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2739:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2740:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2741:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2742:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2743:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2744:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2745:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2746:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2747:stm_lib/src/stm32f10x_tim.c ****   */
2748:stm_lib/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2749:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2750:stm_lib/src/stm32f10x_tim.c **** {
 137              		.loc 1 2750 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142              	.LVL16:
 143 0000 70B4     		push	{r4, r5, r6}
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 12
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 6, -4
 149              	.LVL17:
2751:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
2752:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2753:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 150              		.loc 1 2753 0
 151 0002 058C     		ldrh	r5, [r0, #32]
 152 0004 ADB2     		uxth	r5, r5
 153 0006 25F01005 		bic	r5, r5, #16
 154 000a ADB2     		uxth	r5, r5
 155 000c 0584     		strh	r5, [r0, #32]	@ movhi
ARM GAS  /tmp/ccu4SMAM.s 			page 52


2754:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 156              		.loc 1 2754 0
 157 000e 058B     		ldrh	r5, [r0, #24]
 158              	.LVL18:
2755:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 159              		.loc 1 2755 0
 160 0010 048C     		ldrh	r4, [r0, #32]
 161 0012 A4B2     		uxth	r4, r4
 162              	.LVL19:
2756:stm_lib/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 163              		.loc 1 2756 0
 164 0014 0E01     		lsls	r6, r1, #4
 165 0016 B6B2     		uxth	r6, r6
 166              	.LVL20:
2757:stm_lib/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2758:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 167              		.loc 1 2758 0
 168 0018 25F44075 		bic	r5, r5, #768
 169              	.LVL21:
 170 001c 2D05     		lsls	r5, r5, #20
 171 001e 2D0D     		lsrs	r5, r5, #20
 172              	.LVL22:
2759:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 173              		.loc 1 2759 0
 174 0020 1B03     		lsls	r3, r3, #12
 175              	.LVL23:
 176 0022 9BB2     		uxth	r3, r3
 177 0024 1D43     		orrs	r5, r5, r3
 178              	.LVL24:
2760:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 179              		.loc 1 2760 0
 180 0026 1202     		lsls	r2, r2, #8
 181              	.LVL25:
 182 0028 92B2     		uxth	r2, r2
 183 002a 1543     		orrs	r5, r5, r2
 184              	.LVL26:
2761:stm_lib/src/stm32f10x_tim.c ****   
2762:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 185              		.loc 1 2762 0
 186 002c 124B     		ldr	r3, .L13
 187 002e 9842     		cmp	r0, r3
 188 0030 1BD0     		beq	.L9
 189              		.loc 1 2762 0 is_stmt 0 discriminator 1
 190 0032 03F50063 		add	r3, r3, #2048
 191 0036 9842     		cmp	r0, r3
 192 0038 17D0     		beq	.L9
 193              		.loc 1 2762 0 discriminator 2
 194 003a B0F1804F 		cmp	r0, #1073741824
 195 003e 14D0     		beq	.L9
 196              		.loc 1 2762 0 discriminator 3
 197 0040 A3F59833 		sub	r3, r3, #77824
 198 0044 9842     		cmp	r0, r3
 199 0046 10D0     		beq	.L9
 200              		.loc 1 2762 0 discriminator 4
 201 0048 03F58063 		add	r3, r3, #1024
 202 004c 9842     		cmp	r0, r3
 203 004e 0CD0     		beq	.L9
ARM GAS  /tmp/ccu4SMAM.s 			page 53


2763:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 204              		.loc 1 2763 0 is_stmt 1
 205 0050 03F58063 		add	r3, r3, #1024
 206 0054 9842     		cmp	r0, r3
 207 0056 08D0     		beq	.L9
2764:stm_lib/src/stm32f10x_tim.c ****   {
2765:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2766:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
2767:stm_lib/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
2768:stm_lib/src/stm32f10x_tim.c ****   }
2769:stm_lib/src/stm32f10x_tim.c ****   else
2770:stm_lib/src/stm32f10x_tim.c ****   {
2771:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 208              		.loc 1 2772 0
 209 0058 24F0A004 		bic	r4, r4, #160
 210              	.LVL27:
2773:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 211              		.loc 1 2773 0
 212 005c 0C43     		orrs	r4, r4, r1
 213              	.LVL28:
 214 005e 44F01004 		orr	r4, r4, #16
 215              	.LVL29:
 216              	.L11:
2774:stm_lib/src/stm32f10x_tim.c ****   }
2775:stm_lib/src/stm32f10x_tim.c ****   
2776:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2777:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 217              		.loc 1 2777 0
 218 0062 0583     		strh	r5, [r0, #24]	@ movhi
2778:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 219              		.loc 1 2778 0
 220 0064 0484     		strh	r4, [r0, #32]	@ movhi
2779:stm_lib/src/stm32f10x_tim.c **** }
 221              		.loc 1 2779 0
 222 0066 70BC     		pop	{r4, r5, r6}
 223              	.LCFI4:
 224              		.cfi_remember_state
 225              		.cfi_restore 6
 226              		.cfi_restore 5
 227              		.cfi_restore 4
 228              		.cfi_def_cfa_offset 0
 229              	.LVL30:
 230 0068 7047     		bx	lr
 231              	.LVL31:
 232              	.L9:
 233              	.LCFI5:
 234              		.cfi_restore_state
2766:stm_lib/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 235              		.loc 1 2766 0
 236 006a 24F02004 		bic	r4, r4, #32
 237              	.LVL32:
2767:stm_lib/src/stm32f10x_tim.c ****   }
 238              		.loc 1 2767 0
 239 006e 3443     		orrs	r4, r4, r6
 240              	.LVL33:
 241 0070 44F01004 		orr	r4, r4, #16
ARM GAS  /tmp/ccu4SMAM.s 			page 54


 242              	.LVL34:
 243 0074 F5E7     		b	.L11
 244              	.L14:
 245 0076 00BF     		.align	2
 246              	.L13:
 247 0078 002C0140 		.word	1073818624
 248              		.cfi_endproc
 249              	.LFE144:
 251              		.section	.text.TI3_Config,"ax",%progbits
 252              		.align	1
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu softvfp
 258              	TI3_Config:
 259              	.LFB145:
2780:stm_lib/src/stm32f10x_tim.c **** 
2781:stm_lib/src/stm32f10x_tim.c **** /**
2782:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2783:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2784:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2785:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2786:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2787:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2788:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2789:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2790:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
2791:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2792:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2793:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2794:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2795:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2796:stm_lib/src/stm32f10x_tim.c ****   */
2797:stm_lib/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2798:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2799:stm_lib/src/stm32f10x_tim.c **** {
 260              		.loc 1 2799 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL35:
 266 0000 70B4     		push	{r4, r5, r6}
 267              	.LCFI6:
 268              		.cfi_def_cfa_offset 12
 269              		.cfi_offset 4, -12
 270              		.cfi_offset 5, -8
 271              		.cfi_offset 6, -4
 272              	.LVL36:
2800:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2801:stm_lib/src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2802:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 273              		.loc 1 2802 0
 274 0002 048C     		ldrh	r4, [r0, #32]
 275 0004 A4B2     		uxth	r4, r4
 276 0006 24F48074 		bic	r4, r4, #256
 277 000a A4B2     		uxth	r4, r4
ARM GAS  /tmp/ccu4SMAM.s 			page 55


 278 000c 0484     		strh	r4, [r0, #32]	@ movhi
2803:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 279              		.loc 1 2803 0
 280 000e 848B     		ldrh	r4, [r0, #28]
 281 0010 A4B2     		uxth	r4, r4
 282              	.LVL37:
2804:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 283              		.loc 1 2804 0
 284 0012 058C     		ldrh	r5, [r0, #32]
 285 0014 AEB2     		uxth	r6, r5
 286              	.LVL38:
2805:stm_lib/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 287              		.loc 1 2805 0
 288 0016 0D02     		lsls	r5, r1, #8
 289 0018 ADB2     		uxth	r5, r5
 290              	.LVL39:
2806:stm_lib/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2807:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 291              		.loc 1 2807 0
 292 001a 24F0F304 		bic	r4, r4, #243
 293              	.LVL40:
2808:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 294              		.loc 1 2808 0
 295 001e 1B01     		lsls	r3, r3, #4
 296              	.LVL41:
 297 0020 9BB2     		uxth	r3, r3
 298 0022 1343     		orrs	r3, r3, r2
 299 0024 1C43     		orrs	r4, r4, r3
 300              	.LVL42:
2809:stm_lib/src/stm32f10x_tim.c ****     
2810:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 301              		.loc 1 2810 0
 302 0026 124B     		ldr	r3, .L20
 303 0028 9842     		cmp	r0, r3
 304 002a 1BD0     		beq	.L16
 305              		.loc 1 2810 0 is_stmt 0 discriminator 1
 306 002c 03F50063 		add	r3, r3, #2048
 307 0030 9842     		cmp	r0, r3
 308 0032 17D0     		beq	.L16
 309              		.loc 1 2810 0 discriminator 2
 310 0034 B0F1804F 		cmp	r0, #1073741824
 311 0038 14D0     		beq	.L16
 312              		.loc 1 2810 0 discriminator 3
 313 003a A3F59833 		sub	r3, r3, #77824
 314 003e 9842     		cmp	r0, r3
 315 0040 10D0     		beq	.L16
 316              		.loc 1 2810 0 discriminator 4
 317 0042 03F58063 		add	r3, r3, #1024
 318 0046 9842     		cmp	r0, r3
 319 0048 0CD0     		beq	.L16
2811:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 320              		.loc 1 2811 0 is_stmt 1
 321 004a 03F58063 		add	r3, r3, #1024
 322 004e 9842     		cmp	r0, r3
 323 0050 08D0     		beq	.L16
2812:stm_lib/src/stm32f10x_tim.c ****   {
2813:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
ARM GAS  /tmp/ccu4SMAM.s 			page 56


2814:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
2815:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
2816:stm_lib/src/stm32f10x_tim.c ****   }
2817:stm_lib/src/stm32f10x_tim.c ****   else
2818:stm_lib/src/stm32f10x_tim.c ****   {
2819:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 324              		.loc 1 2820 0
 325 0052 26F42063 		bic	r3, r6, #2560
 326              	.LVL43:
2821:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
 327              		.loc 1 2821 0
 328 0056 1943     		orrs	r1, r1, r3
 329              	.LVL44:
 330 0058 41F48071 		orr	r1, r1, #256
 331              	.LVL45:
 332              	.L18:
2822:stm_lib/src/stm32f10x_tim.c ****   }
2823:stm_lib/src/stm32f10x_tim.c ****   
2824:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2825:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 333              		.loc 1 2825 0
 334 005c 8483     		strh	r4, [r0, #28]	@ movhi
2826:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 335              		.loc 1 2826 0
 336 005e 0184     		strh	r1, [r0, #32]	@ movhi
2827:stm_lib/src/stm32f10x_tim.c **** }
 337              		.loc 1 2827 0
 338 0060 70BC     		pop	{r4, r5, r6}
 339              	.LCFI7:
 340              		.cfi_remember_state
 341              		.cfi_restore 6
 342              		.cfi_restore 5
 343              		.cfi_restore 4
 344              		.cfi_def_cfa_offset 0
 345              	.LVL46:
 346 0062 7047     		bx	lr
 347              	.LVL47:
 348              	.L16:
 349              	.LCFI8:
 350              		.cfi_restore_state
2814:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 351              		.loc 1 2814 0
 352 0064 26F40071 		bic	r1, r6, #512
 353              	.LVL48:
2815:stm_lib/src/stm32f10x_tim.c ****   }
 354              		.loc 1 2815 0
 355 0068 2943     		orrs	r1, r1, r5
 356              	.LVL49:
 357 006a 41F48071 		orr	r1, r1, #256
 358              	.LVL50:
 359 006e F5E7     		b	.L18
 360              	.L21:
 361              		.align	2
 362              	.L20:
 363 0070 002C0140 		.word	1073818624
 364              		.cfi_endproc
ARM GAS  /tmp/ccu4SMAM.s 			page 57


 365              	.LFE145:
 367              		.section	.text.TI4_Config,"ax",%progbits
 368              		.align	1
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu softvfp
 374              	TI4_Config:
 375              	.LFB146:
2828:stm_lib/src/stm32f10x_tim.c **** 
2829:stm_lib/src/stm32f10x_tim.c **** /**
2830:stm_lib/src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2831:stm_lib/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2832:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2833:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2834:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2835:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2836:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2837:stm_lib/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2838:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2839:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2840:stm_lib/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2841:stm_lib/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2842:stm_lib/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2843:stm_lib/src/stm32f10x_tim.c ****   * @retval None
2844:stm_lib/src/stm32f10x_tim.c ****   */
2845:stm_lib/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2846:stm_lib/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2847:stm_lib/src/stm32f10x_tim.c **** {
 376              		.loc 1 2847 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381              	.LVL51:
 382 0000 70B4     		push	{r4, r5, r6}
 383              	.LCFI9:
 384              		.cfi_def_cfa_offset 12
 385              		.cfi_offset 4, -12
 386              		.cfi_offset 5, -8
 387              		.cfi_offset 6, -4
 388              	.LVL52:
2848:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2849:stm_lib/src/stm32f10x_tim.c **** 
2850:stm_lib/src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2851:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 389              		.loc 1 2851 0
 390 0002 048C     		ldrh	r4, [r0, #32]
 391 0004 A4B2     		uxth	r4, r4
 392 0006 24F48054 		bic	r4, r4, #4096
 393 000a A4B2     		uxth	r4, r4
 394 000c 0484     		strh	r4, [r0, #32]	@ movhi
2852:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 395              		.loc 1 2852 0
 396 000e 848B     		ldrh	r4, [r0, #28]
 397              	.LVL53:
2853:stm_lib/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccu4SMAM.s 			page 58


 398              		.loc 1 2853 0
 399 0010 058C     		ldrh	r5, [r0, #32]
 400 0012 ADB2     		uxth	r5, r5
 401              	.LVL54:
2854:stm_lib/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 402              		.loc 1 2854 0
 403 0014 0E03     		lsls	r6, r1, #12
 404 0016 B6B2     		uxth	r6, r6
 405              	.LVL55:
2855:stm_lib/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2856:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 406              		.loc 1 2856 0
 407 0018 24F44074 		bic	r4, r4, #768
 408              	.LVL56:
 409 001c 2405     		lsls	r4, r4, #20
 410 001e 240D     		lsrs	r4, r4, #20
 411              	.LVL57:
2857:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 412              		.loc 1 2857 0
 413 0020 1202     		lsls	r2, r2, #8
 414              	.LVL58:
 415 0022 92B2     		uxth	r2, r2
 416 0024 1443     		orrs	r4, r4, r2
 417              	.LVL59:
2858:stm_lib/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 418              		.loc 1 2858 0
 419 0026 1B03     		lsls	r3, r3, #12
 420              	.LVL60:
 421 0028 9BB2     		uxth	r3, r3
 422 002a 1C43     		orrs	r4, r4, r3
 423              	.LVL61:
2859:stm_lib/src/stm32f10x_tim.c ****   
2860:stm_lib/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 424              		.loc 1 2860 0
 425 002c 134B     		ldr	r3, .L27
 426 002e 9842     		cmp	r0, r3
 427 0030 1DD0     		beq	.L23
 428              		.loc 1 2860 0 is_stmt 0 discriminator 1
 429 0032 03F50063 		add	r3, r3, #2048
 430 0036 9842     		cmp	r0, r3
 431 0038 19D0     		beq	.L23
 432              		.loc 1 2860 0 discriminator 2
 433 003a B0F1804F 		cmp	r0, #1073741824
 434 003e 16D0     		beq	.L23
 435              		.loc 1 2860 0 discriminator 3
 436 0040 A3F59833 		sub	r3, r3, #77824
 437 0044 9842     		cmp	r0, r3
 438 0046 12D0     		beq	.L23
 439              		.loc 1 2860 0 discriminator 4
 440 0048 03F58063 		add	r3, r3, #1024
 441 004c 9842     		cmp	r0, r3
 442 004e 0ED0     		beq	.L23
2861:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 443              		.loc 1 2861 0 is_stmt 1
 444 0050 03F58063 		add	r3, r3, #1024
 445 0054 9842     		cmp	r0, r3
 446 0056 0AD0     		beq	.L23
ARM GAS  /tmp/ccu4SMAM.s 			page 59


2862:stm_lib/src/stm32f10x_tim.c ****   {
2863:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2864:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
2865:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
2866:stm_lib/src/stm32f10x_tim.c ****   }
2867:stm_lib/src/stm32f10x_tim.c ****   else
2868:stm_lib/src/stm32f10x_tim.c ****   {
2869:stm_lib/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:stm_lib/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 447              		.loc 1 2870 0
 448 0058 25F40075 		bic	r5, r5, #512
 449              	.LVL62:
 450 005c 6D04     		lsls	r5, r5, #17
 451 005e 6D0C     		lsrs	r5, r5, #17
 452              	.LVL63:
2871:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 453              		.loc 1 2871 0
 454 0060 2943     		orrs	r1, r1, r5
 455              	.LVL64:
 456 0062 41F48051 		orr	r1, r1, #4096
 457              	.LVL65:
 458              	.L25:
2872:stm_lib/src/stm32f10x_tim.c ****   }
2873:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2874:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 459              		.loc 1 2874 0
 460 0066 8483     		strh	r4, [r0, #28]	@ movhi
2875:stm_lib/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 461              		.loc 1 2875 0
 462 0068 0184     		strh	r1, [r0, #32]	@ movhi
2876:stm_lib/src/stm32f10x_tim.c **** }
 463              		.loc 1 2876 0
 464 006a 70BC     		pop	{r4, r5, r6}
 465              	.LCFI10:
 466              		.cfi_remember_state
 467              		.cfi_restore 6
 468              		.cfi_restore 5
 469              		.cfi_restore 4
 470              		.cfi_def_cfa_offset 0
 471              	.LVL66:
 472 006c 7047     		bx	lr
 473              	.LVL67:
 474              	.L23:
 475              	.LCFI11:
 476              		.cfi_restore_state
2864:stm_lib/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 477              		.loc 1 2864 0
 478 006e 25F40051 		bic	r1, r5, #8192
 479              	.LVL68:
2865:stm_lib/src/stm32f10x_tim.c ****   }
 480              		.loc 1 2865 0
 481 0072 3143     		orrs	r1, r1, r6
 482              	.LVL69:
 483 0074 41F48051 		orr	r1, r1, #4096
 484              	.LVL70:
 485 0078 F5E7     		b	.L25
 486              	.L28:
ARM GAS  /tmp/ccu4SMAM.s 			page 60


 487 007a 00BF     		.align	2
 488              	.L27:
 489 007c 002C0140 		.word	1073818624
 490              		.cfi_endproc
 491              	.LFE146:
 493              		.section	.text.TIM_DeInit,"ax",%progbits
 494              		.align	1
 495              		.global	TIM_DeInit
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu softvfp
 501              	TIM_DeInit:
 502              	.LFB56:
 123:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 503              		.loc 1 123 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              	.LVL71:
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI12:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
 127:stm_lib/src/stm32f10x_tim.c ****   {
 513              		.loc 1 127 0
 514 0002 724B     		ldr	r3, .L65
 515 0004 9842     		cmp	r0, r3
 516 0006 36D0     		beq	.L48
 132:stm_lib/src/stm32f10x_tim.c ****   {
 517              		.loc 1 132 0
 518 0008 B0F1804F 		cmp	r0, #1073741824
 519 000c 3ED0     		beq	.L49
 137:stm_lib/src/stm32f10x_tim.c ****   {
 520              		.loc 1 137 0
 521 000e 704B     		ldr	r3, .L65+4
 522 0010 9842     		cmp	r0, r3
 523 0012 44D0     		beq	.L50
 142:stm_lib/src/stm32f10x_tim.c ****   {
 524              		.loc 1 142 0
 525 0014 6F4B     		ldr	r3, .L65+8
 526 0016 9842     		cmp	r0, r3
 527 0018 4AD0     		beq	.L51
 147:stm_lib/src/stm32f10x_tim.c ****   {
 528              		.loc 1 147 0
 529 001a 6F4B     		ldr	r3, .L65+12
 530 001c 9842     		cmp	r0, r3
 531 001e 50D0     		beq	.L52
 152:stm_lib/src/stm32f10x_tim.c ****   {
 532              		.loc 1 152 0
 533 0020 6E4B     		ldr	r3, .L65+16
 534 0022 9842     		cmp	r0, r3
 535 0024 56D0     		beq	.L53
 157:stm_lib/src/stm32f10x_tim.c ****   {
 536              		.loc 1 157 0
 537 0026 6E4B     		ldr	r3, .L65+20
ARM GAS  /tmp/ccu4SMAM.s 			page 61


 538 0028 9842     		cmp	r0, r3
 539 002a 5CD0     		beq	.L54
 162:stm_lib/src/stm32f10x_tim.c ****   {
 540              		.loc 1 162 0
 541 002c 6D4B     		ldr	r3, .L65+24
 542 002e 9842     		cmp	r0, r3
 543 0030 62D0     		beq	.L55
 167:stm_lib/src/stm32f10x_tim.c ****   {      
 544              		.loc 1 167 0
 545 0032 6D4B     		ldr	r3, .L65+28
 546 0034 9842     		cmp	r0, r3
 547 0036 6AD0     		beq	.L56
 172:stm_lib/src/stm32f10x_tim.c ****   {      
 548              		.loc 1 172 0
 549 0038 6C4B     		ldr	r3, .L65+32
 550 003a 9842     		cmp	r0, r3
 551 003c 72D0     		beq	.L57
 177:stm_lib/src/stm32f10x_tim.c ****   {     
 552              		.loc 1 177 0
 553 003e 6C4B     		ldr	r3, .L65+36
 554 0040 9842     		cmp	r0, r3
 555 0042 7AD0     		beq	.L58
 182:stm_lib/src/stm32f10x_tim.c ****   {      
 556              		.loc 1 182 0
 557 0044 6B4B     		ldr	r3, .L65+40
 558 0046 9842     		cmp	r0, r3
 559 0048 00F08280 		beq	.L59
 187:stm_lib/src/stm32f10x_tim.c ****   {       
 560              		.loc 1 187 0
 561 004c 6A4B     		ldr	r3, .L65+44
 562 004e 9842     		cmp	r0, r3
 563 0050 00F08780 		beq	.L60
 192:stm_lib/src/stm32f10x_tim.c ****   {       
 564              		.loc 1 192 0
 565 0054 694B     		ldr	r3, .L65+48
 566 0056 9842     		cmp	r0, r3
 567 0058 00F08C80 		beq	.L61
 197:stm_lib/src/stm32f10x_tim.c ****   {
 568              		.loc 1 197 0
 569 005c 684B     		ldr	r3, .L65+52
 570 005e 9842     		cmp	r0, r3
 571 0060 00F09380 		beq	.L62
 202:stm_lib/src/stm32f10x_tim.c ****   {
 572              		.loc 1 202 0
 573 0064 674B     		ldr	r3, .L65+56
 574 0066 9842     		cmp	r0, r3
 575 0068 00F09A80 		beq	.L63
 209:stm_lib/src/stm32f10x_tim.c ****     {
 576              		.loc 1 209 0
 577 006c 664B     		ldr	r3, .L65+60
 578 006e 9842     		cmp	r0, r3
 579 0070 00F0A180 		beq	.L64
 580              	.LVL72:
 581              	.L29:
 582 0074 08BD     		pop	{r3, pc}
 583              	.LVL73:
 584              	.L48:
ARM GAS  /tmp/ccu4SMAM.s 			page 62


 129:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 585              		.loc 1 129 0
 586 0076 0121     		movs	r1, #1
 587 0078 4FF40060 		mov	r0, #2048
 588              	.LVL74:
 589 007c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 590              	.LVL75:
 130:stm_lib/src/stm32f10x_tim.c ****   }     
 591              		.loc 1 130 0
 592 0080 0021     		movs	r1, #0
 593 0082 4FF40060 		mov	r0, #2048
 594 0086 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 595              	.LVL76:
 596 008a 08BD     		pop	{r3, pc}
 597              	.LVL77:
 598              	.L49:
 134:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 599              		.loc 1 134 0
 600 008c 0121     		movs	r1, #1
 601 008e 0846     		mov	r0, r1
 602              	.LVL78:
 603 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 604              	.LVL79:
 135:stm_lib/src/stm32f10x_tim.c ****   }
 605              		.loc 1 135 0
 606 0094 0021     		movs	r1, #0
 607 0096 0120     		movs	r0, #1
 608 0098 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 609              	.LVL80:
 610 009c 08BD     		pop	{r3, pc}
 611              	.LVL81:
 612              	.L50:
 139:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 613              		.loc 1 139 0
 614 009e 0121     		movs	r1, #1
 615 00a0 0220     		movs	r0, #2
 616              	.LVL82:
 617 00a2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 618              	.LVL83:
 140:stm_lib/src/stm32f10x_tim.c ****   }
 619              		.loc 1 140 0
 620 00a6 0021     		movs	r1, #0
 621 00a8 0220     		movs	r0, #2
 622 00aa FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 623              	.LVL84:
 624 00ae 08BD     		pop	{r3, pc}
 625              	.LVL85:
 626              	.L51:
 144:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 627              		.loc 1 144 0
 628 00b0 0121     		movs	r1, #1
 629 00b2 0420     		movs	r0, #4
 630              	.LVL86:
 631 00b4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 632              	.LVL87:
 145:stm_lib/src/stm32f10x_tim.c ****   } 
 633              		.loc 1 145 0
ARM GAS  /tmp/ccu4SMAM.s 			page 63


 634 00b8 0021     		movs	r1, #0
 635 00ba 0420     		movs	r0, #4
 636 00bc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 637              	.LVL88:
 638 00c0 08BD     		pop	{r3, pc}
 639              	.LVL89:
 640              	.L52:
 149:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 641              		.loc 1 149 0
 642 00c2 0121     		movs	r1, #1
 643 00c4 0820     		movs	r0, #8
 644              	.LVL90:
 645 00c6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 646              	.LVL91:
 150:stm_lib/src/stm32f10x_tim.c ****   } 
 647              		.loc 1 150 0
 648 00ca 0021     		movs	r1, #0
 649 00cc 0820     		movs	r0, #8
 650 00ce FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 651              	.LVL92:
 652 00d2 08BD     		pop	{r3, pc}
 653              	.LVL93:
 654              	.L53:
 154:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 655              		.loc 1 154 0
 656 00d4 0121     		movs	r1, #1
 657 00d6 1020     		movs	r0, #16
 658              	.LVL94:
 659 00d8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 660              	.LVL95:
 155:stm_lib/src/stm32f10x_tim.c ****   } 
 661              		.loc 1 155 0
 662 00dc 0021     		movs	r1, #0
 663 00de 1020     		movs	r0, #16
 664 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 665              	.LVL96:
 666 00e4 08BD     		pop	{r3, pc}
 667              	.LVL97:
 668              	.L54:
 159:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 669              		.loc 1 159 0
 670 00e6 0121     		movs	r1, #1
 671 00e8 2020     		movs	r0, #32
 672              	.LVL98:
 673 00ea FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 674              	.LVL99:
 160:stm_lib/src/stm32f10x_tim.c ****   } 
 675              		.loc 1 160 0
 676 00ee 0021     		movs	r1, #0
 677 00f0 2020     		movs	r0, #32
 678 00f2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 679              	.LVL100:
 680 00f6 08BD     		pop	{r3, pc}
 681              	.LVL101:
 682              	.L55:
 164:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 683              		.loc 1 164 0
ARM GAS  /tmp/ccu4SMAM.s 			page 64


 684 00f8 0121     		movs	r1, #1
 685 00fa 4FF40050 		mov	r0, #8192
 686              	.LVL102:
 687 00fe FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 688              	.LVL103:
 165:stm_lib/src/stm32f10x_tim.c ****   }
 689              		.loc 1 165 0
 690 0102 0021     		movs	r1, #0
 691 0104 4FF40050 		mov	r0, #8192
 692 0108 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 693              	.LVL104:
 694 010c 08BD     		pop	{r3, pc}
 695              	.LVL105:
 696              	.L56:
 169:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 697              		.loc 1 169 0
 698 010e 0121     		movs	r1, #1
 699 0110 4FF40020 		mov	r0, #524288
 700              	.LVL106:
 701 0114 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 702              	.LVL107:
 170:stm_lib/src/stm32f10x_tim.c ****    }  
 703              		.loc 1 170 0
 704 0118 0021     		movs	r1, #0
 705 011a 4FF40020 		mov	r0, #524288
 706 011e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 707              	.LVL108:
 708 0122 08BD     		pop	{r3, pc}
 709              	.LVL109:
 710              	.L57:
 174:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 711              		.loc 1 174 0
 712 0124 0121     		movs	r1, #1
 713 0126 4FF48010 		mov	r0, #1048576
 714              	.LVL110:
 715 012a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 716              	.LVL111:
 175:stm_lib/src/stm32f10x_tim.c ****   }  
 717              		.loc 1 175 0
 718 012e 0021     		movs	r1, #0
 719 0130 4FF48010 		mov	r0, #1048576
 720 0134 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 721              	.LVL112:
 722 0138 08BD     		pop	{r3, pc}
 723              	.LVL113:
 724              	.L58:
 179:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 725              		.loc 1 179 0
 726 013a 0121     		movs	r1, #1
 727 013c 4FF40010 		mov	r0, #2097152
 728              	.LVL114:
 729 0140 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 730              	.LVL115:
 180:stm_lib/src/stm32f10x_tim.c ****   }  
 731              		.loc 1 180 0
 732 0144 0021     		movs	r1, #0
 733 0146 4FF40010 		mov	r0, #2097152
ARM GAS  /tmp/ccu4SMAM.s 			page 65


 734 014a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 735              	.LVL116:
 736 014e 08BD     		pop	{r3, pc}
 737              	.LVL117:
 738              	.L59:
 184:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 739              		.loc 1 184 0
 740 0150 0121     		movs	r1, #1
 741 0152 4020     		movs	r0, #64
 742              	.LVL118:
 743 0154 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 744              	.LVL119:
 185:stm_lib/src/stm32f10x_tim.c ****   }  
 745              		.loc 1 185 0
 746 0158 0021     		movs	r1, #0
 747 015a 4020     		movs	r0, #64
 748 015c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 749              	.LVL120:
 750 0160 08BD     		pop	{r3, pc}
 751              	.LVL121:
 752              	.L60:
 189:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 753              		.loc 1 189 0
 754 0162 0121     		movs	r1, #1
 755 0164 8020     		movs	r0, #128
 756              	.LVL122:
 757 0166 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 758              	.LVL123:
 190:stm_lib/src/stm32f10x_tim.c ****   }
 759              		.loc 1 190 0
 760 016a 0021     		movs	r1, #0
 761 016c 8020     		movs	r0, #128
 762 016e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 763              	.LVL124:
 764 0172 08BD     		pop	{r3, pc}
 765              	.LVL125:
 766              	.L61:
 194:stm_lib/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 767              		.loc 1 194 0
 768 0174 0121     		movs	r1, #1
 769 0176 4FF48070 		mov	r0, #256
 770              	.LVL126:
 771 017a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 772              	.LVL127:
 195:stm_lib/src/stm32f10x_tim.c ****   }        
 773              		.loc 1 195 0
 774 017e 0021     		movs	r1, #0
 775 0180 4FF48070 		mov	r0, #256
 776 0184 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 777              	.LVL128:
 778 0188 08BD     		pop	{r3, pc}
 779              	.LVL129:
 780              	.L62:
 199:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 781              		.loc 1 199 0
 782 018a 0121     		movs	r1, #1
 783 018c 4FF48030 		mov	r0, #65536
ARM GAS  /tmp/ccu4SMAM.s 			page 66


 784              	.LVL130:
 785 0190 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 786              	.LVL131:
 200:stm_lib/src/stm32f10x_tim.c ****   } 
 787              		.loc 1 200 0
 788 0194 0021     		movs	r1, #0
 789 0196 4FF48030 		mov	r0, #65536
 790 019a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 791              	.LVL132:
 792 019e 08BD     		pop	{r3, pc}
 793              	.LVL133:
 794              	.L63:
 204:stm_lib/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 795              		.loc 1 204 0
 796 01a0 0121     		movs	r1, #1
 797 01a2 4FF40030 		mov	r0, #131072
 798              	.LVL134:
 799 01a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 800              	.LVL135:
 205:stm_lib/src/stm32f10x_tim.c ****   } 
 801              		.loc 1 205 0
 802 01aa 0021     		movs	r1, #0
 803 01ac 4FF40030 		mov	r0, #131072
 804 01b0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 805              	.LVL136:
 806 01b4 08BD     		pop	{r3, pc}
 807              	.LVL137:
 808              	.L64:
 211:stm_lib/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 809              		.loc 1 211 0
 810 01b6 0121     		movs	r1, #1
 811 01b8 4FF48020 		mov	r0, #262144
 812              	.LVL138:
 813 01bc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 814              	.LVL139:
 212:stm_lib/src/stm32f10x_tim.c ****     }  
 815              		.loc 1 212 0
 816 01c0 0021     		movs	r1, #0
 817 01c2 4FF48020 		mov	r0, #262144
 818 01c6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 819              	.LVL140:
 215:stm_lib/src/stm32f10x_tim.c **** 
 820              		.loc 1 215 0
 821 01ca 53E7     		b	.L29
 822              	.L66:
 823              		.align	2
 824              	.L65:
 825 01cc 002C0140 		.word	1073818624
 826 01d0 00040040 		.word	1073742848
 827 01d4 00080040 		.word	1073743872
 828 01d8 000C0040 		.word	1073744896
 829 01dc 00100040 		.word	1073745920
 830 01e0 00140040 		.word	1073746944
 831 01e4 00340140 		.word	1073820672
 832 01e8 004C0140 		.word	1073826816
 833 01ec 00500140 		.word	1073827840
 834 01f0 00540140 		.word	1073828864
ARM GAS  /tmp/ccu4SMAM.s 			page 67


 835 01f4 00180040 		.word	1073747968
 836 01f8 001C0040 		.word	1073748992
 837 01fc 00200040 		.word	1073750016
 838 0200 00400140 		.word	1073823744
 839 0204 00440140 		.word	1073824768
 840 0208 00480140 		.word	1073825792
 841              		.cfi_endproc
 842              	.LFE56:
 844              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 845              		.align	1
 846              		.global	TIM_TimeBaseInit
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 852              	TIM_TimeBaseInit:
 853              	.LFB57:
 227:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 854              		.loc 1 227 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL141:
 235:stm_lib/src/stm32f10x_tim.c **** 
 860              		.loc 1 235 0
 861 0000 0388     		ldrh	r3, [r0]
 862 0002 9BB2     		uxth	r3, r3
 863              	.LVL142:
 237:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 864              		.loc 1 237 0
 865 0004 214A     		ldr	r2, .L73
 866 0006 9042     		cmp	r0, r2
 867 0008 12D0     		beq	.L68
 237:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 868              		.loc 1 237 0 is_stmt 0 discriminator 1
 869 000a 02F50062 		add	r2, r2, #2048
 870 000e 9042     		cmp	r0, r2
 871 0010 0ED0     		beq	.L68
 237:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 872              		.loc 1 237 0 discriminator 2
 873 0012 B0F1804F 		cmp	r0, #1073741824
 874 0016 0BD0     		beq	.L68
 237:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 875              		.loc 1 237 0 discriminator 3
 876 0018 A2F59832 		sub	r2, r2, #77824
 877 001c 9042     		cmp	r0, r2
 878 001e 07D0     		beq	.L68
 237:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 879              		.loc 1 237 0 discriminator 4
 880 0020 02F58062 		add	r2, r2, #1024
 881 0024 9042     		cmp	r0, r2
 882 0026 03D0     		beq	.L68
 238:stm_lib/src/stm32f10x_tim.c ****   {
 883              		.loc 1 238 0 is_stmt 1
 884 0028 02F58062 		add	r2, r2, #1024
 885 002c 9042     		cmp	r0, r2
ARM GAS  /tmp/ccu4SMAM.s 			page 68


 886 002e 03D1     		bne	.L69
 887              	.L68:
 241:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 888              		.loc 1 241 0
 889 0030 23F07003 		bic	r3, r3, #112
 890              	.LVL143:
 242:stm_lib/src/stm32f10x_tim.c ****   }
 891              		.loc 1 242 0
 892 0034 4A88     		ldrh	r2, [r1, #2]
 893 0036 1343     		orrs	r3, r3, r2
 894              	.LVL144:
 895              	.L69:
 245:stm_lib/src/stm32f10x_tim.c ****   {
 896              		.loc 1 245 0
 897 0038 154A     		ldr	r2, .L73+4
 898 003a 9042     		cmp	r0, r2
 899 003c 08D0     		beq	.L70
 245:stm_lib/src/stm32f10x_tim.c ****   {
 900              		.loc 1 245 0 is_stmt 0 discriminator 1
 901 003e 02F58062 		add	r2, r2, #1024
 902 0042 9042     		cmp	r0, r2
 903 0044 04D0     		beq	.L70
 248:stm_lib/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 904              		.loc 1 248 0 is_stmt 1
 905 0046 23F44073 		bic	r3, r3, #768
 906              	.LVL145:
 907 004a 9BB2     		uxth	r3, r3
 908              	.LVL146:
 249:stm_lib/src/stm32f10x_tim.c ****   }
 909              		.loc 1 249 0
 910 004c CA88     		ldrh	r2, [r1, #6]
 911 004e 1343     		orrs	r3, r3, r2
 912              	.LVL147:
 913              	.L70:
 252:stm_lib/src/stm32f10x_tim.c **** 
 914              		.loc 1 252 0
 915 0050 0380     		strh	r3, [r0]	@ movhi
 255:stm_lib/src/stm32f10x_tim.c ****  
 916              		.loc 1 255 0
 917 0052 8B88     		ldrh	r3, [r1, #4]
 918              	.LVL148:
 919 0054 8385     		strh	r3, [r0, #44]	@ movhi
 920              	.LVL149:
 258:stm_lib/src/stm32f10x_tim.c ****     
 921              		.loc 1 258 0
 922 0056 0B88     		ldrh	r3, [r1]
 923 0058 0385     		strh	r3, [r0, #40]	@ movhi
 260:stm_lib/src/stm32f10x_tim.c ****   {
 924              		.loc 1 260 0
 925 005a 0C4B     		ldr	r3, .L73
 926 005c 9842     		cmp	r0, r3
 927 005e 0FD0     		beq	.L71
 260:stm_lib/src/stm32f10x_tim.c ****   {
 928              		.loc 1 260 0 is_stmt 0 discriminator 1
 929 0060 03F50063 		add	r3, r3, #2048
 930 0064 9842     		cmp	r0, r3
 931 0066 0BD0     		beq	.L71
ARM GAS  /tmp/ccu4SMAM.s 			page 69


 260:stm_lib/src/stm32f10x_tim.c ****   {
 932              		.loc 1 260 0 discriminator 2
 933 0068 03F54063 		add	r3, r3, #3072
 934 006c 9842     		cmp	r0, r3
 935 006e 07D0     		beq	.L71
 260:stm_lib/src/stm32f10x_tim.c ****   {
 936              		.loc 1 260 0 discriminator 3
 937 0070 03F58063 		add	r3, r3, #1024
 938 0074 9842     		cmp	r0, r3
 939 0076 03D0     		beq	.L71
 260:stm_lib/src/stm32f10x_tim.c ****   {
 940              		.loc 1 260 0 discriminator 4
 941 0078 03F58063 		add	r3, r3, #1024
 942 007c 9842     		cmp	r0, r3
 943 007e 01D1     		bne	.L72
 944              	.L71:
 263:stm_lib/src/stm32f10x_tim.c ****   }
 945              		.loc 1 263 0 is_stmt 1
 946 0080 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 947 0082 0386     		strh	r3, [r0, #48]	@ movhi
 948              	.L72:
 268:stm_lib/src/stm32f10x_tim.c **** }
 949              		.loc 1 268 0
 950 0084 0123     		movs	r3, #1
 951 0086 8382     		strh	r3, [r0, #20]	@ movhi
 952 0088 7047     		bx	lr
 953              	.L74:
 954 008a 00BF     		.align	2
 955              	.L73:
 956 008c 002C0140 		.word	1073818624
 957 0090 00100040 		.word	1073745920
 958              		.cfi_endproc
 959              	.LFE57:
 961              		.section	.text.TIM_OC1Init,"ax",%progbits
 962              		.align	1
 963              		.global	TIM_OC1Init
 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 967              		.fpu softvfp
 969              	TIM_OC1Init:
 970              	.LFB58:
 280:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 971              		.loc 1 280 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 976              	.LVL150:
 977 0000 30B4     		push	{r4, r5}
 978              	.LCFI13:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 5, -4
 982              	.LVL151:
 289:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 983              		.loc 1 289 0
ARM GAS  /tmp/ccu4SMAM.s 			page 70


 984 0002 038C     		ldrh	r3, [r0, #32]
 985 0004 9BB2     		uxth	r3, r3
 986 0006 23F00103 		bic	r3, r3, #1
 987 000a 9BB2     		uxth	r3, r3
 988 000c 0384     		strh	r3, [r0, #32]	@ movhi
 291:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 989              		.loc 1 291 0
 990 000e 038C     		ldrh	r3, [r0, #32]
 991 0010 9BB2     		uxth	r3, r3
 992              	.LVL152:
 293:stm_lib/src/stm32f10x_tim.c ****   
 993              		.loc 1 293 0
 994 0012 8488     		ldrh	r4, [r0, #4]
 995 0014 A4B2     		uxth	r4, r4
 996              	.LVL153:
 296:stm_lib/src/stm32f10x_tim.c ****     
 997              		.loc 1 296 0
 998 0016 028B     		ldrh	r2, [r0, #24]
 999 0018 92B2     		uxth	r2, r2
 1000              	.LVL154:
 300:stm_lib/src/stm32f10x_tim.c **** 
 1001              		.loc 1 300 0
 1002 001a 22F07302 		bic	r2, r2, #115
 1003              	.LVL155:
 303:stm_lib/src/stm32f10x_tim.c ****   
 1004              		.loc 1 303 0
 1005 001e 0D88     		ldrh	r5, [r1]
 1006 0020 2A43     		orrs	r2, r2, r5
 1007              	.LVL156:
 306:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1008              		.loc 1 306 0
 1009 0022 23F00203 		bic	r3, r3, #2
 1010              	.LVL157:
 308:stm_lib/src/stm32f10x_tim.c ****   
 1011              		.loc 1 308 0
 1012 0026 0D89     		ldrh	r5, [r1, #8]
 1013 0028 2B43     		orrs	r3, r3, r5
 1014              	.LVL158:
 311:stm_lib/src/stm32f10x_tim.c ****     
 1015              		.loc 1 311 0
 1016 002a 4D88     		ldrh	r5, [r1, #2]
 1017 002c 2B43     		orrs	r3, r3, r5
 1018              	.LVL159:
 313:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1019              		.loc 1 313 0
 1020 002e 144D     		ldr	r5, .L79
 1021 0030 A842     		cmp	r0, r5
 1022 0032 0FD0     		beq	.L76
 313:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1023              		.loc 1 313 0 is_stmt 0 discriminator 1
 1024 0034 05F50065 		add	r5, r5, #2048
 1025 0038 A842     		cmp	r0, r5
 1026 003a 0BD0     		beq	.L76
 313:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1027              		.loc 1 313 0 discriminator 2
 1028 003c 05F54065 		add	r5, r5, #3072
 1029 0040 A842     		cmp	r0, r5
ARM GAS  /tmp/ccu4SMAM.s 			page 71


 1030 0042 07D0     		beq	.L76
 313:stm_lib/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1031              		.loc 1 313 0 discriminator 3
 1032 0044 05F58065 		add	r5, r5, #1024
 1033 0048 A842     		cmp	r0, r5
 1034 004a 03D0     		beq	.L76
 314:stm_lib/src/stm32f10x_tim.c ****   {
 1035              		.loc 1 314 0 is_stmt 1
 1036 004c 05F58065 		add	r5, r5, #1024
 1037 0050 A842     		cmp	r0, r5
 1038 0052 0DD1     		bne	.L77
 1039              	.L76:
 322:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1040              		.loc 1 322 0
 1041 0054 23F00803 		bic	r3, r3, #8
 1042              	.LVL160:
 324:stm_lib/src/stm32f10x_tim.c ****     
 1043              		.loc 1 324 0
 1044 0058 4D89     		ldrh	r5, [r1, #10]
 1045 005a 2B43     		orrs	r3, r3, r5
 1046              	.LVL161:
 327:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1047              		.loc 1 327 0
 1048 005c 23F00403 		bic	r3, r3, #4
 1049              	.LVL162:
 329:stm_lib/src/stm32f10x_tim.c ****     
 1050              		.loc 1 329 0
 1051 0060 8D88     		ldrh	r5, [r1, #4]
 1052 0062 2B43     		orrs	r3, r3, r5
 1053              	.LVL163:
 333:stm_lib/src/stm32f10x_tim.c ****     
 1054              		.loc 1 333 0
 1055 0064 24F44074 		bic	r4, r4, #768
 1056              	.LVL164:
 336:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1057              		.loc 1 336 0
 1058 0068 8D89     		ldrh	r5, [r1, #12]
 1059 006a 2C43     		orrs	r4, r4, r5
 1060              	.LVL165:
 338:stm_lib/src/stm32f10x_tim.c ****   }
 1061              		.loc 1 338 0
 1062 006c CD89     		ldrh	r5, [r1, #14]
 1063 006e 2C43     		orrs	r4, r4, r5
 1064              	.LVL166:
 1065              	.L77:
 341:stm_lib/src/stm32f10x_tim.c ****   
 1066              		.loc 1 341 0
 1067 0070 8480     		strh	r4, [r0, #4]	@ movhi
 344:stm_lib/src/stm32f10x_tim.c **** 
 1068              		.loc 1 344 0
 1069 0072 0283     		strh	r2, [r0, #24]	@ movhi
 347:stm_lib/src/stm32f10x_tim.c ****  
 1070              		.loc 1 347 0
 1071 0074 CA88     		ldrh	r2, [r1, #6]
 1072              	.LVL167:
 1073 0076 8286     		strh	r2, [r0, #52]	@ movhi
 1074              	.LVL168:
ARM GAS  /tmp/ccu4SMAM.s 			page 72


 350:stm_lib/src/stm32f10x_tim.c **** }
 1075              		.loc 1 350 0
 1076 0078 0384     		strh	r3, [r0, #32]	@ movhi
 351:stm_lib/src/stm32f10x_tim.c **** 
 1077              		.loc 1 351 0
 1078 007a 30BC     		pop	{r4, r5}
 1079              	.LCFI14:
 1080              		.cfi_restore 5
 1081              		.cfi_restore 4
 1082              		.cfi_def_cfa_offset 0
 1083              	.LVL169:
 1084 007c 7047     		bx	lr
 1085              	.L80:
 1086 007e 00BF     		.align	2
 1087              	.L79:
 1088 0080 002C0140 		.word	1073818624
 1089              		.cfi_endproc
 1090              	.LFE58:
 1092              		.section	.text.TIM_OC2Init,"ax",%progbits
 1093              		.align	1
 1094              		.global	TIM_OC2Init
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu softvfp
 1100              	TIM_OC2Init:
 1101              	.LFB59:
 363:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1102              		.loc 1 363 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 1107              	.LVL170:
 1108 0000 30B4     		push	{r4, r5}
 1109              	.LCFI15:
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 4, -8
 1112              		.cfi_offset 5, -4
 1113              	.LVL171:
 372:stm_lib/src/stm32f10x_tim.c ****   
 1114              		.loc 1 372 0
 1115 0002 038C     		ldrh	r3, [r0, #32]
 1116 0004 9BB2     		uxth	r3, r3
 1117 0006 23F01003 		bic	r3, r3, #16
 1118 000a 9BB2     		uxth	r3, r3
 1119 000c 0384     		strh	r3, [r0, #32]	@ movhi
 375:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1120              		.loc 1 375 0
 1121 000e 038C     		ldrh	r3, [r0, #32]
 1122 0010 9BB2     		uxth	r3, r3
 1123              	.LVL172:
 377:stm_lib/src/stm32f10x_tim.c ****   
 1124              		.loc 1 377 0
 1125 0012 8588     		ldrh	r5, [r0, #4]
 1126 0014 ADB2     		uxth	r5, r5
 1127              	.LVL173:
ARM GAS  /tmp/ccu4SMAM.s 			page 73


 380:stm_lib/src/stm32f10x_tim.c ****     
 1128              		.loc 1 380 0
 1129 0016 028B     		ldrh	r2, [r0, #24]
 1130 0018 92B2     		uxth	r2, r2
 1131              	.LVL174:
 384:stm_lib/src/stm32f10x_tim.c ****   
 1132              		.loc 1 384 0
 1133 001a 22F4E644 		bic	r4, r2, #29440
 1134              	.LVL175:
 387:stm_lib/src/stm32f10x_tim.c ****   
 1135              		.loc 1 387 0
 1136 001e 0A88     		ldrh	r2, [r1]
 1137 0020 1202     		lsls	r2, r2, #8
 1138 0022 92B2     		uxth	r2, r2
 1139 0024 2243     		orrs	r2, r2, r4
 1140              	.LVL176:
 390:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1141              		.loc 1 390 0
 1142 0026 23F02003 		bic	r3, r3, #32
 1143              	.LVL177:
 392:stm_lib/src/stm32f10x_tim.c ****   
 1144              		.loc 1 392 0
 1145 002a 0C89     		ldrh	r4, [r1, #8]
 1146 002c 2401     		lsls	r4, r4, #4
 1147 002e A4B2     		uxth	r4, r4
 1148 0030 2343     		orrs	r3, r3, r4
 1149              	.LVL178:
 395:stm_lib/src/stm32f10x_tim.c ****     
 1150              		.loc 1 395 0
 1151 0032 4C88     		ldrh	r4, [r1, #2]
 1152 0034 2401     		lsls	r4, r4, #4
 1153 0036 A4B2     		uxth	r4, r4
 1154 0038 2343     		orrs	r3, r3, r4
 1155              	.LVL179:
 397:stm_lib/src/stm32f10x_tim.c ****   {
 1156              		.loc 1 397 0
 1157 003a 124C     		ldr	r4, .L85
 1158 003c A042     		cmp	r0, r4
 1159 003e 0AD0     		beq	.L82
 397:stm_lib/src/stm32f10x_tim.c ****   {
 1160              		.loc 1 397 0 is_stmt 0 discriminator 1
 1161 0040 04F50064 		add	r4, r4, #2048
 1162 0044 A042     		cmp	r0, r4
 1163 0046 06D0     		beq	.L82
 1164              	.L83:
 424:stm_lib/src/stm32f10x_tim.c ****   
 1165              		.loc 1 424 0 is_stmt 1
 1166 0048 8580     		strh	r5, [r0, #4]	@ movhi
 427:stm_lib/src/stm32f10x_tim.c **** 
 1167              		.loc 1 427 0
 1168 004a 0283     		strh	r2, [r0, #24]	@ movhi
 430:stm_lib/src/stm32f10x_tim.c ****   
 1169              		.loc 1 430 0
 1170 004c CA88     		ldrh	r2, [r1, #6]
 1171              	.LVL180:
 1172 004e 0287     		strh	r2, [r0, #56]	@ movhi
 1173              	.LVL181:
ARM GAS  /tmp/ccu4SMAM.s 			page 74


 433:stm_lib/src/stm32f10x_tim.c **** }
 1174              		.loc 1 433 0
 1175 0050 0384     		strh	r3, [r0, #32]	@ movhi
 434:stm_lib/src/stm32f10x_tim.c **** 
 1176              		.loc 1 434 0
 1177 0052 30BC     		pop	{r4, r5}
 1178              	.LCFI16:
 1179              		.cfi_remember_state
 1180              		.cfi_restore 5
 1181              		.cfi_restore 4
 1182              		.cfi_def_cfa_offset 0
 1183              	.LVL182:
 1184 0054 7047     		bx	lr
 1185              	.LVL183:
 1186              	.L82:
 1187              	.LCFI17:
 1188              		.cfi_restore_state
 405:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1189              		.loc 1 405 0
 1190 0056 23F08003 		bic	r3, r3, #128
 1191              	.LVL184:
 407:stm_lib/src/stm32f10x_tim.c ****     
 1192              		.loc 1 407 0
 1193 005a 4C89     		ldrh	r4, [r1, #10]
 1194 005c 2401     		lsls	r4, r4, #4
 1195 005e A4B2     		uxth	r4, r4
 1196 0060 2343     		orrs	r3, r3, r4
 1197              	.LVL185:
 410:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1198              		.loc 1 410 0
 1199 0062 23F04004 		bic	r4, r3, #64
 1200              	.LVL186:
 412:stm_lib/src/stm32f10x_tim.c ****     
 1201              		.loc 1 412 0
 1202 0066 8B88     		ldrh	r3, [r1, #4]
 1203 0068 1B01     		lsls	r3, r3, #4
 1204 006a 9BB2     		uxth	r3, r3
 1205 006c 2343     		orrs	r3, r3, r4
 1206              	.LVL187:
 416:stm_lib/src/stm32f10x_tim.c ****     
 1207              		.loc 1 416 0
 1208 006e 25F44065 		bic	r5, r5, #3072
 1209              	.LVL188:
 419:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1210              		.loc 1 419 0
 1211 0072 8C89     		ldrh	r4, [r1, #12]
 1212 0074 A400     		lsls	r4, r4, #2
 1213 0076 A4B2     		uxth	r4, r4
 1214 0078 2543     		orrs	r5, r5, r4
 1215              	.LVL189:
 421:stm_lib/src/stm32f10x_tim.c ****   }
 1216              		.loc 1 421 0
 1217 007a CC89     		ldrh	r4, [r1, #14]
 1218 007c A400     		lsls	r4, r4, #2
 1219 007e A4B2     		uxth	r4, r4
 1220 0080 2543     		orrs	r5, r5, r4
 1221              	.LVL190:
ARM GAS  /tmp/ccu4SMAM.s 			page 75


 1222 0082 E1E7     		b	.L83
 1223              	.L86:
 1224              		.align	2
 1225              	.L85:
 1226 0084 002C0140 		.word	1073818624
 1227              		.cfi_endproc
 1228              	.LFE59:
 1230              		.section	.text.TIM_OC3Init,"ax",%progbits
 1231              		.align	1
 1232              		.global	TIM_OC3Init
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.fpu softvfp
 1238              	TIM_OC3Init:
 1239              	.LFB60:
 445:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1240              		.loc 1 445 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
 1245              	.LVL191:
 1246 0000 30B4     		push	{r4, r5}
 1247              	.LCFI18:
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 4, -8
 1250              		.cfi_offset 5, -4
 1251              	.LVL192:
 454:stm_lib/src/stm32f10x_tim.c ****   
 1252              		.loc 1 454 0
 1253 0002 038C     		ldrh	r3, [r0, #32]
 1254 0004 9BB2     		uxth	r3, r3
 1255 0006 23F48073 		bic	r3, r3, #256
 1256 000a 9BB2     		uxth	r3, r3
 1257 000c 0384     		strh	r3, [r0, #32]	@ movhi
 457:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1258              		.loc 1 457 0
 1259 000e 038C     		ldrh	r3, [r0, #32]
 1260 0010 9BB2     		uxth	r3, r3
 1261              	.LVL193:
 459:stm_lib/src/stm32f10x_tim.c ****   
 1262              		.loc 1 459 0
 1263 0012 8588     		ldrh	r5, [r0, #4]
 1264 0014 ADB2     		uxth	r5, r5
 1265              	.LVL194:
 462:stm_lib/src/stm32f10x_tim.c ****     
 1266              		.loc 1 462 0
 1267 0016 828B     		ldrh	r2, [r0, #28]
 1268 0018 92B2     		uxth	r2, r2
 1269              	.LVL195:
 466:stm_lib/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 1270              		.loc 1 466 0
 1271 001a 22F07302 		bic	r2, r2, #115
 1272              	.LVL196:
 468:stm_lib/src/stm32f10x_tim.c ****   
 1273              		.loc 1 468 0
ARM GAS  /tmp/ccu4SMAM.s 			page 76


 1274 001e 0C88     		ldrh	r4, [r1]
 1275 0020 2243     		orrs	r2, r2, r4
 1276              	.LVL197:
 471:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1277              		.loc 1 471 0
 1278 0022 23F40073 		bic	r3, r3, #512
 1279              	.LVL198:
 473:stm_lib/src/stm32f10x_tim.c ****   
 1280              		.loc 1 473 0
 1281 0026 0C89     		ldrh	r4, [r1, #8]
 1282 0028 2402     		lsls	r4, r4, #8
 1283 002a A4B2     		uxth	r4, r4
 1284 002c 2343     		orrs	r3, r3, r4
 1285              	.LVL199:
 476:stm_lib/src/stm32f10x_tim.c ****     
 1286              		.loc 1 476 0
 1287 002e 4C88     		ldrh	r4, [r1, #2]
 1288 0030 2402     		lsls	r4, r4, #8
 1289 0032 A4B2     		uxth	r4, r4
 1290 0034 2343     		orrs	r3, r3, r4
 1291              	.LVL200:
 478:stm_lib/src/stm32f10x_tim.c ****   {
 1292              		.loc 1 478 0
 1293 0036 124C     		ldr	r4, .L91
 1294 0038 A042     		cmp	r0, r4
 1295 003a 0AD0     		beq	.L88
 478:stm_lib/src/stm32f10x_tim.c ****   {
 1296              		.loc 1 478 0 is_stmt 0 discriminator 1
 1297 003c 04F50064 		add	r4, r4, #2048
 1298 0040 A042     		cmp	r0, r4
 1299 0042 06D0     		beq	.L88
 1300              	.L89:
 503:stm_lib/src/stm32f10x_tim.c ****   
 1301              		.loc 1 503 0 is_stmt 1
 1302 0044 8580     		strh	r5, [r0, #4]	@ movhi
 506:stm_lib/src/stm32f10x_tim.c **** 
 1303              		.loc 1 506 0
 1304 0046 8283     		strh	r2, [r0, #28]	@ movhi
 509:stm_lib/src/stm32f10x_tim.c ****   
 1305              		.loc 1 509 0
 1306 0048 CA88     		ldrh	r2, [r1, #6]
 1307              	.LVL201:
 1308 004a 8287     		strh	r2, [r0, #60]	@ movhi
 1309              	.LVL202:
 512:stm_lib/src/stm32f10x_tim.c **** }
 1310              		.loc 1 512 0
 1311 004c 0384     		strh	r3, [r0, #32]	@ movhi
 513:stm_lib/src/stm32f10x_tim.c **** 
 1312              		.loc 1 513 0
 1313 004e 30BC     		pop	{r4, r5}
 1314              	.LCFI19:
 1315              		.cfi_remember_state
 1316              		.cfi_restore 5
 1317              		.cfi_restore 4
 1318              		.cfi_def_cfa_offset 0
 1319              	.LVL203:
 1320 0050 7047     		bx	lr
ARM GAS  /tmp/ccu4SMAM.s 			page 77


 1321              	.LVL204:
 1322              	.L88:
 1323              	.LCFI20:
 1324              		.cfi_restore_state
 486:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1325              		.loc 1 486 0
 1326 0052 23F40063 		bic	r3, r3, #2048
 1327              	.LVL205:
 488:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1328              		.loc 1 488 0
 1329 0056 4C89     		ldrh	r4, [r1, #10]
 1330 0058 2402     		lsls	r4, r4, #8
 1331 005a A4B2     		uxth	r4, r4
 1332 005c 2343     		orrs	r3, r3, r4
 1333              	.LVL206:
 490:stm_lib/src/stm32f10x_tim.c ****     
 1334              		.loc 1 490 0
 1335 005e 23F48064 		bic	r4, r3, #1024
 1336              	.LVL207:
 493:stm_lib/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1337              		.loc 1 493 0
 1338 0062 8B88     		ldrh	r3, [r1, #4]
 1339 0064 1B02     		lsls	r3, r3, #8
 1340 0066 9BB2     		uxth	r3, r3
 1341 0068 2343     		orrs	r3, r3, r4
 1342              	.LVL208:
 496:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1343              		.loc 1 496 0
 1344 006a 25F44055 		bic	r5, r5, #12288
 1345              	.LVL209:
 498:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1346              		.loc 1 498 0
 1347 006e 8C89     		ldrh	r4, [r1, #12]
 1348 0070 2401     		lsls	r4, r4, #4
 1349 0072 A4B2     		uxth	r4, r4
 1350 0074 2543     		orrs	r5, r5, r4
 1351              	.LVL210:
 500:stm_lib/src/stm32f10x_tim.c ****   }
 1352              		.loc 1 500 0
 1353 0076 CC89     		ldrh	r4, [r1, #14]
 1354 0078 2401     		lsls	r4, r4, #4
 1355 007a A4B2     		uxth	r4, r4
 1356 007c 2543     		orrs	r5, r5, r4
 1357              	.LVL211:
 1358 007e E1E7     		b	.L89
 1359              	.L92:
 1360              		.align	2
 1361              	.L91:
 1362 0080 002C0140 		.word	1073818624
 1363              		.cfi_endproc
 1364              	.LFE60:
 1366              		.section	.text.TIM_OC4Init,"ax",%progbits
 1367              		.align	1
 1368              		.global	TIM_OC4Init
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
ARM GAS  /tmp/ccu4SMAM.s 			page 78


 1372              		.fpu softvfp
 1374              	TIM_OC4Init:
 1375              	.LFB61:
 524:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1376              		.loc 1 524 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL212:
 1382 0000 30B4     		push	{r4, r5}
 1383              	.LCFI21:
 1384              		.cfi_def_cfa_offset 8
 1385              		.cfi_offset 4, -8
 1386              		.cfi_offset 5, -4
 1387              	.LVL213:
 533:stm_lib/src/stm32f10x_tim.c ****   
 1388              		.loc 1 533 0
 1389 0002 038C     		ldrh	r3, [r0, #32]
 1390 0004 9BB2     		uxth	r3, r3
 1391 0006 23F48053 		bic	r3, r3, #4096
 1392 000a 9BB2     		uxth	r3, r3
 1393 000c 0384     		strh	r3, [r0, #32]	@ movhi
 536:stm_lib/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1394              		.loc 1 536 0
 1395 000e 038C     		ldrh	r3, [r0, #32]
 1396 0010 9BB2     		uxth	r3, r3
 1397              	.LVL214:
 538:stm_lib/src/stm32f10x_tim.c ****   
 1398              		.loc 1 538 0
 1399 0012 8588     		ldrh	r5, [r0, #4]
 1400 0014 ADB2     		uxth	r5, r5
 1401              	.LVL215:
 541:stm_lib/src/stm32f10x_tim.c ****     
 1402              		.loc 1 541 0
 1403 0016 828B     		ldrh	r2, [r0, #28]
 1404 0018 92B2     		uxth	r2, r2
 1405              	.LVL216:
 545:stm_lib/src/stm32f10x_tim.c ****   
 1406              		.loc 1 545 0
 1407 001a 22F4E644 		bic	r4, r2, #29440
 1408              	.LVL217:
 548:stm_lib/src/stm32f10x_tim.c ****   
 1409              		.loc 1 548 0
 1410 001e 0A88     		ldrh	r2, [r1]
 1411 0020 1202     		lsls	r2, r2, #8
 1412 0022 92B2     		uxth	r2, r2
 1413 0024 2243     		orrs	r2, r2, r4
 1414              	.LVL218:
 551:stm_lib/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1415              		.loc 1 551 0
 1416 0026 23F40053 		bic	r3, r3, #8192
 1417              	.LVL219:
 553:stm_lib/src/stm32f10x_tim.c ****   
 1418              		.loc 1 553 0
 1419 002a 0C89     		ldrh	r4, [r1, #8]
 1420 002c 2403     		lsls	r4, r4, #12
ARM GAS  /tmp/ccu4SMAM.s 			page 79


 1421 002e A4B2     		uxth	r4, r4
 1422 0030 2343     		orrs	r3, r3, r4
 1423              	.LVL220:
 556:stm_lib/src/stm32f10x_tim.c ****     
 1424              		.loc 1 556 0
 1425 0032 4C88     		ldrh	r4, [r1, #2]
 1426 0034 2403     		lsls	r4, r4, #12
 1427 0036 A4B2     		uxth	r4, r4
 1428 0038 2343     		orrs	r3, r3, r4
 1429              	.LVL221:
 558:stm_lib/src/stm32f10x_tim.c ****   {
 1430              		.loc 1 558 0
 1431 003a 0B4C     		ldr	r4, .L97
 1432 003c A042     		cmp	r0, r4
 1433 003e 0BD0     		beq	.L94
 558:stm_lib/src/stm32f10x_tim.c ****   {
 1434              		.loc 1 558 0 is_stmt 0 discriminator 1
 1435 0040 04F50064 		add	r4, r4, #2048
 1436 0044 A042     		cmp	r0, r4
 1437 0046 07D0     		beq	.L94
 1438              	.L95:
 567:stm_lib/src/stm32f10x_tim.c ****   
 1439              		.loc 1 567 0 is_stmt 1
 1440 0048 8580     		strh	r5, [r0, #4]	@ movhi
 570:stm_lib/src/stm32f10x_tim.c **** 
 1441              		.loc 1 570 0
 1442 004a 8283     		strh	r2, [r0, #28]	@ movhi
 573:stm_lib/src/stm32f10x_tim.c ****   
 1443              		.loc 1 573 0
 1444 004c CA88     		ldrh	r2, [r1, #6]
 1445              	.LVL222:
 1446 004e A0F84020 		strh	r2, [r0, #64]	@ movhi
 1447              	.LVL223:
 576:stm_lib/src/stm32f10x_tim.c **** }
 1448              		.loc 1 576 0
 1449 0052 0384     		strh	r3, [r0, #32]	@ movhi
 577:stm_lib/src/stm32f10x_tim.c **** 
 1450              		.loc 1 577 0
 1451 0054 30BC     		pop	{r4, r5}
 1452              	.LCFI22:
 1453              		.cfi_remember_state
 1454              		.cfi_restore 5
 1455              		.cfi_restore 4
 1456              		.cfi_def_cfa_offset 0
 1457              	.LVL224:
 1458 0056 7047     		bx	lr
 1459              	.LVL225:
 1460              	.L94:
 1461              	.LCFI23:
 1462              		.cfi_restore_state
 562:stm_lib/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1463              		.loc 1 562 0
 1464 0058 25F48045 		bic	r5, r5, #16384
 1465              	.LVL226:
 564:stm_lib/src/stm32f10x_tim.c ****   }
 1466              		.loc 1 564 0
 1467 005c 8C89     		ldrh	r4, [r1, #12]
ARM GAS  /tmp/ccu4SMAM.s 			page 80


 1468 005e A401     		lsls	r4, r4, #6
 1469 0060 A4B2     		uxth	r4, r4
 1470 0062 2543     		orrs	r5, r5, r4
 1471              	.LVL227:
 1472 0064 F0E7     		b	.L95
 1473              	.L98:
 1474 0066 00BF     		.align	2
 1475              	.L97:
 1476 0068 002C0140 		.word	1073818624
 1477              		.cfi_endproc
 1478              	.LFE61:
 1480              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1481              		.align	1
 1482              		.global	TIM_BDTRConfig
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1486              		.fpu softvfp
 1488              	TIM_BDTRConfig:
 1489              	.LFB64:
 713:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1490              		.loc 1 713 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              	.LVL228:
 1495 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1496              	.LCFI24:
 1497              		.cfi_def_cfa_offset 20
 1498              		.cfi_offset 4, -20
 1499              		.cfi_offset 5, -16
 1500              		.cfi_offset 6, -12
 1501              		.cfi_offset 7, -8
 1502              		.cfi_offset 14, -4
 724:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1503              		.loc 1 724 0
 1504 0002 0F88     		ldrh	r7, [r1]
 1505 0004 B1F802E0 		ldrh	lr, [r1, #2]
 725:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 1506              		.loc 1 725 0
 1507 0008 8E88     		ldrh	r6, [r1, #4]
 1508 000a CD88     		ldrh	r5, [r1, #6]
 726:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 1509              		.loc 1 726 0
 1510 000c 0C89     		ldrh	r4, [r1, #8]
 1511 000e 4A89     		ldrh	r2, [r1, #10]
 727:stm_lib/src/stm32f10x_tim.c **** }
 1512              		.loc 1 727 0
 1513 0010 8B89     		ldrh	r3, [r1, #12]
 724:stm_lib/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1514              		.loc 1 724 0
 1515 0012 47EA0E01 		orr	r1, r7, lr
 1516              	.LVL229:
 1517 0016 3143     		orrs	r1, r1, r6
 1518 0018 2943     		orrs	r1, r1, r5
 1519 001a 2143     		orrs	r1, r1, r4
 1520 001c 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccu4SMAM.s 			page 81


 1521 001e 1343     		orrs	r3, r3, r2
 1522 0020 A0F84430 		strh	r3, [r0, #68]	@ movhi
 1523 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 1524              		.cfi_endproc
 1525              	.LFE64:
 1527              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 1528              		.align	1
 1529              		.global	TIM_TimeBaseStructInit
 1530              		.syntax unified
 1531              		.thumb
 1532              		.thumb_func
 1533              		.fpu softvfp
 1535              	TIM_TimeBaseStructInit:
 1536              	.LFB65:
 737:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1537              		.loc 1 737 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541              		@ link register save eliminated.
 1542              	.LVL230:
 739:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1543              		.loc 1 739 0
 1544 0000 4FF6FF73 		movw	r3, #65535
 1545 0004 8380     		strh	r3, [r0, #4]	@ movhi
 740:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1546              		.loc 1 740 0
 1547 0006 0023     		movs	r3, #0
 1548 0008 0380     		strh	r3, [r0]	@ movhi
 741:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1549              		.loc 1 741 0
 1550 000a C380     		strh	r3, [r0, #6]	@ movhi
 742:stm_lib/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1551              		.loc 1 742 0
 1552 000c 4380     		strh	r3, [r0, #2]	@ movhi
 743:stm_lib/src/stm32f10x_tim.c **** }
 1553              		.loc 1 743 0
 1554 000e 0372     		strb	r3, [r0, #8]
 1555 0010 7047     		bx	lr
 1556              		.cfi_endproc
 1557              	.LFE65:
 1559              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1560              		.align	1
 1561              		.global	TIM_OCStructInit
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	TIM_OCStructInit:
 1568              	.LFB66:
 753:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1569              		.loc 1 753 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574              	.LVL231:
ARM GAS  /tmp/ccu4SMAM.s 			page 82


 755:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1575              		.loc 1 755 0
 1576 0000 0023     		movs	r3, #0
 1577 0002 0380     		strh	r3, [r0]	@ movhi
 756:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1578              		.loc 1 756 0
 1579 0004 4380     		strh	r3, [r0, #2]	@ movhi
 757:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1580              		.loc 1 757 0
 1581 0006 8380     		strh	r3, [r0, #4]	@ movhi
 758:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1582              		.loc 1 758 0
 1583 0008 C380     		strh	r3, [r0, #6]	@ movhi
 759:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1584              		.loc 1 759 0
 1585 000a 0381     		strh	r3, [r0, #8]	@ movhi
 760:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1586              		.loc 1 760 0
 1587 000c 4381     		strh	r3, [r0, #10]	@ movhi
 761:stm_lib/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1588              		.loc 1 761 0
 1589 000e 8381     		strh	r3, [r0, #12]	@ movhi
 762:stm_lib/src/stm32f10x_tim.c **** }
 1590              		.loc 1 762 0
 1591 0010 C381     		strh	r3, [r0, #14]	@ movhi
 1592 0012 7047     		bx	lr
 1593              		.cfi_endproc
 1594              	.LFE66:
 1596              		.section	.text.TIM_ICStructInit,"ax",%progbits
 1597              		.align	1
 1598              		.global	TIM_ICStructInit
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu softvfp
 1604              	TIM_ICStructInit:
 1605              	.LFB67:
 772:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1606              		.loc 1 772 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611              	.LVL232:
 774:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1612              		.loc 1 774 0
 1613 0000 0023     		movs	r3, #0
 1614 0002 0380     		strh	r3, [r0]	@ movhi
 775:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1615              		.loc 1 775 0
 1616 0004 4380     		strh	r3, [r0, #2]	@ movhi
 776:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1617              		.loc 1 776 0
 1618 0006 0122     		movs	r2, #1
 1619 0008 8280     		strh	r2, [r0, #4]	@ movhi
 777:stm_lib/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1620              		.loc 1 777 0
ARM GAS  /tmp/ccu4SMAM.s 			page 83


 1621 000a C380     		strh	r3, [r0, #6]	@ movhi
 778:stm_lib/src/stm32f10x_tim.c **** }
 1622              		.loc 1 778 0
 1623 000c 0381     		strh	r3, [r0, #8]	@ movhi
 1624 000e 7047     		bx	lr
 1625              		.cfi_endproc
 1626              	.LFE67:
 1628              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 1629              		.align	1
 1630              		.global	TIM_BDTRStructInit
 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu softvfp
 1636              	TIM_BDTRStructInit:
 1637              	.LFB68:
 788:stm_lib/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1638              		.loc 1 788 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643              	.LVL233:
 790:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1644              		.loc 1 790 0
 1645 0000 0023     		movs	r3, #0
 1646 0002 0380     		strh	r3, [r0]	@ movhi
 791:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1647              		.loc 1 791 0
 1648 0004 4380     		strh	r3, [r0, #2]	@ movhi
 792:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1649              		.loc 1 792 0
 1650 0006 8380     		strh	r3, [r0, #4]	@ movhi
 793:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1651              		.loc 1 793 0
 1652 0008 C380     		strh	r3, [r0, #6]	@ movhi
 794:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1653              		.loc 1 794 0
 1654 000a 0381     		strh	r3, [r0, #8]	@ movhi
 795:stm_lib/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1655              		.loc 1 795 0
 1656 000c 4381     		strh	r3, [r0, #10]	@ movhi
 796:stm_lib/src/stm32f10x_tim.c **** }
 1657              		.loc 1 796 0
 1658 000e 8381     		strh	r3, [r0, #12]	@ movhi
 1659 0010 7047     		bx	lr
 1660              		.cfi_endproc
 1661              	.LFE68:
 1663              		.section	.text.TIM_Cmd,"ax",%progbits
 1664              		.align	1
 1665              		.global	TIM_Cmd
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1669              		.fpu softvfp
 1671              	TIM_Cmd:
 1672              	.LFB69:
ARM GAS  /tmp/ccu4SMAM.s 			page 84


 807:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1673              		.loc 1 807 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678              	.LVL234:
 812:stm_lib/src/stm32f10x_tim.c ****   {
 1679              		.loc 1 812 0
 1680 0000 31B9     		cbnz	r1, .L108
 820:stm_lib/src/stm32f10x_tim.c ****   }
 1681              		.loc 1 820 0
 1682 0002 0388     		ldrh	r3, [r0]
 1683 0004 9BB2     		uxth	r3, r3
 1684 0006 23F00103 		bic	r3, r3, #1
 1685 000a 9BB2     		uxth	r3, r3
 1686 000c 0380     		strh	r3, [r0]	@ movhi
 1687 000e 7047     		bx	lr
 1688              	.L108:
 815:stm_lib/src/stm32f10x_tim.c ****   }
 1689              		.loc 1 815 0
 1690 0010 0388     		ldrh	r3, [r0]
 1691 0012 9BB2     		uxth	r3, r3
 1692 0014 43F00103 		orr	r3, r3, #1
 1693 0018 0380     		strh	r3, [r0]	@ movhi
 1694 001a 7047     		bx	lr
 1695              		.cfi_endproc
 1696              	.LFE69:
 1698              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 1699              		.align	1
 1700              		.global	TIM_CtrlPWMOutputs
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu softvfp
 1706              	TIM_CtrlPWMOutputs:
 1707              	.LFB70:
 832:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1708              		.loc 1 832 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              		@ link register save eliminated.
 1713              	.LVL235:
 836:stm_lib/src/stm32f10x_tim.c ****   {
 1714              		.loc 1 836 0
 1715 0000 31B9     		cbnz	r1, .L112
 844:stm_lib/src/stm32f10x_tim.c ****   }  
 1716              		.loc 1 844 0
 1717 0002 B0F84430 		ldrh	r3, [r0, #68]
 1718 0006 C3F30E03 		ubfx	r3, r3, #0, #15
 1719 000a A0F84430 		strh	r3, [r0, #68]	@ movhi
 1720 000e 7047     		bx	lr
 1721              	.L112:
 839:stm_lib/src/stm32f10x_tim.c ****   }
 1722              		.loc 1 839 0
 1723 0010 B0F84430 		ldrh	r3, [r0, #68]
ARM GAS  /tmp/ccu4SMAM.s 			page 85


 1724 0014 6FEA4343 		mvn	r3, r3, lsl #17
 1725 0018 6FEA5343 		mvn	r3, r3, lsr #17
 1726 001c 9BB2     		uxth	r3, r3
 1727 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 1728 0022 7047     		bx	lr
 1729              		.cfi_endproc
 1730              	.LFE70:
 1732              		.section	.text.TIM_ITConfig,"ax",%progbits
 1733              		.align	1
 1734              		.global	TIM_ITConfig
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu softvfp
 1740              	TIM_ITConfig:
 1741              	.LFB71:
 873:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1742              		.loc 1 873 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
 1747              	.LVL236:
 879:stm_lib/src/stm32f10x_tim.c ****   {
 1748              		.loc 1 879 0
 1749 0000 2AB9     		cbnz	r2, .L116
 887:stm_lib/src/stm32f10x_tim.c ****   }
 1750              		.loc 1 887 0
 1751 0002 8389     		ldrh	r3, [r0, #12]
 1752 0004 C943     		mvns	r1, r1
 1753              	.LVL237:
 1754 0006 89B2     		uxth	r1, r1
 1755 0008 1940     		ands	r1, r1, r3
 1756 000a 8181     		strh	r1, [r0, #12]	@ movhi
 1757 000c 7047     		bx	lr
 1758              	.LVL238:
 1759              	.L116:
 882:stm_lib/src/stm32f10x_tim.c ****   }
 1760              		.loc 1 882 0
 1761 000e 8389     		ldrh	r3, [r0, #12]
 1762 0010 9BB2     		uxth	r3, r3
 1763 0012 1943     		orrs	r1, r1, r3
 1764              	.LVL239:
 1765 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1766 0016 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE71:
 1770              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 1771              		.align	1
 1772              		.global	TIM_GenerateEvent
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu softvfp
 1778              	TIM_GenerateEvent:
 1779              	.LFB72:
 910:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccu4SMAM.s 			page 86


 1780              		.loc 1 910 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 1785              	.LVL240:
 916:stm_lib/src/stm32f10x_tim.c **** }
 1786              		.loc 1 916 0
 1787 0000 8182     		strh	r1, [r0, #20]	@ movhi
 1788 0002 7047     		bx	lr
 1789              		.cfi_endproc
 1790              	.LFE72:
 1792              		.section	.text.TIM_DMAConfig,"ax",%progbits
 1793              		.align	1
 1794              		.global	TIM_DMAConfig
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu softvfp
 1800              	TIM_DMAConfig:
 1801              	.LFB73:
 938:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1802              		.loc 1 938 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              		@ link register save eliminated.
 1807              	.LVL241:
 944:stm_lib/src/stm32f10x_tim.c **** }
 1808              		.loc 1 944 0
 1809 0000 0A43     		orrs	r2, r2, r1
 1810              	.LVL242:
 1811 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 1812 0006 7047     		bx	lr
 1813              		.cfi_endproc
 1814              	.LFE73:
 1816              		.section	.text.TIM_DMACmd,"ax",%progbits
 1817              		.align	1
 1818              		.global	TIM_DMACmd
 1819              		.syntax unified
 1820              		.thumb
 1821              		.thumb_func
 1822              		.fpu softvfp
 1824              	TIM_DMACmd:
 1825              	.LFB74:
 965:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1826              		.loc 1 965 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 1830              		@ link register save eliminated.
 1831              	.LVL243:
 971:stm_lib/src/stm32f10x_tim.c ****   {
 1832              		.loc 1 971 0
 1833 0000 2AB9     		cbnz	r2, .L122
 979:stm_lib/src/stm32f10x_tim.c ****   }
 1834              		.loc 1 979 0
ARM GAS  /tmp/ccu4SMAM.s 			page 87


 1835 0002 8389     		ldrh	r3, [r0, #12]
 1836 0004 C943     		mvns	r1, r1
 1837              	.LVL244:
 1838 0006 89B2     		uxth	r1, r1
 1839 0008 1940     		ands	r1, r1, r3
 1840 000a 8181     		strh	r1, [r0, #12]	@ movhi
 1841 000c 7047     		bx	lr
 1842              	.LVL245:
 1843              	.L122:
 974:stm_lib/src/stm32f10x_tim.c ****   }
 1844              		.loc 1 974 0
 1845 000e 8389     		ldrh	r3, [r0, #12]
 1846 0010 9BB2     		uxth	r3, r3
 1847 0012 1943     		orrs	r1, r1, r3
 1848              	.LVL246:
 1849 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1850 0016 7047     		bx	lr
 1851              		.cfi_endproc
 1852              	.LFE74:
 1854              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 1855              		.align	1
 1856              		.global	TIM_InternalClockConfig
 1857              		.syntax unified
 1858              		.thumb
 1859              		.thumb_func
 1860              		.fpu softvfp
 1862              	TIM_InternalClockConfig:
 1863              	.LFB75:
 990:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1864              		.loc 1 990 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              		@ link register save eliminated.
 1869              	.LVL247:
 994:stm_lib/src/stm32f10x_tim.c **** }
 1870              		.loc 1 994 0
 1871 0000 0389     		ldrh	r3, [r0, #8]
 1872 0002 9BB2     		uxth	r3, r3
 1873 0004 23F00703 		bic	r3, r3, #7
 1874 0008 9BB2     		uxth	r3, r3
 1875 000a 0381     		strh	r3, [r0, #8]	@ movhi
 1876 000c 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE75:
 1880              		.section	.text.TIM_ETRConfig,"ax",%progbits
 1881              		.align	1
 1882              		.global	TIM_ETRConfig
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu softvfp
 1888              	TIM_ETRConfig:
 1889              	.LFB80:
1150:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1890              		.loc 1 1150 0
 1891              		.cfi_startproc
ARM GAS  /tmp/ccu4SMAM.s 			page 88


 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 1895              	.LVL248:
 1896 0000 10B4     		push	{r4}
 1897              	.LCFI25:
 1898              		.cfi_def_cfa_offset 4
 1899              		.cfi_offset 4, -4
 1900              	.LVL249:
1157:stm_lib/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
 1901              		.loc 1 1157 0
 1902 0002 0489     		ldrh	r4, [r0, #8]
 1903              	.LVL250:
1159:stm_lib/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
 1904              		.loc 1 1159 0
 1905 0004 E4B2     		uxtb	r4, r4
 1906              	.LVL251:
1161:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1907              		.loc 1 1161 0
 1908 0006 1B02     		lsls	r3, r3, #8
 1909              	.LVL252:
 1910 0008 9BB2     		uxth	r3, r3
 1911 000a 1343     		orrs	r3, r3, r2
 1912 000c 0B43     		orrs	r3, r3, r1
 1913 000e 2343     		orrs	r3, r3, r4
 1914              	.LVL253:
1163:stm_lib/src/stm32f10x_tim.c **** }
 1915              		.loc 1 1163 0
 1916 0010 0381     		strh	r3, [r0, #8]	@ movhi
1164:stm_lib/src/stm32f10x_tim.c **** 
 1917              		.loc 1 1164 0
 1918 0012 10BC     		pop	{r4}
 1919              	.LCFI26:
 1920              		.cfi_restore 4
 1921              		.cfi_def_cfa_offset 0
 1922 0014 7047     		bx	lr
 1923              		.cfi_endproc
 1924              	.LFE80:
 1926              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 1927              		.align	1
 1928              		.global	TIM_ETRClockMode1Config
 1929              		.syntax unified
 1930              		.thumb
 1931              		.thumb_func
 1932              		.fpu softvfp
 1934              	TIM_ETRClockMode1Config:
 1935              	.LFB78:
1077:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1936              		.loc 1 1077 0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
 1940              	.LVL254:
 1941 0000 10B5     		push	{r4, lr}
 1942              	.LCFI27:
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 4, -8
ARM GAS  /tmp/ccu4SMAM.s 			page 89


 1945              		.cfi_offset 14, -4
 1946 0002 0446     		mov	r4, r0
 1947              	.LVL255:
1085:stm_lib/src/stm32f10x_tim.c ****   
 1948              		.loc 1 1085 0
 1949 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1950              	.LVL256:
1088:stm_lib/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
 1951              		.loc 1 1088 0
 1952 0008 2389     		ldrh	r3, [r4, #8]
 1953 000a 9BB2     		uxth	r3, r3
 1954              	.LVL257:
1095:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1955              		.loc 1 1095 0
 1956 000c 43F07703 		orr	r3, r3, #119
 1957              	.LVL258:
1097:stm_lib/src/stm32f10x_tim.c **** }
 1958              		.loc 1 1097 0
 1959 0010 2381     		strh	r3, [r4, #8]	@ movhi
 1960 0012 10BD     		pop	{r4, pc}
 1961              		.cfi_endproc
 1962              	.LFE78:
 1964              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 1965              		.align	1
 1966              		.global	TIM_ETRClockMode2Config
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu softvfp
 1972              	TIM_ETRClockMode2Config:
 1973              	.LFB79:
1119:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 1974              		.loc 1 1119 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              	.LVL259:
 1979 0000 10B5     		push	{r4, lr}
 1980              	.LCFI28:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 4, -8
 1983              		.cfi_offset 14, -4
 1984 0002 0446     		mov	r4, r0
1126:stm_lib/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
 1985              		.loc 1 1126 0
 1986 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1987              	.LVL260:
1128:stm_lib/src/stm32f10x_tim.c **** }
 1988              		.loc 1 1128 0
 1989 0008 2389     		ldrh	r3, [r4, #8]
 1990 000a 9BB2     		uxth	r3, r3
 1991 000c 43F48043 		orr	r3, r3, #16384
 1992 0010 2381     		strh	r3, [r4, #8]	@ movhi
 1993 0012 10BD     		pop	{r4, pc}
 1994              		.cfi_endproc
 1995              	.LFE79:
 1997              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
ARM GAS  /tmp/ccu4SMAM.s 			page 90


 1998              		.align	1
 1999              		.global	TIM_PrescalerConfig
 2000              		.syntax unified
 2001              		.thumb
 2002              		.thumb_func
 2003              		.fpu softvfp
 2005              	TIM_PrescalerConfig:
 2006              	.LFB81:
1177:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2007              		.loc 1 1177 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 0
 2010              		@ frame_needed = 0, uses_anonymous_args = 0
 2011              		@ link register save eliminated.
 2012              	.LVL261:
1182:stm_lib/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
 2013              		.loc 1 1182 0
 2014 0000 0185     		strh	r1, [r0, #40]	@ movhi
1184:stm_lib/src/stm32f10x_tim.c **** }
 2015              		.loc 1 1184 0
 2016 0002 8282     		strh	r2, [r0, #20]	@ movhi
 2017 0004 7047     		bx	lr
 2018              		.cfi_endproc
 2019              	.LFE81:
 2021              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 2022              		.align	1
 2023              		.global	TIM_CounterModeConfig
 2024              		.syntax unified
 2025              		.thumb
 2026              		.thumb_func
 2027              		.fpu softvfp
 2029              	TIM_CounterModeConfig:
 2030              	.LFB82:
1200:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 2031              		.loc 1 1200 0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 0
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
 2036              	.LVL262:
1205:stm_lib/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
 2037              		.loc 1 1205 0
 2038 0000 0388     		ldrh	r3, [r0]
 2039 0002 9BB2     		uxth	r3, r3
 2040              	.LVL263:
1207:stm_lib/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
 2041              		.loc 1 1207 0
 2042 0004 23F07003 		bic	r3, r3, #112
 2043              	.LVL264:
1209:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
 2044              		.loc 1 1209 0
 2045 0008 1943     		orrs	r1, r1, r3
 2046              	.LVL265:
1211:stm_lib/src/stm32f10x_tim.c **** }
 2047              		.loc 1 1211 0
 2048 000a 0180     		strh	r1, [r0]	@ movhi
 2049 000c 7047     		bx	lr
ARM GAS  /tmp/ccu4SMAM.s 			page 91


 2050              		.cfi_endproc
 2051              	.LFE82:
 2053              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 2054              		.align	1
 2055              		.global	TIM_SelectInputTrigger
 2056              		.syntax unified
 2057              		.thumb
 2058              		.thumb_func
 2059              		.fpu softvfp
 2061              	TIM_SelectInputTrigger:
 2062              	.LFB83:
1230:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2063              		.loc 1 1230 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068              	.LVL266:
1236:stm_lib/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 2069              		.loc 1 1236 0
 2070 0000 0389     		ldrh	r3, [r0, #8]
 2071 0002 9BB2     		uxth	r3, r3
 2072              	.LVL267:
1238:stm_lib/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 2073              		.loc 1 1238 0
 2074 0004 23F07003 		bic	r3, r3, #112
 2075              	.LVL268:
1240:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2076              		.loc 1 1240 0
 2077 0008 1943     		orrs	r1, r1, r3
 2078              	.LVL269:
1242:stm_lib/src/stm32f10x_tim.c **** }
 2079              		.loc 1 1242 0
 2080 000a 0181     		strh	r1, [r0, #8]	@ movhi
 2081 000c 7047     		bx	lr
 2082              		.cfi_endproc
 2083              	.LFE83:
 2085              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 2086              		.align	1
 2087              		.global	TIM_ITRxExternalClockConfig
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2091              		.fpu softvfp
 2093              	TIM_ITRxExternalClockConfig:
 2094              	.LFB76:
1009:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2095              		.loc 1 1009 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              	.LVL270:
 2100 0000 10B5     		push	{r4, lr}
 2101              	.LCFI29:
 2102              		.cfi_def_cfa_offset 8
 2103              		.cfi_offset 4, -8
 2104              		.cfi_offset 14, -4
ARM GAS  /tmp/ccu4SMAM.s 			page 92


 2105 0002 0446     		mov	r4, r0
1014:stm_lib/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2106              		.loc 1 1014 0
 2107 0004 FFF7FEFF 		bl	TIM_SelectInputTrigger
 2108              	.LVL271:
1016:stm_lib/src/stm32f10x_tim.c **** }
 2109              		.loc 1 1016 0
 2110 0008 2389     		ldrh	r3, [r4, #8]
 2111 000a 9BB2     		uxth	r3, r3
 2112 000c 43F00703 		orr	r3, r3, #7
 2113 0010 2381     		strh	r3, [r4, #8]	@ movhi
 2114 0012 10BD     		pop	{r4, pc}
 2115              		.cfi_endproc
 2116              	.LFE76:
 2118              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 2119              		.align	1
 2120              		.global	TIM_TIxExternalClockConfig
 2121              		.syntax unified
 2122              		.thumb
 2123              		.thumb_func
 2124              		.fpu softvfp
 2126              	TIM_TIxExternalClockConfig:
 2127              	.LFB77:
1037:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2128              		.loc 1 1037 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 0, uses_anonymous_args = 0
 2132              	.LVL272:
 2133 0000 38B5     		push	{r3, r4, r5, lr}
 2134              	.LCFI30:
 2135              		.cfi_def_cfa_offset 16
 2136              		.cfi_offset 3, -16
 2137              		.cfi_offset 4, -12
 2138              		.cfi_offset 5, -8
 2139              		.cfi_offset 14, -4
 2140 0002 0446     		mov	r4, r0
 2141 0004 0D46     		mov	r5, r1
 2142 0006 1146     		mov	r1, r2
 2143              	.LVL273:
1044:stm_lib/src/stm32f10x_tim.c ****   {
 2144              		.loc 1 1044 0
 2145 0008 602D     		cmp	r5, #96
 2146 000a 0CD0     		beq	.L139
1050:stm_lib/src/stm32f10x_tim.c ****   }
 2147              		.loc 1 1050 0
 2148 000c 0122     		movs	r2, #1
 2149              	.LVL274:
 2150 000e FFF7FEFF 		bl	TI1_Config
 2151              	.LVL275:
 2152              	.L137:
1053:stm_lib/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2153              		.loc 1 1053 0
 2154 0012 2946     		mov	r1, r5
 2155 0014 2046     		mov	r0, r4
 2156 0016 FFF7FEFF 		bl	TIM_SelectInputTrigger
 2157              	.LVL276:
ARM GAS  /tmp/ccu4SMAM.s 			page 93


1055:stm_lib/src/stm32f10x_tim.c **** }
 2158              		.loc 1 1055 0
 2159 001a 2389     		ldrh	r3, [r4, #8]
 2160 001c 9BB2     		uxth	r3, r3
 2161 001e 43F00703 		orr	r3, r3, #7
 2162 0022 2381     		strh	r3, [r4, #8]	@ movhi
 2163 0024 38BD     		pop	{r3, r4, r5, pc}
 2164              	.LVL277:
 2165              	.L139:
1046:stm_lib/src/stm32f10x_tim.c ****   }
 2166              		.loc 1 1046 0
 2167 0026 0122     		movs	r2, #1
 2168              	.LVL278:
 2169 0028 FFF7FEFF 		bl	TI2_Config
 2170              	.LVL279:
 2171 002c F1E7     		b	.L137
 2172              		.cfi_endproc
 2173              	.LFE77:
 2175              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 2176              		.align	1
 2177              		.global	TIM_EncoderInterfaceConfig
 2178              		.syntax unified
 2179              		.thumb
 2180              		.thumb_func
 2181              		.fpu softvfp
 2183              	TIM_EncoderInterfaceConfig:
 2184              	.LFB84:
1266:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2185              		.loc 1 1266 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 0, uses_anonymous_args = 0
 2189              		@ link register save eliminated.
 2190              	.LVL280:
 2191 0000 70B4     		push	{r4, r5, r6}
 2192              	.LCFI31:
 2193              		.cfi_def_cfa_offset 12
 2194              		.cfi_offset 4, -12
 2195              		.cfi_offset 5, -8
 2196              		.cfi_offset 6, -4
 2197              	.LVL281:
1278:stm_lib/src/stm32f10x_tim.c ****   
 2198              		.loc 1 1278 0
 2199 0002 0689     		ldrh	r6, [r0, #8]
 2200 0004 B6B2     		uxth	r6, r6
 2201              	.LVL282:
1281:stm_lib/src/stm32f10x_tim.c ****   
 2202              		.loc 1 1281 0
 2203 0006 048B     		ldrh	r4, [r0, #24]
 2204 0008 A4B2     		uxth	r4, r4
 2205              	.LVL283:
1284:stm_lib/src/stm32f10x_tim.c ****   
 2206              		.loc 1 1284 0
 2207 000a 058C     		ldrh	r5, [r0, #32]
 2208 000c ADB2     		uxth	r5, r5
 2209              	.LVL284:
1287:stm_lib/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
ARM GAS  /tmp/ccu4SMAM.s 			page 94


 2210              		.loc 1 1287 0
 2211 000e 26F00706 		bic	r6, r6, #7
 2212              	.LVL285:
1288:stm_lib/src/stm32f10x_tim.c ****   
 2213              		.loc 1 1288 0
 2214 0012 3143     		orrs	r1, r1, r6
 2215              	.LVL286:
1291:stm_lib/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 2216              		.loc 1 1291 0
 2217 0014 24F44074 		bic	r4, r4, #768
 2218              	.LVL287:
 2219 0018 24F00304 		bic	r4, r4, #3
 2220              	.LVL288:
1292:stm_lib/src/stm32f10x_tim.c ****   
 2221              		.loc 1 1292 0
 2222 001c 44F48074 		orr	r4, r4, #256
 2223              	.LVL289:
 2224 0020 44F00104 		orr	r4, r4, #1
 2225              	.LVL290:
1295:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 2226              		.loc 1 1295 0
 2227 0024 25F02205 		bic	r5, r5, #34
 2228              	.LVL291:
1296:stm_lib/src/stm32f10x_tim.c ****   
 2229              		.loc 1 1296 0
 2230 0028 1B01     		lsls	r3, r3, #4
 2231              	.LVL292:
 2232 002a 9BB2     		uxth	r3, r3
 2233 002c 1A43     		orrs	r2, r2, r3
 2234              	.LVL293:
 2235 002e 1543     		orrs	r5, r5, r2
 2236              	.LVL294:
1299:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2237              		.loc 1 1299 0
 2238 0030 0181     		strh	r1, [r0, #8]	@ movhi
1301:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 2239              		.loc 1 1301 0
 2240 0032 0483     		strh	r4, [r0, #24]	@ movhi
1303:stm_lib/src/stm32f10x_tim.c **** }
 2241              		.loc 1 1303 0
 2242 0034 0584     		strh	r5, [r0, #32]	@ movhi
1304:stm_lib/src/stm32f10x_tim.c **** 
 2243              		.loc 1 1304 0
 2244 0036 70BC     		pop	{r4, r5, r6}
 2245              	.LCFI32:
 2246              		.cfi_restore 6
 2247              		.cfi_restore 5
 2248              		.cfi_restore 4
 2249              		.cfi_def_cfa_offset 0
 2250              	.LVL295:
 2251 0038 7047     		bx	lr
 2252              		.cfi_endproc
 2253              	.LFE84:
 2255              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2256              		.align	1
 2257              		.global	TIM_ForcedOC1Config
 2258              		.syntax unified
ARM GAS  /tmp/ccu4SMAM.s 			page 95


 2259              		.thumb
 2260              		.thumb_func
 2261              		.fpu softvfp
 2263              	TIM_ForcedOC1Config:
 2264              	.LFB85:
1316:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2265              		.loc 1 1316 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		@ link register save eliminated.
 2270              	.LVL296:
1321:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2271              		.loc 1 1321 0
 2272 0000 038B     		ldrh	r3, [r0, #24]
 2273 0002 9BB2     		uxth	r3, r3
 2274              	.LVL297:
1323:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2275              		.loc 1 1323 0
 2276 0004 23F07003 		bic	r3, r3, #112
 2277              	.LVL298:
1325:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2278              		.loc 1 1325 0
 2279 0008 1943     		orrs	r1, r1, r3
 2280              	.LVL299:
1327:stm_lib/src/stm32f10x_tim.c **** }
 2281              		.loc 1 1327 0
 2282 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2283 000c 7047     		bx	lr
 2284              		.cfi_endproc
 2285              	.LFE85:
 2287              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2288              		.align	1
 2289              		.global	TIM_ForcedOC2Config
 2290              		.syntax unified
 2291              		.thumb
 2292              		.thumb_func
 2293              		.fpu softvfp
 2295              	TIM_ForcedOC2Config:
 2296              	.LFB86:
1340:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2297              		.loc 1 1340 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              		@ link register save eliminated.
 2302              	.LVL300:
1345:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2303              		.loc 1 1345 0
 2304 0000 038B     		ldrh	r3, [r0, #24]
 2305 0002 9BB2     		uxth	r3, r3
 2306              	.LVL301:
1347:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2307              		.loc 1 1347 0
 2308 0004 23F4E043 		bic	r3, r3, #28672
 2309              	.LVL302:
1349:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
ARM GAS  /tmp/ccu4SMAM.s 			page 96


 2310              		.loc 1 1349 0
 2311 0008 0902     		lsls	r1, r1, #8
 2312              	.LVL303:
 2313 000a 89B2     		uxth	r1, r1
 2314 000c 0B43     		orrs	r3, r3, r1
 2315              	.LVL304:
1351:stm_lib/src/stm32f10x_tim.c **** }
 2316              		.loc 1 1351 0
 2317 000e 0383     		strh	r3, [r0, #24]	@ movhi
 2318 0010 7047     		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE86:
 2322              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2323              		.align	1
 2324              		.global	TIM_ForcedOC3Config
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu softvfp
 2330              	TIM_ForcedOC3Config:
 2331              	.LFB87:
1364:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2332              		.loc 1 1364 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              		@ link register save eliminated.
 2337              	.LVL305:
1369:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2338              		.loc 1 1369 0
 2339 0000 838B     		ldrh	r3, [r0, #28]
 2340 0002 9BB2     		uxth	r3, r3
 2341              	.LVL306:
1371:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2342              		.loc 1 1371 0
 2343 0004 23F07003 		bic	r3, r3, #112
 2344              	.LVL307:
1373:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2345              		.loc 1 1373 0
 2346 0008 1943     		orrs	r1, r1, r3
 2347              	.LVL308:
1375:stm_lib/src/stm32f10x_tim.c **** }
 2348              		.loc 1 1375 0
 2349 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2350 000c 7047     		bx	lr
 2351              		.cfi_endproc
 2352              	.LFE87:
 2354              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2355              		.align	1
 2356              		.global	TIM_ForcedOC4Config
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2360              		.fpu softvfp
 2362              	TIM_ForcedOC4Config:
 2363              	.LFB88:
1388:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
ARM GAS  /tmp/ccu4SMAM.s 			page 97


 2364              		.loc 1 1388 0
 2365              		.cfi_startproc
 2366              		@ args = 0, pretend = 0, frame = 0
 2367              		@ frame_needed = 0, uses_anonymous_args = 0
 2368              		@ link register save eliminated.
 2369              	.LVL309:
1393:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2370              		.loc 1 1393 0
 2371 0000 838B     		ldrh	r3, [r0, #28]
 2372 0002 9BB2     		uxth	r3, r3
 2373              	.LVL310:
1395:stm_lib/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2374              		.loc 1 1395 0
 2375 0004 23F4E043 		bic	r3, r3, #28672
 2376              	.LVL311:
1397:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2377              		.loc 1 1397 0
 2378 0008 0902     		lsls	r1, r1, #8
 2379              	.LVL312:
 2380 000a 89B2     		uxth	r1, r1
 2381 000c 0B43     		orrs	r3, r3, r1
 2382              	.LVL313:
1399:stm_lib/src/stm32f10x_tim.c **** }
 2383              		.loc 1 1399 0
 2384 000e 8383     		strh	r3, [r0, #28]	@ movhi
 2385 0010 7047     		bx	lr
 2386              		.cfi_endproc
 2387              	.LFE88:
 2389              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 2390              		.align	1
 2391              		.global	TIM_ARRPreloadConfig
 2392              		.syntax unified
 2393              		.thumb
 2394              		.thumb_func
 2395              		.fpu softvfp
 2397              	TIM_ARRPreloadConfig:
 2398              	.LFB89:
1410:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2399              		.loc 1 1410 0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
 2404              	.LVL314:
1414:stm_lib/src/stm32f10x_tim.c ****   {
 2405              		.loc 1 1414 0
 2406 0000 31B9     		cbnz	r1, .L149
1422:stm_lib/src/stm32f10x_tim.c ****   }
 2407              		.loc 1 1422 0
 2408 0002 0388     		ldrh	r3, [r0]
 2409 0004 9BB2     		uxth	r3, r3
 2410 0006 23F08003 		bic	r3, r3, #128
 2411 000a 9BB2     		uxth	r3, r3
 2412 000c 0380     		strh	r3, [r0]	@ movhi
 2413 000e 7047     		bx	lr
 2414              	.L149:
1417:stm_lib/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccu4SMAM.s 			page 98


 2415              		.loc 1 1417 0
 2416 0010 0388     		ldrh	r3, [r0]
 2417 0012 9BB2     		uxth	r3, r3
 2418 0014 43F08003 		orr	r3, r3, #128
 2419 0018 0380     		strh	r3, [r0]	@ movhi
 2420 001a 7047     		bx	lr
 2421              		.cfi_endproc
 2422              	.LFE89:
 2424              		.section	.text.TIM_SelectCOM,"ax",%progbits
 2425              		.align	1
 2426              		.global	TIM_SelectCOM
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2430              		.fpu softvfp
 2432              	TIM_SelectCOM:
 2433              	.LFB90:
1434:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2434              		.loc 1 1434 0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 0
 2437              		@ frame_needed = 0, uses_anonymous_args = 0
 2438              		@ link register save eliminated.
 2439              	.LVL315:
1438:stm_lib/src/stm32f10x_tim.c ****   {
 2440              		.loc 1 1438 0
 2441 0000 31B9     		cbnz	r1, .L153
1446:stm_lib/src/stm32f10x_tim.c ****   }
 2442              		.loc 1 1446 0
 2443 0002 8388     		ldrh	r3, [r0, #4]
 2444 0004 9BB2     		uxth	r3, r3
 2445 0006 23F00403 		bic	r3, r3, #4
 2446 000a 9BB2     		uxth	r3, r3
 2447 000c 8380     		strh	r3, [r0, #4]	@ movhi
 2448 000e 7047     		bx	lr
 2449              	.L153:
1441:stm_lib/src/stm32f10x_tim.c ****   }
 2450              		.loc 1 1441 0
 2451 0010 8388     		ldrh	r3, [r0, #4]
 2452 0012 9BB2     		uxth	r3, r3
 2453 0014 43F00403 		orr	r3, r3, #4
 2454 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2455 001a 7047     		bx	lr
 2456              		.cfi_endproc
 2457              	.LFE90:
 2459              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 2460              		.align	1
 2461              		.global	TIM_SelectCCDMA
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu softvfp
 2467              	TIM_SelectCCDMA:
 2468              	.LFB91:
1459:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2469              		.loc 1 1459 0
 2470              		.cfi_startproc
ARM GAS  /tmp/ccu4SMAM.s 			page 99


 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              		@ link register save eliminated.
 2474              	.LVL316:
1463:stm_lib/src/stm32f10x_tim.c ****   {
 2475              		.loc 1 1463 0
 2476 0000 31B9     		cbnz	r1, .L157
1471:stm_lib/src/stm32f10x_tim.c ****   }
 2477              		.loc 1 1471 0
 2478 0002 8388     		ldrh	r3, [r0, #4]
 2479 0004 9BB2     		uxth	r3, r3
 2480 0006 23F00803 		bic	r3, r3, #8
 2481 000a 9BB2     		uxth	r3, r3
 2482 000c 8380     		strh	r3, [r0, #4]	@ movhi
 2483 000e 7047     		bx	lr
 2484              	.L157:
1466:stm_lib/src/stm32f10x_tim.c ****   }
 2485              		.loc 1 1466 0
 2486 0010 8388     		ldrh	r3, [r0, #4]
 2487 0012 9BB2     		uxth	r3, r3
 2488 0014 43F00803 		orr	r3, r3, #8
 2489 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2490 001a 7047     		bx	lr
 2491              		.cfi_endproc
 2492              	.LFE91:
 2494              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 2495              		.align	1
 2496              		.global	TIM_CCPreloadControl
 2497              		.syntax unified
 2498              		.thumb
 2499              		.thumb_func
 2500              		.fpu softvfp
 2502              	TIM_CCPreloadControl:
 2503              	.LFB92:
1484:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 2504              		.loc 1 1484 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
 2508              		@ link register save eliminated.
 2509              	.LVL317:
1488:stm_lib/src/stm32f10x_tim.c ****   {
 2510              		.loc 1 1488 0
 2511 0000 31B9     		cbnz	r1, .L161
1496:stm_lib/src/stm32f10x_tim.c ****   }
 2512              		.loc 1 1496 0
 2513 0002 8388     		ldrh	r3, [r0, #4]
 2514 0004 9BB2     		uxth	r3, r3
 2515 0006 23F00103 		bic	r3, r3, #1
 2516 000a 9BB2     		uxth	r3, r3
 2517 000c 8380     		strh	r3, [r0, #4]	@ movhi
 2518 000e 7047     		bx	lr
 2519              	.L161:
1491:stm_lib/src/stm32f10x_tim.c ****   }
 2520              		.loc 1 1491 0
 2521 0010 8388     		ldrh	r3, [r0, #4]
 2522 0012 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu4SMAM.s 			page 100


 2523 0014 43F00103 		orr	r3, r3, #1
 2524 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2525 001a 7047     		bx	lr
 2526              		.cfi_endproc
 2527              	.LFE92:
 2529              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2530              		.align	1
 2531              		.global	TIM_OC1PreloadConfig
 2532              		.syntax unified
 2533              		.thumb
 2534              		.thumb_func
 2535              		.fpu softvfp
 2537              	TIM_OC1PreloadConfig:
 2538              	.LFB93:
1510:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2539              		.loc 1 1510 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              		@ link register save eliminated.
 2544              	.LVL318:
1515:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
 2545              		.loc 1 1515 0
 2546 0000 038B     		ldrh	r3, [r0, #24]
 2547 0002 9BB2     		uxth	r3, r3
 2548              	.LVL319:
1517:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2549              		.loc 1 1517 0
 2550 0004 23F00803 		bic	r3, r3, #8
 2551              	.LVL320:
1519:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2552              		.loc 1 1519 0
 2553 0008 1943     		orrs	r1, r1, r3
 2554              	.LVL321:
1521:stm_lib/src/stm32f10x_tim.c **** }
 2555              		.loc 1 1521 0
 2556 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2557 000c 7047     		bx	lr
 2558              		.cfi_endproc
 2559              	.LFE93:
 2561              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2562              		.align	1
 2563              		.global	TIM_OC2PreloadConfig
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu softvfp
 2569              	TIM_OC2PreloadConfig:
 2570              	.LFB94:
1535:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2571              		.loc 1 1535 0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 0
 2574              		@ frame_needed = 0, uses_anonymous_args = 0
 2575              		@ link register save eliminated.
 2576              	.LVL322:
1540:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
ARM GAS  /tmp/ccu4SMAM.s 			page 101


 2577              		.loc 1 1540 0
 2578 0000 038B     		ldrh	r3, [r0, #24]
 2579 0002 9BB2     		uxth	r3, r3
 2580              	.LVL323:
1542:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2581              		.loc 1 1542 0
 2582 0004 23F40063 		bic	r3, r3, #2048
 2583              	.LVL324:
1544:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2584              		.loc 1 1544 0
 2585 0008 0902     		lsls	r1, r1, #8
 2586              	.LVL325:
 2587 000a 89B2     		uxth	r1, r1
 2588 000c 0B43     		orrs	r3, r3, r1
 2589              	.LVL326:
1546:stm_lib/src/stm32f10x_tim.c **** }
 2590              		.loc 1 1546 0
 2591 000e 0383     		strh	r3, [r0, #24]	@ movhi
 2592 0010 7047     		bx	lr
 2593              		.cfi_endproc
 2594              	.LFE94:
 2596              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2597              		.align	1
 2598              		.global	TIM_OC3PreloadConfig
 2599              		.syntax unified
 2600              		.thumb
 2601              		.thumb_func
 2602              		.fpu softvfp
 2604              	TIM_OC3PreloadConfig:
 2605              	.LFB95:
1559:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2606              		.loc 1 1559 0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 0, uses_anonymous_args = 0
 2610              		@ link register save eliminated.
 2611              	.LVL327:
1564:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
 2612              		.loc 1 1564 0
 2613 0000 838B     		ldrh	r3, [r0, #28]
 2614 0002 9BB2     		uxth	r3, r3
 2615              	.LVL328:
1566:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2616              		.loc 1 1566 0
 2617 0004 23F00803 		bic	r3, r3, #8
 2618              	.LVL329:
1568:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2619              		.loc 1 1568 0
 2620 0008 1943     		orrs	r1, r1, r3
 2621              	.LVL330:
1570:stm_lib/src/stm32f10x_tim.c **** }
 2622              		.loc 1 1570 0
 2623 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2624 000c 7047     		bx	lr
 2625              		.cfi_endproc
 2626              	.LFE95:
 2628              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
ARM GAS  /tmp/ccu4SMAM.s 			page 102


 2629              		.align	1
 2630              		.global	TIM_OC4PreloadConfig
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2634              		.fpu softvfp
 2636              	TIM_OC4PreloadConfig:
 2637              	.LFB96:
1583:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2638              		.loc 1 1583 0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 0
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 2642              		@ link register save eliminated.
 2643              	.LVL331:
1588:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
 2644              		.loc 1 1588 0
 2645 0000 838B     		ldrh	r3, [r0, #28]
 2646 0002 9BB2     		uxth	r3, r3
 2647              	.LVL332:
1590:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2648              		.loc 1 1590 0
 2649 0004 23F40063 		bic	r3, r3, #2048
 2650              	.LVL333:
1592:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2651              		.loc 1 1592 0
 2652 0008 0902     		lsls	r1, r1, #8
 2653              	.LVL334:
 2654 000a 89B2     		uxth	r1, r1
 2655 000c 0B43     		orrs	r3, r3, r1
 2656              	.LVL335:
1594:stm_lib/src/stm32f10x_tim.c **** }
 2657              		.loc 1 1594 0
 2658 000e 8383     		strh	r3, [r0, #28]	@ movhi
 2659 0010 7047     		bx	lr
 2660              		.cfi_endproc
 2661              	.LFE96:
 2663              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2664              		.align	1
 2665              		.global	TIM_OC1FastConfig
 2666              		.syntax unified
 2667              		.thumb
 2668              		.thumb_func
 2669              		.fpu softvfp
 2671              	TIM_OC1FastConfig:
 2672              	.LFB97:
1607:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2673              		.loc 1 1607 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 0, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678              	.LVL336:
1613:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
 2679              		.loc 1 1613 0
 2680 0000 038B     		ldrh	r3, [r0, #24]
 2681 0002 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu4SMAM.s 			page 103


 2682              	.LVL337:
1615:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2683              		.loc 1 1615 0
 2684 0004 23F00403 		bic	r3, r3, #4
 2685              	.LVL338:
1617:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2686              		.loc 1 1617 0
 2687 0008 1943     		orrs	r1, r1, r3
 2688              	.LVL339:
1619:stm_lib/src/stm32f10x_tim.c **** }
 2689              		.loc 1 1619 0
 2690 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2691 000c 7047     		bx	lr
 2692              		.cfi_endproc
 2693              	.LFE97:
 2695              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2696              		.align	1
 2697              		.global	TIM_OC2FastConfig
 2698              		.syntax unified
 2699              		.thumb
 2700              		.thumb_func
 2701              		.fpu softvfp
 2703              	TIM_OC2FastConfig:
 2704              	.LFB98:
1633:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2705              		.loc 1 1633 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709              		@ link register save eliminated.
 2710              	.LVL340:
1639:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
 2711              		.loc 1 1639 0
 2712 0000 038B     		ldrh	r3, [r0, #24]
 2713 0002 9BB2     		uxth	r3, r3
 2714              	.LVL341:
1641:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2715              		.loc 1 1641 0
 2716 0004 23F48063 		bic	r3, r3, #1024
 2717              	.LVL342:
1643:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2718              		.loc 1 1643 0
 2719 0008 0902     		lsls	r1, r1, #8
 2720              	.LVL343:
 2721 000a 89B2     		uxth	r1, r1
 2722 000c 0B43     		orrs	r3, r3, r1
 2723              	.LVL344:
1645:stm_lib/src/stm32f10x_tim.c **** }
 2724              		.loc 1 1645 0
 2725 000e 0383     		strh	r3, [r0, #24]	@ movhi
 2726 0010 7047     		bx	lr
 2727              		.cfi_endproc
 2728              	.LFE98:
 2730              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2731              		.align	1
 2732              		.global	TIM_OC3FastConfig
 2733              		.syntax unified
ARM GAS  /tmp/ccu4SMAM.s 			page 104


 2734              		.thumb
 2735              		.thumb_func
 2736              		.fpu softvfp
 2738              	TIM_OC3FastConfig:
 2739              	.LFB99:
1658:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2740              		.loc 1 1658 0
 2741              		.cfi_startproc
 2742              		@ args = 0, pretend = 0, frame = 0
 2743              		@ frame_needed = 0, uses_anonymous_args = 0
 2744              		@ link register save eliminated.
 2745              	.LVL345:
1664:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
 2746              		.loc 1 1664 0
 2747 0000 838B     		ldrh	r3, [r0, #28]
 2748 0002 9BB2     		uxth	r3, r3
 2749              	.LVL346:
1666:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2750              		.loc 1 1666 0
 2751 0004 23F00403 		bic	r3, r3, #4
 2752              	.LVL347:
1668:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 2753              		.loc 1 1668 0
 2754 0008 1943     		orrs	r1, r1, r3
 2755              	.LVL348:
1670:stm_lib/src/stm32f10x_tim.c **** }
 2756              		.loc 1 1670 0
 2757 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2758 000c 7047     		bx	lr
 2759              		.cfi_endproc
 2760              	.LFE99:
 2762              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2763              		.align	1
 2764              		.global	TIM_OC4FastConfig
 2765              		.syntax unified
 2766              		.thumb
 2767              		.thumb_func
 2768              		.fpu softvfp
 2770              	TIM_OC4FastConfig:
 2771              	.LFB100:
1683:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2772              		.loc 1 1683 0
 2773              		.cfi_startproc
 2774              		@ args = 0, pretend = 0, frame = 0
 2775              		@ frame_needed = 0, uses_anonymous_args = 0
 2776              		@ link register save eliminated.
 2777              	.LVL349:
1689:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
 2778              		.loc 1 1689 0
 2779 0000 838B     		ldrh	r3, [r0, #28]
 2780 0002 9BB2     		uxth	r3, r3
 2781              	.LVL350:
1691:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2782              		.loc 1 1691 0
 2783 0004 23F48063 		bic	r3, r3, #1024
 2784              	.LVL351:
1693:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
ARM GAS  /tmp/ccu4SMAM.s 			page 105


 2785              		.loc 1 1693 0
 2786 0008 0902     		lsls	r1, r1, #8
 2787              	.LVL352:
 2788 000a 89B2     		uxth	r1, r1
 2789 000c 0B43     		orrs	r3, r3, r1
 2790              	.LVL353:
1695:stm_lib/src/stm32f10x_tim.c **** }
 2791              		.loc 1 1695 0
 2792 000e 8383     		strh	r3, [r0, #28]	@ movhi
 2793 0010 7047     		bx	lr
 2794              		.cfi_endproc
 2795              	.LFE100:
 2797              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2798              		.align	1
 2799              		.global	TIM_ClearOC1Ref
 2800              		.syntax unified
 2801              		.thumb
 2802              		.thumb_func
 2803              		.fpu softvfp
 2805              	TIM_ClearOC1Ref:
 2806              	.LFB101:
1708:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2807              		.loc 1 1708 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 0
 2810              		@ frame_needed = 0, uses_anonymous_args = 0
 2811              		@ link register save eliminated.
 2812              	.LVL354:
1714:stm_lib/src/stm32f10x_tim.c **** 
 2813              		.loc 1 1714 0
 2814 0000 038B     		ldrh	r3, [r0, #24]
 2815 0002 9BB2     		uxth	r3, r3
 2816              	.LVL355:
1717:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2817              		.loc 1 1717 0
 2818 0004 23F08003 		bic	r3, r3, #128
 2819              	.LVL356:
1719:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2820              		.loc 1 1719 0
 2821 0008 1943     		orrs	r1, r1, r3
 2822              	.LVL357:
1721:stm_lib/src/stm32f10x_tim.c **** }
 2823              		.loc 1 1721 0
 2824 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2825 000c 7047     		bx	lr
 2826              		.cfi_endproc
 2827              	.LFE101:
 2829              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2830              		.align	1
 2831              		.global	TIM_ClearOC2Ref
 2832              		.syntax unified
 2833              		.thumb
 2834              		.thumb_func
 2835              		.fpu softvfp
 2837              	TIM_ClearOC2Ref:
 2838              	.LFB102:
1734:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
ARM GAS  /tmp/ccu4SMAM.s 			page 106


 2839              		.loc 1 1734 0
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 0
 2842              		@ frame_needed = 0, uses_anonymous_args = 0
 2843              		@ link register save eliminated.
 2844              	.LVL358:
1739:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
 2845              		.loc 1 1739 0
 2846 0000 038B     		ldrh	r3, [r0, #24]
 2847              	.LVL359:
1741:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2848              		.loc 1 1741 0
 2849 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2850              	.LVL360:
1743:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2851              		.loc 1 1743 0
 2852 0006 0902     		lsls	r1, r1, #8
 2853              	.LVL361:
 2854 0008 89B2     		uxth	r1, r1
 2855 000a 0B43     		orrs	r3, r3, r1
 2856              	.LVL362:
1745:stm_lib/src/stm32f10x_tim.c **** }
 2857              		.loc 1 1745 0
 2858 000c 0383     		strh	r3, [r0, #24]	@ movhi
 2859 000e 7047     		bx	lr
 2860              		.cfi_endproc
 2861              	.LFE102:
 2863              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2864              		.align	1
 2865              		.global	TIM_ClearOC3Ref
 2866              		.syntax unified
 2867              		.thumb
 2868              		.thumb_func
 2869              		.fpu softvfp
 2871              	TIM_ClearOC3Ref:
 2872              	.LFB103:
1758:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2873              		.loc 1 1758 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              		@ link register save eliminated.
 2878              	.LVL363:
1763:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
 2879              		.loc 1 1763 0
 2880 0000 838B     		ldrh	r3, [r0, #28]
 2881 0002 9BB2     		uxth	r3, r3
 2882              	.LVL364:
1765:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2883              		.loc 1 1765 0
 2884 0004 23F08003 		bic	r3, r3, #128
 2885              	.LVL365:
1767:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2886              		.loc 1 1767 0
 2887 0008 1943     		orrs	r1, r1, r3
 2888              	.LVL366:
1769:stm_lib/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccu4SMAM.s 			page 107


 2889              		.loc 1 1769 0
 2890 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2891 000c 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE103:
 2895              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2896              		.align	1
 2897              		.global	TIM_ClearOC4Ref
 2898              		.syntax unified
 2899              		.thumb
 2900              		.thumb_func
 2901              		.fpu softvfp
 2903              	TIM_ClearOC4Ref:
 2904              	.LFB104:
1782:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2905              		.loc 1 1782 0
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 0
 2908              		@ frame_needed = 0, uses_anonymous_args = 0
 2909              		@ link register save eliminated.
 2910              	.LVL367:
1787:stm_lib/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
 2911              		.loc 1 1787 0
 2912 0000 838B     		ldrh	r3, [r0, #28]
 2913              	.LVL368:
1789:stm_lib/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2914              		.loc 1 1789 0
 2915 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2916              	.LVL369:
1791:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2917              		.loc 1 1791 0
 2918 0006 0902     		lsls	r1, r1, #8
 2919              	.LVL370:
 2920 0008 89B2     		uxth	r1, r1
 2921 000a 0B43     		orrs	r3, r3, r1
 2922              	.LVL371:
1793:stm_lib/src/stm32f10x_tim.c **** }
 2923              		.loc 1 1793 0
 2924 000c 8383     		strh	r3, [r0, #28]	@ movhi
 2925 000e 7047     		bx	lr
 2926              		.cfi_endproc
 2927              	.LFE104:
 2929              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2930              		.align	1
 2931              		.global	TIM_OC1PolarityConfig
 2932              		.syntax unified
 2933              		.thumb
 2934              		.thumb_func
 2935              		.fpu softvfp
 2937              	TIM_OC1PolarityConfig:
 2938              	.LFB105:
1806:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2939              		.loc 1 1806 0
 2940              		.cfi_startproc
 2941              		@ args = 0, pretend = 0, frame = 0
 2942              		@ frame_needed = 0, uses_anonymous_args = 0
 2943              		@ link register save eliminated.
ARM GAS  /tmp/ccu4SMAM.s 			page 108


 2944              	.LVL372:
1811:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
 2945              		.loc 1 1811 0
 2946 0000 038C     		ldrh	r3, [r0, #32]
 2947 0002 9BB2     		uxth	r3, r3
 2948              	.LVL373:
1813:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 2949              		.loc 1 1813 0
 2950 0004 23F00203 		bic	r3, r3, #2
 2951              	.LVL374:
1814:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2952              		.loc 1 1814 0
 2953 0008 1943     		orrs	r1, r1, r3
 2954              	.LVL375:
1816:stm_lib/src/stm32f10x_tim.c **** }
 2955              		.loc 1 1816 0
 2956 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2957 000c 7047     		bx	lr
 2958              		.cfi_endproc
 2959              	.LFE105:
 2961              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2962              		.align	1
 2963              		.global	TIM_OC1NPolarityConfig
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu softvfp
 2969              	TIM_OC1NPolarityConfig:
 2970              	.LFB106:
1829:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2971              		.loc 1 1829 0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
 2975              		@ link register save eliminated.
 2976              	.LVL376:
1835:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
 2977              		.loc 1 1835 0
 2978 0000 038C     		ldrh	r3, [r0, #32]
 2979 0002 9BB2     		uxth	r3, r3
 2980              	.LVL377:
1837:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2981              		.loc 1 1837 0
 2982 0004 23F00803 		bic	r3, r3, #8
 2983              	.LVL378:
1838:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2984              		.loc 1 1838 0
 2985 0008 1943     		orrs	r1, r1, r3
 2986              	.LVL379:
1840:stm_lib/src/stm32f10x_tim.c **** }
 2987              		.loc 1 1840 0
 2988 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2989 000c 7047     		bx	lr
 2990              		.cfi_endproc
 2991              	.LFE106:
 2993              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2994              		.align	1
ARM GAS  /tmp/ccu4SMAM.s 			page 109


 2995              		.global	TIM_OC2PolarityConfig
 2996              		.syntax unified
 2997              		.thumb
 2998              		.thumb_func
 2999              		.fpu softvfp
 3001              	TIM_OC2PolarityConfig:
 3002              	.LFB107:
1853:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3003              		.loc 1 1853 0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 3007              		@ link register save eliminated.
 3008              	.LVL380:
1858:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
 3009              		.loc 1 1858 0
 3010 0000 038C     		ldrh	r3, [r0, #32]
 3011 0002 9BB2     		uxth	r3, r3
 3012              	.LVL381:
1860:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3013              		.loc 1 1860 0
 3014 0004 23F02003 		bic	r3, r3, #32
 3015              	.LVL382:
1861:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3016              		.loc 1 1861 0
 3017 0008 0901     		lsls	r1, r1, #4
 3018              	.LVL383:
 3019 000a 89B2     		uxth	r1, r1
 3020 000c 0B43     		orrs	r3, r3, r1
 3021              	.LVL384:
1863:stm_lib/src/stm32f10x_tim.c **** }
 3022              		.loc 1 1863 0
 3023 000e 0384     		strh	r3, [r0, #32]	@ movhi
 3024 0010 7047     		bx	lr
 3025              		.cfi_endproc
 3026              	.LFE107:
 3028              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3029              		.align	1
 3030              		.global	TIM_OC2NPolarityConfig
 3031              		.syntax unified
 3032              		.thumb
 3033              		.thumb_func
 3034              		.fpu softvfp
 3036              	TIM_OC2NPolarityConfig:
 3037              	.LFB108:
1876:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3038              		.loc 1 1876 0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 0
 3041              		@ frame_needed = 0, uses_anonymous_args = 0
 3042              		@ link register save eliminated.
 3043              	.LVL385:
1882:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
 3044              		.loc 1 1882 0
 3045 0000 038C     		ldrh	r3, [r0, #32]
 3046 0002 9BB2     		uxth	r3, r3
 3047              	.LVL386:
ARM GAS  /tmp/ccu4SMAM.s 			page 110


1884:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3048              		.loc 1 1884 0
 3049 0004 23F08003 		bic	r3, r3, #128
 3050              	.LVL387:
1885:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3051              		.loc 1 1885 0
 3052 0008 0901     		lsls	r1, r1, #4
 3053              	.LVL388:
 3054 000a 89B2     		uxth	r1, r1
 3055 000c 0B43     		orrs	r3, r3, r1
 3056              	.LVL389:
1887:stm_lib/src/stm32f10x_tim.c **** }
 3057              		.loc 1 1887 0
 3058 000e 0384     		strh	r3, [r0, #32]	@ movhi
 3059 0010 7047     		bx	lr
 3060              		.cfi_endproc
 3061              	.LFE108:
 3063              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3064              		.align	1
 3065              		.global	TIM_OC3PolarityConfig
 3066              		.syntax unified
 3067              		.thumb
 3068              		.thumb_func
 3069              		.fpu softvfp
 3071              	TIM_OC3PolarityConfig:
 3072              	.LFB109:
1900:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3073              		.loc 1 1900 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 0, uses_anonymous_args = 0
 3077              		@ link register save eliminated.
 3078              	.LVL390:
1905:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
 3079              		.loc 1 1905 0
 3080 0000 038C     		ldrh	r3, [r0, #32]
 3081 0002 9BB2     		uxth	r3, r3
 3082              	.LVL391:
1907:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3083              		.loc 1 1907 0
 3084 0004 23F40073 		bic	r3, r3, #512
 3085              	.LVL392:
1908:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3086              		.loc 1 1908 0
 3087 0008 0902     		lsls	r1, r1, #8
 3088              	.LVL393:
 3089 000a 89B2     		uxth	r1, r1
 3090 000c 0B43     		orrs	r3, r3, r1
 3091              	.LVL394:
1910:stm_lib/src/stm32f10x_tim.c **** }
 3092              		.loc 1 1910 0
 3093 000e 0384     		strh	r3, [r0, #32]	@ movhi
 3094 0010 7047     		bx	lr
 3095              		.cfi_endproc
 3096              	.LFE109:
 3098              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3099              		.align	1
ARM GAS  /tmp/ccu4SMAM.s 			page 111


 3100              		.global	TIM_OC3NPolarityConfig
 3101              		.syntax unified
 3102              		.thumb
 3103              		.thumb_func
 3104              		.fpu softvfp
 3106              	TIM_OC3NPolarityConfig:
 3107              	.LFB110:
1923:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3108              		.loc 1 1923 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              		@ link register save eliminated.
 3113              	.LVL395:
1930:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
 3114              		.loc 1 1930 0
 3115 0000 038C     		ldrh	r3, [r0, #32]
 3116 0002 9BB2     		uxth	r3, r3
 3117              	.LVL396:
1932:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3118              		.loc 1 1932 0
 3119 0004 23F40063 		bic	r3, r3, #2048
 3120              	.LVL397:
1933:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3121              		.loc 1 1933 0
 3122 0008 0902     		lsls	r1, r1, #8
 3123              	.LVL398:
 3124 000a 89B2     		uxth	r1, r1
 3125 000c 0B43     		orrs	r3, r3, r1
 3126              	.LVL399:
1935:stm_lib/src/stm32f10x_tim.c **** }
 3127              		.loc 1 1935 0
 3128 000e 0384     		strh	r3, [r0, #32]	@ movhi
 3129 0010 7047     		bx	lr
 3130              		.cfi_endproc
 3131              	.LFE110:
 3133              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3134              		.align	1
 3135              		.global	TIM_OC4PolarityConfig
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3139              		.fpu softvfp
 3141              	TIM_OC4PolarityConfig:
 3142              	.LFB111:
1948:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3143              		.loc 1 1948 0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 0, uses_anonymous_args = 0
 3147              		@ link register save eliminated.
 3148              	.LVL400:
1953:stm_lib/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
 3149              		.loc 1 1953 0
 3150 0000 038C     		ldrh	r3, [r0, #32]
 3151 0002 9BB2     		uxth	r3, r3
 3152              	.LVL401:
ARM GAS  /tmp/ccu4SMAM.s 			page 112


1955:stm_lib/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3153              		.loc 1 1955 0
 3154 0004 23F40053 		bic	r3, r3, #8192
 3155              	.LVL402:
1956:stm_lib/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3156              		.loc 1 1956 0
 3157 0008 0903     		lsls	r1, r1, #12
 3158              	.LVL403:
 3159 000a 89B2     		uxth	r1, r1
 3160 000c 0B43     		orrs	r3, r3, r1
 3161              	.LVL404:
1958:stm_lib/src/stm32f10x_tim.c **** }
 3162              		.loc 1 1958 0
 3163 000e 0384     		strh	r3, [r0, #32]	@ movhi
 3164 0010 7047     		bx	lr
 3165              		.cfi_endproc
 3166              	.LFE111:
 3168              		.section	.text.TIM_CCxCmd,"ax",%progbits
 3169              		.align	1
 3170              		.global	TIM_CCxCmd
 3171              		.syntax unified
 3172              		.thumb
 3173              		.thumb_func
 3174              		.fpu softvfp
 3176              	TIM_CCxCmd:
 3177              	.LFB112:
1975:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3178              		.loc 1 1975 0
 3179              		.cfi_startproc
 3180              		@ args = 0, pretend = 0, frame = 0
 3181              		@ frame_needed = 0, uses_anonymous_args = 0
 3182              		@ link register save eliminated.
 3183              	.LVL405:
 3184 0000 10B4     		push	{r4}
 3185              	.LCFI33:
 3186              		.cfi_def_cfa_offset 4
 3187              		.cfi_offset 4, -4
 3188              	.LVL406:
1983:stm_lib/src/stm32f10x_tim.c **** 
 3189              		.loc 1 1983 0
 3190 0002 0123     		movs	r3, #1
 3191 0004 8B40     		lsls	r3, r3, r1
 3192 0006 9BB2     		uxth	r3, r3
 3193              	.LVL407:
1986:stm_lib/src/stm32f10x_tim.c **** 
 3194              		.loc 1 1986 0
 3195 0008 048C     		ldrh	r4, [r0, #32]
 3196 000a DB43     		mvns	r3, r3
 3197              	.LVL408:
 3198 000c 9BB2     		uxth	r3, r3
 3199              	.LVL409:
 3200 000e 2340     		ands	r3, r3, r4
 3201 0010 0384     		strh	r3, [r0, #32]	@ movhi
1989:stm_lib/src/stm32f10x_tim.c **** }
 3202              		.loc 1 1989 0
 3203 0012 038C     		ldrh	r3, [r0, #32]
 3204 0014 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu4SMAM.s 			page 113


 3205 0016 8A40     		lsls	r2, r2, r1
 3206              	.LVL410:
 3207 0018 92B2     		uxth	r2, r2
 3208 001a 1A43     		orrs	r2, r2, r3
 3209 001c 0284     		strh	r2, [r0, #32]	@ movhi
1990:stm_lib/src/stm32f10x_tim.c **** 
 3210              		.loc 1 1990 0
 3211 001e 10BC     		pop	{r4}
 3212              	.LCFI34:
 3213              		.cfi_restore 4
 3214              		.cfi_def_cfa_offset 0
 3215 0020 7047     		bx	lr
 3216              		.cfi_endproc
 3217              	.LFE112:
 3219              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3220              		.align	1
 3221              		.global	TIM_CCxNCmd
 3222              		.syntax unified
 3223              		.thumb
 3224              		.thumb_func
 3225              		.fpu softvfp
 3227              	TIM_CCxNCmd:
 3228              	.LFB113:
2005:stm_lib/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3229              		.loc 1 2005 0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 0
 3232              		@ frame_needed = 0, uses_anonymous_args = 0
 3233              		@ link register save eliminated.
 3234              	.LVL411:
 3235 0000 10B4     		push	{r4}
 3236              	.LCFI35:
 3237              		.cfi_def_cfa_offset 4
 3238              		.cfi_offset 4, -4
 3239              	.LVL412:
2013:stm_lib/src/stm32f10x_tim.c **** 
 3240              		.loc 1 2013 0
 3241 0002 0423     		movs	r3, #4
 3242 0004 8B40     		lsls	r3, r3, r1
 3243 0006 9BB2     		uxth	r3, r3
 3244              	.LVL413:
2016:stm_lib/src/stm32f10x_tim.c **** 
 3245              		.loc 1 2016 0
 3246 0008 048C     		ldrh	r4, [r0, #32]
 3247 000a DB43     		mvns	r3, r3
 3248              	.LVL414:
 3249 000c 9BB2     		uxth	r3, r3
 3250              	.LVL415:
 3251 000e 2340     		ands	r3, r3, r4
 3252 0010 0384     		strh	r3, [r0, #32]	@ movhi
2019:stm_lib/src/stm32f10x_tim.c **** }
 3253              		.loc 1 2019 0
 3254 0012 038C     		ldrh	r3, [r0, #32]
 3255 0014 9BB2     		uxth	r3, r3
 3256 0016 8A40     		lsls	r2, r2, r1
 3257              	.LVL416:
 3258 0018 92B2     		uxth	r2, r2
ARM GAS  /tmp/ccu4SMAM.s 			page 114


 3259 001a 1A43     		orrs	r2, r2, r3
 3260 001c 0284     		strh	r2, [r0, #32]	@ movhi
2020:stm_lib/src/stm32f10x_tim.c **** 
 3261              		.loc 1 2020 0
 3262 001e 10BC     		pop	{r4}
 3263              	.LCFI36:
 3264              		.cfi_restore 4
 3265              		.cfi_def_cfa_offset 0
 3266 0020 7047     		bx	lr
 3267              		.cfi_endproc
 3268              	.LFE113:
 3270              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 3271              		.align	1
 3272              		.global	TIM_SelectOCxM
 3273              		.syntax unified
 3274              		.thumb
 3275              		.thumb_func
 3276              		.fpu softvfp
 3278              	TIM_SelectOCxM:
 3279              	.LFB114:
2046:stm_lib/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 3280              		.loc 1 2046 0
 3281              		.cfi_startproc
 3282              		@ args = 0, pretend = 0, frame = 0
 3283              		@ frame_needed = 0, uses_anonymous_args = 0
 3284              		@ link register save eliminated.
 3285              	.LVL417:
 3286 0000 30B4     		push	{r4, r5}
 3287              	.LCFI37:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 5, -4
 3291              	.LVL418:
2056:stm_lib/src/stm32f10x_tim.c **** 
 3292              		.loc 1 2056 0
 3293 0002 00F11804 		add	r4, r0, #24
 3294              	.LVL419:
2058:stm_lib/src/stm32f10x_tim.c **** 
 3295              		.loc 1 2058 0
 3296 0006 0123     		movs	r3, #1
 3297 0008 8B40     		lsls	r3, r3, r1
 3298 000a 9BB2     		uxth	r3, r3
 3299              	.LVL420:
2061:stm_lib/src/stm32f10x_tim.c **** 
 3300              		.loc 1 2061 0
 3301 000c 058C     		ldrh	r5, [r0, #32]
 3302 000e DB43     		mvns	r3, r3
 3303              	.LVL421:
 3304 0010 9BB2     		uxth	r3, r3
 3305              	.LVL422:
 3306 0012 2B40     		ands	r3, r3, r5
 3307 0014 0384     		strh	r3, [r0, #32]	@ movhi
2063:stm_lib/src/stm32f10x_tim.c ****   {
 3308              		.loc 1 2063 0
 3309 0016 71B1     		cbz	r1, .L186
2063:stm_lib/src/stm32f10x_tim.c ****   {
 3310              		.loc 1 2063 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccu4SMAM.s 			page 115


 3311 0018 0829     		cmp	r1, #8
 3312 001a 0CD0     		beq	.L186
2075:stm_lib/src/stm32f10x_tim.c **** 
 3313              		.loc 1 2075 0 is_stmt 1
 3314 001c 0439     		subs	r1, r1, #4
 3315              	.LVL423:
 3316 001e C1F34E01 		ubfx	r1, r1, #1, #15
 3317              	.LVL424:
2078:stm_lib/src/stm32f10x_tim.c ****     
 3318              		.loc 1 2078 0
 3319 0022 6358     		ldr	r3, [r4, r1]
 3320 0024 23F4E043 		bic	r3, r3, #28672
 3321 0028 6350     		str	r3, [r4, r1]
2081:stm_lib/src/stm32f10x_tim.c ****   }
 3322              		.loc 1 2081 0
 3323 002a 6358     		ldr	r3, [r4, r1]
 3324 002c 1202     		lsls	r2, r2, #8
 3325              	.LVL425:
 3326 002e 92B2     		uxth	r2, r2
 3327 0030 1A43     		orrs	r2, r2, r3
 3328 0032 6250     		str	r2, [r4, r1]
2083:stm_lib/src/stm32f10x_tim.c **** 
 3329              		.loc 1 2083 0
 3330 0034 07E0     		b	.L185
 3331              	.LVL426:
 3332              	.L186:
2065:stm_lib/src/stm32f10x_tim.c **** 
 3333              		.loc 1 2065 0
 3334 0036 4908     		lsrs	r1, r1, #1
 3335              	.LVL427:
2068:stm_lib/src/stm32f10x_tim.c ****    
 3336              		.loc 1 2068 0
 3337 0038 6358     		ldr	r3, [r4, r1]
 3338 003a 23F07003 		bic	r3, r3, #112
 3339 003e 6350     		str	r3, [r4, r1]
2071:stm_lib/src/stm32f10x_tim.c ****   }
 3340              		.loc 1 2071 0
 3341 0040 6358     		ldr	r3, [r4, r1]
 3342 0042 1A43     		orrs	r2, r2, r3
 3343              	.LVL428:
 3344 0044 6250     		str	r2, [r4, r1]
 3345              	.LVL429:
 3346              	.L185:
2083:stm_lib/src/stm32f10x_tim.c **** 
 3347              		.loc 1 2083 0
 3348 0046 30BC     		pop	{r4, r5}
 3349              	.LCFI38:
 3350              		.cfi_restore 5
 3351              		.cfi_restore 4
 3352              		.cfi_def_cfa_offset 0
 3353 0048 7047     		bx	lr
 3354              		.cfi_endproc
 3355              	.LFE114:
 3357              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 3358              		.align	1
 3359              		.global	TIM_UpdateDisableConfig
 3360              		.syntax unified
ARM GAS  /tmp/ccu4SMAM.s 			page 116


 3361              		.thumb
 3362              		.thumb_func
 3363              		.fpu softvfp
 3365              	TIM_UpdateDisableConfig:
 3366              	.LFB115:
2093:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3367              		.loc 1 2093 0
 3368              		.cfi_startproc
 3369              		@ args = 0, pretend = 0, frame = 0
 3370              		@ frame_needed = 0, uses_anonymous_args = 0
 3371              		@ link register save eliminated.
 3372              	.LVL430:
2097:stm_lib/src/stm32f10x_tim.c ****   {
 3373              		.loc 1 2097 0
 3374 0000 31B9     		cbnz	r1, .L193
2105:stm_lib/src/stm32f10x_tim.c ****   }
 3375              		.loc 1 2105 0
 3376 0002 0388     		ldrh	r3, [r0]
 3377 0004 9BB2     		uxth	r3, r3
 3378 0006 23F00203 		bic	r3, r3, #2
 3379 000a 9BB2     		uxth	r3, r3
 3380 000c 0380     		strh	r3, [r0]	@ movhi
 3381 000e 7047     		bx	lr
 3382              	.L193:
2100:stm_lib/src/stm32f10x_tim.c ****   }
 3383              		.loc 1 2100 0
 3384 0010 0388     		ldrh	r3, [r0]
 3385 0012 9BB2     		uxth	r3, r3
 3386 0014 43F00203 		orr	r3, r3, #2
 3387 0018 0380     		strh	r3, [r0]	@ movhi
 3388 001a 7047     		bx	lr
 3389              		.cfi_endproc
 3390              	.LFE115:
 3392              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 3393              		.align	1
 3394              		.global	TIM_UpdateRequestConfig
 3395              		.syntax unified
 3396              		.thumb
 3397              		.thumb_func
 3398              		.fpu softvfp
 3400              	TIM_UpdateRequestConfig:
 3401              	.LFB116:
2121:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3402              		.loc 1 2121 0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 0
 3405              		@ frame_needed = 0, uses_anonymous_args = 0
 3406              		@ link register save eliminated.
 3407              	.LVL431:
2125:stm_lib/src/stm32f10x_tim.c ****   {
 3408              		.loc 1 2125 0
 3409 0000 31B9     		cbnz	r1, .L197
2133:stm_lib/src/stm32f10x_tim.c ****   }
 3410              		.loc 1 2133 0
 3411 0002 0388     		ldrh	r3, [r0]
 3412 0004 9BB2     		uxth	r3, r3
 3413 0006 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccu4SMAM.s 			page 117


 3414 000a 9BB2     		uxth	r3, r3
 3415 000c 0380     		strh	r3, [r0]	@ movhi
 3416 000e 7047     		bx	lr
 3417              	.L197:
2128:stm_lib/src/stm32f10x_tim.c ****   }
 3418              		.loc 1 2128 0
 3419 0010 0388     		ldrh	r3, [r0]
 3420 0012 9BB2     		uxth	r3, r3
 3421 0014 43F00403 		orr	r3, r3, #4
 3422 0018 0380     		strh	r3, [r0]	@ movhi
 3423 001a 7047     		bx	lr
 3424              		.cfi_endproc
 3425              	.LFE116:
 3427              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3428              		.align	1
 3429              		.global	TIM_SelectHallSensor
 3430              		.syntax unified
 3431              		.thumb
 3432              		.thumb_func
 3433              		.fpu softvfp
 3435              	TIM_SelectHallSensor:
 3436              	.LFB117:
2145:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3437              		.loc 1 2145 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              		@ link register save eliminated.
 3442              	.LVL432:
2149:stm_lib/src/stm32f10x_tim.c ****   {
 3443              		.loc 1 2149 0
 3444 0000 31B9     		cbnz	r1, .L201
2157:stm_lib/src/stm32f10x_tim.c ****   }
 3445              		.loc 1 2157 0
 3446 0002 8388     		ldrh	r3, [r0, #4]
 3447 0004 9BB2     		uxth	r3, r3
 3448 0006 23F08003 		bic	r3, r3, #128
 3449 000a 9BB2     		uxth	r3, r3
 3450 000c 8380     		strh	r3, [r0, #4]	@ movhi
 3451 000e 7047     		bx	lr
 3452              	.L201:
2152:stm_lib/src/stm32f10x_tim.c ****   }
 3453              		.loc 1 2152 0
 3454 0010 8388     		ldrh	r3, [r0, #4]
 3455 0012 9BB2     		uxth	r3, r3
 3456 0014 43F08003 		orr	r3, r3, #128
 3457 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3458 001a 7047     		bx	lr
 3459              		.cfi_endproc
 3460              	.LFE117:
 3462              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 3463              		.align	1
 3464              		.global	TIM_SelectOnePulseMode
 3465              		.syntax unified
 3466              		.thumb
 3467              		.thumb_func
 3468              		.fpu softvfp
ARM GAS  /tmp/ccu4SMAM.s 			page 118


 3470              	TIM_SelectOnePulseMode:
 3471              	.LFB118:
2171:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3472              		.loc 1 2171 0
 3473              		.cfi_startproc
 3474              		@ args = 0, pretend = 0, frame = 0
 3475              		@ frame_needed = 0, uses_anonymous_args = 0
 3476              		@ link register save eliminated.
 3477              	.LVL433:
2176:stm_lib/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 3478              		.loc 1 2176 0
 3479 0000 0388     		ldrh	r3, [r0]
 3480 0002 9BB2     		uxth	r3, r3
 3481 0004 23F00803 		bic	r3, r3, #8
 3482 0008 9BB2     		uxth	r3, r3
 3483 000a 0380     		strh	r3, [r0]	@ movhi
2178:stm_lib/src/stm32f10x_tim.c **** }
 3484              		.loc 1 2178 0
 3485 000c 0388     		ldrh	r3, [r0]
 3486 000e 9BB2     		uxth	r3, r3
 3487 0010 1943     		orrs	r1, r1, r3
 3488              	.LVL434:
 3489 0012 0180     		strh	r1, [r0]	@ movhi
 3490 0014 7047     		bx	lr
 3491              		.cfi_endproc
 3492              	.LFE118:
 3494              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3495              		.align	1
 3496              		.global	TIM_SelectOutputTrigger
 3497              		.syntax unified
 3498              		.thumb
 3499              		.thumb_func
 3500              		.fpu softvfp
 3502              	TIM_SelectOutputTrigger:
 3503              	.LFB119:
2203:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3504              		.loc 1 2203 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 0
 3507              		@ frame_needed = 0, uses_anonymous_args = 0
 3508              		@ link register save eliminated.
 3509              	.LVL435:
2208:stm_lib/src/stm32f10x_tim.c ****   /* Select the TRGO source */
 3510              		.loc 1 2208 0
 3511 0000 8388     		ldrh	r3, [r0, #4]
 3512 0002 9BB2     		uxth	r3, r3
 3513 0004 23F07003 		bic	r3, r3, #112
 3514 0008 9BB2     		uxth	r3, r3
 3515 000a 8380     		strh	r3, [r0, #4]	@ movhi
2210:stm_lib/src/stm32f10x_tim.c **** }
 3516              		.loc 1 2210 0
 3517 000c 8388     		ldrh	r3, [r0, #4]
 3518 000e 9BB2     		uxth	r3, r3
 3519 0010 1943     		orrs	r1, r1, r3
 3520              	.LVL436:
 3521 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3522 0014 7047     		bx	lr
ARM GAS  /tmp/ccu4SMAM.s 			page 119


 3523              		.cfi_endproc
 3524              	.LFE119:
 3526              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3527              		.align	1
 3528              		.global	TIM_SelectSlaveMode
 3529              		.syntax unified
 3530              		.thumb
 3531              		.thumb_func
 3532              		.fpu softvfp
 3534              	TIM_SelectSlaveMode:
 3535              	.LFB120:
2226:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3536              		.loc 1 2226 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 0
 3539              		@ frame_needed = 0, uses_anonymous_args = 0
 3540              		@ link register save eliminated.
 3541              	.LVL437:
2231:stm_lib/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 3542              		.loc 1 2231 0
 3543 0000 0389     		ldrh	r3, [r0, #8]
 3544 0002 9BB2     		uxth	r3, r3
 3545 0004 23F00703 		bic	r3, r3, #7
 3546 0008 9BB2     		uxth	r3, r3
 3547 000a 0381     		strh	r3, [r0, #8]	@ movhi
2233:stm_lib/src/stm32f10x_tim.c **** }
 3548              		.loc 1 2233 0
 3549 000c 0389     		ldrh	r3, [r0, #8]
 3550 000e 9BB2     		uxth	r3, r3
 3551 0010 1943     		orrs	r1, r1, r3
 3552              	.LVL438:
 3553 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3554 0014 7047     		bx	lr
 3555              		.cfi_endproc
 3556              	.LFE120:
 3558              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3559              		.align	1
 3560              		.global	TIM_SelectMasterSlaveMode
 3561              		.syntax unified
 3562              		.thumb
 3563              		.thumb_func
 3564              		.fpu softvfp
 3566              	TIM_SelectMasterSlaveMode:
 3567              	.LFB121:
2247:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3568              		.loc 1 2247 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 0
 3571              		@ frame_needed = 0, uses_anonymous_args = 0
 3572              		@ link register save eliminated.
 3573              	.LVL439:
2252:stm_lib/src/stm32f10x_tim.c ****   
 3574              		.loc 1 2252 0
 3575 0000 0389     		ldrh	r3, [r0, #8]
 3576 0002 9BB2     		uxth	r3, r3
 3577 0004 23F08003 		bic	r3, r3, #128
 3578 0008 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu4SMAM.s 			page 120


 3579 000a 0381     		strh	r3, [r0, #8]	@ movhi
2255:stm_lib/src/stm32f10x_tim.c **** }
 3580              		.loc 1 2255 0
 3581 000c 0389     		ldrh	r3, [r0, #8]
 3582 000e 9BB2     		uxth	r3, r3
 3583 0010 1943     		orrs	r1, r1, r3
 3584              	.LVL440:
 3585 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3586 0014 7047     		bx	lr
 3587              		.cfi_endproc
 3588              	.LFE121:
 3590              		.section	.text.TIM_SetCounter,"ax",%progbits
 3591              		.align	1
 3592              		.global	TIM_SetCounter
 3593              		.syntax unified
 3594              		.thumb
 3595              		.thumb_func
 3596              		.fpu softvfp
 3598              	TIM_SetCounter:
 3599              	.LFB122:
2265:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3600              		.loc 1 2265 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 0
 3603              		@ frame_needed = 0, uses_anonymous_args = 0
 3604              		@ link register save eliminated.
 3605              	.LVL441:
2269:stm_lib/src/stm32f10x_tim.c **** }
 3606              		.loc 1 2269 0
 3607 0000 8184     		strh	r1, [r0, #36]	@ movhi
 3608 0002 7047     		bx	lr
 3609              		.cfi_endproc
 3610              	.LFE122:
 3612              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 3613              		.align	1
 3614              		.global	TIM_SetAutoreload
 3615              		.syntax unified
 3616              		.thumb
 3617              		.thumb_func
 3618              		.fpu softvfp
 3620              	TIM_SetAutoreload:
 3621              	.LFB123:
2279:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3622              		.loc 1 2279 0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 0
 3625              		@ frame_needed = 0, uses_anonymous_args = 0
 3626              		@ link register save eliminated.
 3627              	.LVL442:
2283:stm_lib/src/stm32f10x_tim.c **** }
 3628              		.loc 1 2283 0
 3629 0000 8185     		strh	r1, [r0, #44]	@ movhi
 3630 0002 7047     		bx	lr
 3631              		.cfi_endproc
 3632              	.LFE123:
 3634              		.section	.text.TIM_SetCompare1,"ax",%progbits
 3635              		.align	1
ARM GAS  /tmp/ccu4SMAM.s 			page 121


 3636              		.global	TIM_SetCompare1
 3637              		.syntax unified
 3638              		.thumb
 3639              		.thumb_func
 3640              		.fpu softvfp
 3642              	TIM_SetCompare1:
 3643              	.LFB124:
2293:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3644              		.loc 1 2293 0
 3645              		.cfi_startproc
 3646              		@ args = 0, pretend = 0, frame = 0
 3647              		@ frame_needed = 0, uses_anonymous_args = 0
 3648              		@ link register save eliminated.
 3649              	.LVL443:
2297:stm_lib/src/stm32f10x_tim.c **** }
 3650              		.loc 1 2297 0
 3651 0000 8186     		strh	r1, [r0, #52]	@ movhi
 3652 0002 7047     		bx	lr
 3653              		.cfi_endproc
 3654              	.LFE124:
 3656              		.section	.text.TIM_SetCompare2,"ax",%progbits
 3657              		.align	1
 3658              		.global	TIM_SetCompare2
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu softvfp
 3664              	TIM_SetCompare2:
 3665              	.LFB125:
2307:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3666              		.loc 1 2307 0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 0
 3669              		@ frame_needed = 0, uses_anonymous_args = 0
 3670              		@ link register save eliminated.
 3671              	.LVL444:
2311:stm_lib/src/stm32f10x_tim.c **** }
 3672              		.loc 1 2311 0
 3673 0000 0187     		strh	r1, [r0, #56]	@ movhi
 3674 0002 7047     		bx	lr
 3675              		.cfi_endproc
 3676              	.LFE125:
 3678              		.section	.text.TIM_SetCompare3,"ax",%progbits
 3679              		.align	1
 3680              		.global	TIM_SetCompare3
 3681              		.syntax unified
 3682              		.thumb
 3683              		.thumb_func
 3684              		.fpu softvfp
 3686              	TIM_SetCompare3:
 3687              	.LFB126:
2321:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3688              		.loc 1 2321 0
 3689              		.cfi_startproc
 3690              		@ args = 0, pretend = 0, frame = 0
 3691              		@ frame_needed = 0, uses_anonymous_args = 0
 3692              		@ link register save eliminated.
ARM GAS  /tmp/ccu4SMAM.s 			page 122


 3693              	.LVL445:
2325:stm_lib/src/stm32f10x_tim.c **** }
 3694              		.loc 1 2325 0
 3695 0000 8187     		strh	r1, [r0, #60]	@ movhi
 3696 0002 7047     		bx	lr
 3697              		.cfi_endproc
 3698              	.LFE126:
 3700              		.section	.text.TIM_SetCompare4,"ax",%progbits
 3701              		.align	1
 3702              		.global	TIM_SetCompare4
 3703              		.syntax unified
 3704              		.thumb
 3705              		.thumb_func
 3706              		.fpu softvfp
 3708              	TIM_SetCompare4:
 3709              	.LFB127:
2335:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3710              		.loc 1 2335 0
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 0
 3713              		@ frame_needed = 0, uses_anonymous_args = 0
 3714              		@ link register save eliminated.
 3715              	.LVL446:
2339:stm_lib/src/stm32f10x_tim.c **** }
 3716              		.loc 1 2339 0
 3717 0000 A0F84010 		strh	r1, [r0, #64]	@ movhi
 3718 0004 7047     		bx	lr
 3719              		.cfi_endproc
 3720              	.LFE127:
 3722              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3723              		.align	1
 3724              		.global	TIM_SetIC1Prescaler
 3725              		.syntax unified
 3726              		.thumb
 3727              		.thumb_func
 3728              		.fpu softvfp
 3730              	TIM_SetIC1Prescaler:
 3731              	.LFB128:
2354:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3732              		.loc 1 2354 0
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 0
 3735              		@ frame_needed = 0, uses_anonymous_args = 0
 3736              		@ link register save eliminated.
 3737              	.LVL447:
2359:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 3738              		.loc 1 2359 0
 3739 0000 038B     		ldrh	r3, [r0, #24]
 3740 0002 9BB2     		uxth	r3, r3
 3741 0004 23F00C03 		bic	r3, r3, #12
 3742 0008 9BB2     		uxth	r3, r3
 3743 000a 0383     		strh	r3, [r0, #24]	@ movhi
2361:stm_lib/src/stm32f10x_tim.c **** }
 3744              		.loc 1 2361 0
 3745 000c 038B     		ldrh	r3, [r0, #24]
 3746 000e 9BB2     		uxth	r3, r3
 3747 0010 1943     		orrs	r1, r1, r3
ARM GAS  /tmp/ccu4SMAM.s 			page 123


 3748              	.LVL448:
 3749 0012 0183     		strh	r1, [r0, #24]	@ movhi
 3750 0014 7047     		bx	lr
 3751              		.cfi_endproc
 3752              	.LFE128:
 3754              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3755              		.align	1
 3756              		.global	TIM_SetIC2Prescaler
 3757              		.syntax unified
 3758              		.thumb
 3759              		.thumb_func
 3760              		.fpu softvfp
 3762              	TIM_SetIC2Prescaler:
 3763              	.LFB129:
2376:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3764              		.loc 1 2376 0
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 0
 3767              		@ frame_needed = 0, uses_anonymous_args = 0
 3768              		@ link register save eliminated.
 3769              	.LVL449:
2381:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 3770              		.loc 1 2381 0
 3771 0000 038B     		ldrh	r3, [r0, #24]
 3772 0002 9BB2     		uxth	r3, r3
 3773 0004 23F44063 		bic	r3, r3, #3072
 3774 0008 9BB2     		uxth	r3, r3
 3775 000a 0383     		strh	r3, [r0, #24]	@ movhi
2383:stm_lib/src/stm32f10x_tim.c **** }
 3776              		.loc 1 2383 0
 3777 000c 038B     		ldrh	r3, [r0, #24]
 3778 000e 9BB2     		uxth	r3, r3
 3779 0010 0902     		lsls	r1, r1, #8
 3780              	.LVL450:
 3781 0012 89B2     		uxth	r1, r1
 3782 0014 0B43     		orrs	r3, r3, r1
 3783 0016 0383     		strh	r3, [r0, #24]	@ movhi
 3784 0018 7047     		bx	lr
 3785              		.cfi_endproc
 3786              	.LFE129:
 3788              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3789              		.align	1
 3790              		.global	TIM_PWMIConfig
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu softvfp
 3796              	TIM_PWMIConfig:
 3797              	.LFB63:
 655:stm_lib/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3798              		.loc 1 655 0
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 0
 3801              		@ frame_needed = 0, uses_anonymous_args = 0
 3802              	.LVL451:
 3803 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3804              	.LCFI39:
ARM GAS  /tmp/ccu4SMAM.s 			page 124


 3805              		.cfi_def_cfa_offset 24
 3806              		.cfi_offset 3, -24
 3807              		.cfi_offset 4, -20
 3808              		.cfi_offset 5, -16
 3809              		.cfi_offset 6, -12
 3810              		.cfi_offset 7, -8
 3811              		.cfi_offset 14, -4
 3812 0002 0546     		mov	r5, r0
 3813 0004 0C46     		mov	r4, r1
 3814              	.LVL452:
 661:stm_lib/src/stm32f10x_tim.c ****   {
 3815              		.loc 1 661 0
 3816 0006 4988     		ldrh	r1, [r1, #2]
 3817              	.LVL453:
 3818 0008 C9B9     		cbnz	r1, .L219
 663:stm_lib/src/stm32f10x_tim.c ****   }
 3819              		.loc 1 663 0
 3820 000a 0226     		movs	r6, #2
 3821              	.L215:
 3822              	.LVL454:
 670:stm_lib/src/stm32f10x_tim.c ****   {
 3823              		.loc 1 670 0
 3824 000c A288     		ldrh	r2, [r4, #4]
 3825 000e 012A     		cmp	r2, #1
 3826 0010 17D0     		beq	.L222
 676:stm_lib/src/stm32f10x_tim.c ****   }
 3827              		.loc 1 676 0
 3828 0012 0127     		movs	r7, #1
 3829              	.L216:
 3830              	.LVL455:
 678:stm_lib/src/stm32f10x_tim.c ****   {
 3831              		.loc 1 678 0
 3832 0014 2388     		ldrh	r3, [r4]
 3833 0016 B3B1     		cbz	r3, .L223
 693:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3834              		.loc 1 693 0
 3835 0018 2389     		ldrh	r3, [r4, #8]
 3836 001a 2846     		mov	r0, r5
 3837              	.LVL456:
 3838 001c FFF7FEFF 		bl	TI2_Config
 3839              	.LVL457:
 696:stm_lib/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 3840              		.loc 1 696 0
 3841 0020 E188     		ldrh	r1, [r4, #6]
 3842 0022 2846     		mov	r0, r5
 3843 0024 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3844              	.LVL458:
 698:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3845              		.loc 1 698 0
 3846 0028 2389     		ldrh	r3, [r4, #8]
 3847 002a 3A46     		mov	r2, r7
 3848 002c 3146     		mov	r1, r6
 3849 002e 2846     		mov	r0, r5
 3850 0030 FFF7FEFF 		bl	TI1_Config
 3851              	.LVL459:
 700:stm_lib/src/stm32f10x_tim.c ****   }
 3852              		.loc 1 700 0
ARM GAS  /tmp/ccu4SMAM.s 			page 125


 3853 0034 E188     		ldrh	r1, [r4, #6]
 3854 0036 2846     		mov	r0, r5
 3855 0038 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3856              	.LVL460:
 3857 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3858              	.LVL461:
 3859              	.L219:
 667:stm_lib/src/stm32f10x_tim.c ****   }
 3860              		.loc 1 667 0
 3861 003e 0026     		movs	r6, #0
 3862 0040 E4E7     		b	.L215
 3863              	.LVL462:
 3864              	.L222:
 672:stm_lib/src/stm32f10x_tim.c ****   }
 3865              		.loc 1 672 0
 3866 0042 0227     		movs	r7, #2
 3867 0044 E6E7     		b	.L216
 3868              	.LVL463:
 3869              	.L223:
 681:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3870              		.loc 1 681 0
 3871 0046 2389     		ldrh	r3, [r4, #8]
 3872 0048 2846     		mov	r0, r5
 3873              	.LVL464:
 3874 004a FFF7FEFF 		bl	TI1_Config
 3875              	.LVL465:
 684:stm_lib/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 3876              		.loc 1 684 0
 3877 004e E188     		ldrh	r1, [r4, #6]
 3878 0050 2846     		mov	r0, r5
 3879 0052 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3880              	.LVL466:
 686:stm_lib/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3881              		.loc 1 686 0
 3882 0056 2389     		ldrh	r3, [r4, #8]
 3883 0058 3A46     		mov	r2, r7
 3884 005a 3146     		mov	r1, r6
 3885 005c 2846     		mov	r0, r5
 3886 005e FFF7FEFF 		bl	TI2_Config
 3887              	.LVL467:
 688:stm_lib/src/stm32f10x_tim.c ****   }
 3888              		.loc 1 688 0
 3889 0062 E188     		ldrh	r1, [r4, #6]
 3890 0064 2846     		mov	r0, r5
 3891 0066 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3892              	.LVL468:
 3893 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3894              		.cfi_endproc
 3895              	.LFE63:
 3897              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3898              		.align	1
 3899              		.global	TIM_SetIC3Prescaler
 3900              		.syntax unified
 3901              		.thumb
 3902              		.thumb_func
 3903              		.fpu softvfp
 3905              	TIM_SetIC3Prescaler:
ARM GAS  /tmp/ccu4SMAM.s 			page 126


 3906              	.LFB130:
2398:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3907              		.loc 1 2398 0
 3908              		.cfi_startproc
 3909              		@ args = 0, pretend = 0, frame = 0
 3910              		@ frame_needed = 0, uses_anonymous_args = 0
 3911              		@ link register save eliminated.
 3912              	.LVL469:
2403:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 3913              		.loc 1 2403 0
 3914 0000 838B     		ldrh	r3, [r0, #28]
 3915 0002 9BB2     		uxth	r3, r3
 3916 0004 23F00C03 		bic	r3, r3, #12
 3917 0008 9BB2     		uxth	r3, r3
 3918 000a 8383     		strh	r3, [r0, #28]	@ movhi
2405:stm_lib/src/stm32f10x_tim.c **** }
 3919              		.loc 1 2405 0
 3920 000c 838B     		ldrh	r3, [r0, #28]
 3921 000e 9BB2     		uxth	r3, r3
 3922 0010 1943     		orrs	r1, r1, r3
 3923              	.LVL470:
 3924 0012 8183     		strh	r1, [r0, #28]	@ movhi
 3925 0014 7047     		bx	lr
 3926              		.cfi_endproc
 3927              	.LFE130:
 3929              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 3930              		.align	1
 3931              		.global	TIM_SetIC4Prescaler
 3932              		.syntax unified
 3933              		.thumb
 3934              		.thumb_func
 3935              		.fpu softvfp
 3937              	TIM_SetIC4Prescaler:
 3938              	.LFB131:
2420:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3939              		.loc 1 2420 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 0
 3942              		@ frame_needed = 0, uses_anonymous_args = 0
 3943              		@ link register save eliminated.
 3944              	.LVL471:
2425:stm_lib/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 3945              		.loc 1 2425 0
 3946 0000 838B     		ldrh	r3, [r0, #28]
 3947 0002 9BB2     		uxth	r3, r3
 3948 0004 23F44063 		bic	r3, r3, #3072
 3949 0008 9BB2     		uxth	r3, r3
 3950 000a 8383     		strh	r3, [r0, #28]	@ movhi
2427:stm_lib/src/stm32f10x_tim.c **** }
 3951              		.loc 1 2427 0
 3952 000c 838B     		ldrh	r3, [r0, #28]
 3953 000e 9BB2     		uxth	r3, r3
 3954 0010 0902     		lsls	r1, r1, #8
 3955              	.LVL472:
 3956 0012 89B2     		uxth	r1, r1
 3957 0014 0B43     		orrs	r3, r3, r1
 3958 0016 8383     		strh	r3, [r0, #28]	@ movhi
ARM GAS  /tmp/ccu4SMAM.s 			page 127


 3959 0018 7047     		bx	lr
 3960              		.cfi_endproc
 3961              	.LFE131:
 3963              		.section	.text.TIM_ICInit,"ax",%progbits
 3964              		.align	1
 3965              		.global	TIM_ICInit
 3966              		.syntax unified
 3967              		.thumb
 3968              		.thumb_func
 3969              		.fpu softvfp
 3971              	TIM_ICInit:
 3972              	.LFB62:
 588:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 3973              		.loc 1 588 0
 3974              		.cfi_startproc
 3975              		@ args = 0, pretend = 0, frame = 0
 3976              		@ frame_needed = 0, uses_anonymous_args = 0
 3977              	.LVL473:
 3978 0000 38B5     		push	{r3, r4, r5, lr}
 3979              	.LCFI40:
 3980              		.cfi_def_cfa_offset 16
 3981              		.cfi_offset 3, -16
 3982              		.cfi_offset 4, -12
 3983              		.cfi_offset 5, -8
 3984              		.cfi_offset 14, -4
 3985 0002 0546     		mov	r5, r0
 3986 0004 0C46     		mov	r4, r1
 604:stm_lib/src/stm32f10x_tim.c ****   {
 3987              		.loc 1 604 0
 3988 0006 0B88     		ldrh	r3, [r1]
 3989 0008 6BB1     		cbz	r3, .L232
 614:stm_lib/src/stm32f10x_tim.c ****   {
 3990              		.loc 1 614 0
 3991 000a 042B     		cmp	r3, #4
 3992 000c 15D0     		beq	.L233
 624:stm_lib/src/stm32f10x_tim.c ****   {
 3993              		.loc 1 624 0
 3994 000e 082B     		cmp	r3, #8
 3995 0010 1DD0     		beq	.L234
 638:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3996              		.loc 1 638 0
 3997 0012 0B89     		ldrh	r3, [r1, #8]
 3998 0014 8A88     		ldrh	r2, [r1, #4]
 3999 0016 4988     		ldrh	r1, [r1, #2]
 4000              	.LVL474:
 4001 0018 FFF7FEFF 		bl	TI4_Config
 4002              	.LVL475:
 642:stm_lib/src/stm32f10x_tim.c ****   }
 4003              		.loc 1 642 0
 4004 001c E188     		ldrh	r1, [r4, #6]
 4005 001e 2846     		mov	r0, r5
 4006 0020 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 4007              	.LVL476:
 4008 0024 38BD     		pop	{r3, r4, r5, pc}
 4009              	.LVL477:
 4010              	.L232:
 608:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
ARM GAS  /tmp/ccu4SMAM.s 			page 128


 4011              		.loc 1 608 0
 4012 0026 0B89     		ldrh	r3, [r1, #8]
 4013 0028 8A88     		ldrh	r2, [r1, #4]
 4014 002a 4988     		ldrh	r1, [r1, #2]
 4015              	.LVL478:
 4016 002c FFF7FEFF 		bl	TI1_Config
 4017              	.LVL479:
 612:stm_lib/src/stm32f10x_tim.c ****   }
 4018              		.loc 1 612 0
 4019 0030 E188     		ldrh	r1, [r4, #6]
 4020 0032 2846     		mov	r0, r5
 4021 0034 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4022              	.LVL480:
 4023 0038 38BD     		pop	{r3, r4, r5, pc}
 4024              	.LVL481:
 4025              	.L233:
 618:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4026              		.loc 1 618 0
 4027 003a 0B89     		ldrh	r3, [r1, #8]
 4028 003c 8A88     		ldrh	r2, [r1, #4]
 4029 003e 4988     		ldrh	r1, [r1, #2]
 4030              	.LVL482:
 4031 0040 FFF7FEFF 		bl	TI2_Config
 4032              	.LVL483:
 622:stm_lib/src/stm32f10x_tim.c ****   }
 4033              		.loc 1 622 0
 4034 0044 E188     		ldrh	r1, [r4, #6]
 4035 0046 2846     		mov	r0, r5
 4036 0048 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4037              	.LVL484:
 4038 004c 38BD     		pop	{r3, r4, r5, pc}
 4039              	.LVL485:
 4040              	.L234:
 628:stm_lib/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4041              		.loc 1 628 0
 4042 004e 0B89     		ldrh	r3, [r1, #8]
 4043 0050 8A88     		ldrh	r2, [r1, #4]
 4044 0052 4988     		ldrh	r1, [r1, #2]
 4045              	.LVL486:
 4046 0054 FFF7FEFF 		bl	TI3_Config
 4047              	.LVL487:
 632:stm_lib/src/stm32f10x_tim.c ****   }
 4048              		.loc 1 632 0
 4049 0058 E188     		ldrh	r1, [r4, #6]
 4050 005a 2846     		mov	r0, r5
 4051 005c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 4052              	.LVL488:
 4053 0060 38BD     		pop	{r3, r4, r5, pc}
 4054              		.cfi_endproc
 4055              	.LFE62:
 4057              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 4058              		.align	1
 4059              		.global	TIM_SetClockDivision
 4060              		.syntax unified
 4061              		.thumb
 4062              		.thumb_func
 4063              		.fpu softvfp
ARM GAS  /tmp/ccu4SMAM.s 			page 129


 4065              	TIM_SetClockDivision:
 4066              	.LFB132:
2442:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4067              		.loc 1 2442 0
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 0
 4070              		@ frame_needed = 0, uses_anonymous_args = 0
 4071              		@ link register save eliminated.
 4072              	.LVL489:
2447:stm_lib/src/stm32f10x_tim.c ****   /* Set the CKD value */
 4073              		.loc 1 2447 0
 4074 0000 0388     		ldrh	r3, [r0]
 4075 0002 9BB2     		uxth	r3, r3
 4076 0004 23F44073 		bic	r3, r3, #768
 4077 0008 9BB2     		uxth	r3, r3
 4078 000a 0380     		strh	r3, [r0]	@ movhi
2449:stm_lib/src/stm32f10x_tim.c **** }
 4079              		.loc 1 2449 0
 4080 000c 0388     		ldrh	r3, [r0]
 4081 000e 9BB2     		uxth	r3, r3
 4082 0010 1943     		orrs	r1, r1, r3
 4083              	.LVL490:
 4084 0012 0180     		strh	r1, [r0]	@ movhi
 4085 0014 7047     		bx	lr
 4086              		.cfi_endproc
 4087              	.LFE132:
 4089              		.section	.text.TIM_GetCapture1,"ax",%progbits
 4090              		.align	1
 4091              		.global	TIM_GetCapture1
 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4095              		.fpu softvfp
 4097              	TIM_GetCapture1:
 4098              	.LFB133:
2458:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4099              		.loc 1 2458 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103              		@ link register save eliminated.
 4104              	.LVL491:
2462:stm_lib/src/stm32f10x_tim.c **** }
 4105              		.loc 1 2462 0
 4106 0000 808E     		ldrh	r0, [r0, #52]
 4107              	.LVL492:
2463:stm_lib/src/stm32f10x_tim.c **** 
 4108              		.loc 1 2463 0
 4109 0002 80B2     		uxth	r0, r0
 4110 0004 7047     		bx	lr
 4111              		.cfi_endproc
 4112              	.LFE133:
 4114              		.section	.text.TIM_GetCapture2,"ax",%progbits
 4115              		.align	1
 4116              		.global	TIM_GetCapture2
 4117              		.syntax unified
 4118              		.thumb
ARM GAS  /tmp/ccu4SMAM.s 			page 130


 4119              		.thumb_func
 4120              		.fpu softvfp
 4122              	TIM_GetCapture2:
 4123              	.LFB134:
2471:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4124              		.loc 1 2471 0
 4125              		.cfi_startproc
 4126              		@ args = 0, pretend = 0, frame = 0
 4127              		@ frame_needed = 0, uses_anonymous_args = 0
 4128              		@ link register save eliminated.
 4129              	.LVL493:
2475:stm_lib/src/stm32f10x_tim.c **** }
 4130              		.loc 1 2475 0
 4131 0000 008F     		ldrh	r0, [r0, #56]
 4132              	.LVL494:
2476:stm_lib/src/stm32f10x_tim.c **** 
 4133              		.loc 1 2476 0
 4134 0002 80B2     		uxth	r0, r0
 4135 0004 7047     		bx	lr
 4136              		.cfi_endproc
 4137              	.LFE134:
 4139              		.section	.text.TIM_GetCapture3,"ax",%progbits
 4140              		.align	1
 4141              		.global	TIM_GetCapture3
 4142              		.syntax unified
 4143              		.thumb
 4144              		.thumb_func
 4145              		.fpu softvfp
 4147              	TIM_GetCapture3:
 4148              	.LFB135:
2484:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4149              		.loc 1 2484 0
 4150              		.cfi_startproc
 4151              		@ args = 0, pretend = 0, frame = 0
 4152              		@ frame_needed = 0, uses_anonymous_args = 0
 4153              		@ link register save eliminated.
 4154              	.LVL495:
2488:stm_lib/src/stm32f10x_tim.c **** }
 4155              		.loc 1 2488 0
 4156 0000 808F     		ldrh	r0, [r0, #60]
 4157              	.LVL496:
2489:stm_lib/src/stm32f10x_tim.c **** 
 4158              		.loc 1 2489 0
 4159 0002 80B2     		uxth	r0, r0
 4160 0004 7047     		bx	lr
 4161              		.cfi_endproc
 4162              	.LFE135:
 4164              		.section	.text.TIM_GetCapture4,"ax",%progbits
 4165              		.align	1
 4166              		.global	TIM_GetCapture4
 4167              		.syntax unified
 4168              		.thumb
 4169              		.thumb_func
 4170              		.fpu softvfp
 4172              	TIM_GetCapture4:
 4173              	.LFB136:
2497:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccu4SMAM.s 			page 131


 4174              		.loc 1 2497 0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 0
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 4178              		@ link register save eliminated.
 4179              	.LVL497:
2501:stm_lib/src/stm32f10x_tim.c **** }
 4180              		.loc 1 2501 0
 4181 0000 B0F84000 		ldrh	r0, [r0, #64]
 4182              	.LVL498:
2502:stm_lib/src/stm32f10x_tim.c **** 
 4183              		.loc 1 2502 0
 4184 0004 80B2     		uxth	r0, r0
 4185 0006 7047     		bx	lr
 4186              		.cfi_endproc
 4187              	.LFE136:
 4189              		.section	.text.TIM_GetCounter,"ax",%progbits
 4190              		.align	1
 4191              		.global	TIM_GetCounter
 4192              		.syntax unified
 4193              		.thumb
 4194              		.thumb_func
 4195              		.fpu softvfp
 4197              	TIM_GetCounter:
 4198              	.LFB137:
2510:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4199              		.loc 1 2510 0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 0
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
 4203              		@ link register save eliminated.
 4204              	.LVL499:
2514:stm_lib/src/stm32f10x_tim.c **** }
 4205              		.loc 1 2514 0
 4206 0000 808C     		ldrh	r0, [r0, #36]
 4207              	.LVL500:
2515:stm_lib/src/stm32f10x_tim.c **** 
 4208              		.loc 1 2515 0
 4209 0002 80B2     		uxth	r0, r0
 4210 0004 7047     		bx	lr
 4211              		.cfi_endproc
 4212              	.LFE137:
 4214              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 4215              		.align	1
 4216              		.global	TIM_GetPrescaler
 4217              		.syntax unified
 4218              		.thumb
 4219              		.thumb_func
 4220              		.fpu softvfp
 4222              	TIM_GetPrescaler:
 4223              	.LFB138:
2523:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4224              		.loc 1 2523 0
 4225              		.cfi_startproc
 4226              		@ args = 0, pretend = 0, frame = 0
 4227              		@ frame_needed = 0, uses_anonymous_args = 0
 4228              		@ link register save eliminated.
ARM GAS  /tmp/ccu4SMAM.s 			page 132


 4229              	.LVL501:
2527:stm_lib/src/stm32f10x_tim.c **** }
 4230              		.loc 1 2527 0
 4231 0000 008D     		ldrh	r0, [r0, #40]
 4232              	.LVL502:
2528:stm_lib/src/stm32f10x_tim.c **** 
 4233              		.loc 1 2528 0
 4234 0002 80B2     		uxth	r0, r0
 4235 0004 7047     		bx	lr
 4236              		.cfi_endproc
 4237              	.LFE138:
 4239              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4240              		.align	1
 4241              		.global	TIM_GetFlagStatus
 4242              		.syntax unified
 4243              		.thumb
 4244              		.thumb_func
 4245              		.fpu softvfp
 4247              	TIM_GetFlagStatus:
 4248              	.LFB139:
2557:stm_lib/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4249              		.loc 1 2557 0
 4250              		.cfi_startproc
 4251              		@ args = 0, pretend = 0, frame = 0
 4252              		@ frame_needed = 0, uses_anonymous_args = 0
 4253              		@ link register save eliminated.
 4254              	.LVL503:
2563:stm_lib/src/stm32f10x_tim.c ****   {
 4255              		.loc 1 2563 0
 4256 0000 038A     		ldrh	r3, [r0, #16]
 4257 0002 1942     		tst	r1, r3
 4258 0004 01D1     		bne	.L245
2569:stm_lib/src/stm32f10x_tim.c ****   }
 4259              		.loc 1 2569 0
 4260 0006 0020     		movs	r0, #0
 4261              	.LVL504:
2572:stm_lib/src/stm32f10x_tim.c **** 
 4262              		.loc 1 2572 0
 4263 0008 7047     		bx	lr
 4264              	.LVL505:
 4265              	.L245:
2565:stm_lib/src/stm32f10x_tim.c ****   }
 4266              		.loc 1 2565 0
 4267 000a 0120     		movs	r0, #1
 4268              	.LVL506:
 4269 000c 7047     		bx	lr
 4270              		.cfi_endproc
 4271              	.LFE139:
 4273              		.section	.text.TIM_ClearFlag,"ax",%progbits
 4274              		.align	1
 4275              		.global	TIM_ClearFlag
 4276              		.syntax unified
 4277              		.thumb
 4278              		.thumb_func
 4279              		.fpu softvfp
 4281              	TIM_ClearFlag:
 4282              	.LFB140:
ARM GAS  /tmp/ccu4SMAM.s 			page 133


2601:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4283              		.loc 1 2601 0
 4284              		.cfi_startproc
 4285              		@ args = 0, pretend = 0, frame = 0
 4286              		@ frame_needed = 0, uses_anonymous_args = 0
 4287              		@ link register save eliminated.
 4288              	.LVL507:
2607:stm_lib/src/stm32f10x_tim.c **** }
 4289              		.loc 1 2607 0
 4290 0000 C943     		mvns	r1, r1
 4291              	.LVL508:
 4292 0002 89B2     		uxth	r1, r1
 4293 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4294 0006 7047     		bx	lr
 4295              		.cfi_endproc
 4296              	.LFE140:
 4298              		.section	.text.TIM_GetITStatus,"ax",%progbits
 4299              		.align	1
 4300              		.global	TIM_GetITStatus
 4301              		.syntax unified
 4302              		.thumb
 4303              		.thumb_func
 4304              		.fpu softvfp
 4306              	TIM_GetITStatus:
 4307              	.LFB141:
2633:stm_lib/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4308              		.loc 1 2633 0
 4309              		.cfi_startproc
 4310              		@ args = 0, pretend = 0, frame = 0
 4311              		@ frame_needed = 0, uses_anonymous_args = 0
 4312              		@ link register save eliminated.
 4313              	.LVL509:
2640:stm_lib/src/stm32f10x_tim.c ****   
 4314              		.loc 1 2640 0
 4315 0000 028A     		ldrh	r2, [r0, #16]
 4316              	.LVL510:
2642:stm_lib/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4317              		.loc 1 2642 0
 4318 0002 8389     		ldrh	r3, [r0, #12]
 4319 0004 0B40     		ands	r3, r3, r1
 4320              	.LVL511:
2643:stm_lib/src/stm32f10x_tim.c ****   {
 4321              		.loc 1 2643 0
 4322 0006 1142     		tst	r1, r2
 4323 0008 02D0     		beq	.L249
2643:stm_lib/src/stm32f10x_tim.c ****   {
 4324              		.loc 1 2643 0 is_stmt 0 discriminator 1
 4325 000a 1BB9     		cbnz	r3, .L250
2649:stm_lib/src/stm32f10x_tim.c ****   }
 4326              		.loc 1 2649 0 is_stmt 1
 4327 000c 0020     		movs	r0, #0
 4328              	.LVL512:
 4329 000e 7047     		bx	lr
 4330              	.LVL513:
 4331              	.L249:
 4332 0010 0020     		movs	r0, #0
 4333              	.LVL514:
ARM GAS  /tmp/ccu4SMAM.s 			page 134


 4334 0012 7047     		bx	lr
 4335              	.LVL515:
 4336              	.L250:
2645:stm_lib/src/stm32f10x_tim.c ****   }
 4337              		.loc 1 2645 0
 4338 0014 0120     		movs	r0, #1
 4339              	.LVL516:
2652:stm_lib/src/stm32f10x_tim.c **** 
 4340              		.loc 1 2652 0
 4341 0016 7047     		bx	lr
 4342              		.cfi_endproc
 4343              	.LFE141:
 4345              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4346              		.align	1
 4347              		.global	TIM_ClearITPendingBit
 4348              		.syntax unified
 4349              		.thumb
 4350              		.thumb_func
 4351              		.fpu softvfp
 4353              	TIM_ClearITPendingBit:
 4354              	.LFB142:
2677:stm_lib/src/stm32f10x_tim.c ****   /* Check the parameters */
 4355              		.loc 1 2677 0
 4356              		.cfi_startproc
 4357              		@ args = 0, pretend = 0, frame = 0
 4358              		@ frame_needed = 0, uses_anonymous_args = 0
 4359              		@ link register save eliminated.
 4360              	.LVL517:
2682:stm_lib/src/stm32f10x_tim.c **** }
 4361              		.loc 1 2682 0
 4362 0000 C943     		mvns	r1, r1
 4363              	.LVL518:
 4364 0002 89B2     		uxth	r1, r1
 4365 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4366 0006 7047     		bx	lr
 4367              		.cfi_endproc
 4368              	.LFE142:
 4370              		.text
 4371              	.Letext0:
 4372              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4373              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4374              		.file 4 "cmsis/core_cm3.h"
 4375              		.file 5 "cmsis_boot/system_stm32f10x.h"
 4376              		.file 6 "stm_lib/inc/stm32f10x.h"
 4377              		.file 7 "stm_lib/inc/stm32f10x_tim.h"
 4378              		.file 8 "stm_lib/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccu4SMAM.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_tim.c
     /tmp/ccu4SMAM.s:16     .text.TI1_Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:22     .text.TI1_Config:0000000000000000 TI1_Config
     /tmp/ccu4SMAM.s:123    .text.TI1_Config:000000000000006c $d
     /tmp/ccu4SMAM.s:129    .text.TI2_Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:135    .text.TI2_Config:0000000000000000 TI2_Config
     /tmp/ccu4SMAM.s:247    .text.TI2_Config:0000000000000078 $d
     /tmp/ccu4SMAM.s:252    .text.TI3_Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:258    .text.TI3_Config:0000000000000000 TI3_Config
     /tmp/ccu4SMAM.s:363    .text.TI3_Config:0000000000000070 $d
     /tmp/ccu4SMAM.s:368    .text.TI4_Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:374    .text.TI4_Config:0000000000000000 TI4_Config
     /tmp/ccu4SMAM.s:489    .text.TI4_Config:000000000000007c $d
     /tmp/ccu4SMAM.s:494    .text.TIM_DeInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:501    .text.TIM_DeInit:0000000000000000 TIM_DeInit
     /tmp/ccu4SMAM.s:825    .text.TIM_DeInit:00000000000001cc $d
     /tmp/ccu4SMAM.s:845    .text.TIM_TimeBaseInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:852    .text.TIM_TimeBaseInit:0000000000000000 TIM_TimeBaseInit
     /tmp/ccu4SMAM.s:956    .text.TIM_TimeBaseInit:000000000000008c $d
     /tmp/ccu4SMAM.s:962    .text.TIM_OC1Init:0000000000000000 $t
     /tmp/ccu4SMAM.s:969    .text.TIM_OC1Init:0000000000000000 TIM_OC1Init
     /tmp/ccu4SMAM.s:1088   .text.TIM_OC1Init:0000000000000080 $d
     /tmp/ccu4SMAM.s:1093   .text.TIM_OC2Init:0000000000000000 $t
     /tmp/ccu4SMAM.s:1100   .text.TIM_OC2Init:0000000000000000 TIM_OC2Init
     /tmp/ccu4SMAM.s:1226   .text.TIM_OC2Init:0000000000000084 $d
     /tmp/ccu4SMAM.s:1231   .text.TIM_OC3Init:0000000000000000 $t
     /tmp/ccu4SMAM.s:1238   .text.TIM_OC3Init:0000000000000000 TIM_OC3Init
     /tmp/ccu4SMAM.s:1362   .text.TIM_OC3Init:0000000000000080 $d
     /tmp/ccu4SMAM.s:1367   .text.TIM_OC4Init:0000000000000000 $t
     /tmp/ccu4SMAM.s:1374   .text.TIM_OC4Init:0000000000000000 TIM_OC4Init
     /tmp/ccu4SMAM.s:1476   .text.TIM_OC4Init:0000000000000068 $d
     /tmp/ccu4SMAM.s:1481   .text.TIM_BDTRConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:1488   .text.TIM_BDTRConfig:0000000000000000 TIM_BDTRConfig
     /tmp/ccu4SMAM.s:1528   .text.TIM_TimeBaseStructInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:1535   .text.TIM_TimeBaseStructInit:0000000000000000 TIM_TimeBaseStructInit
     /tmp/ccu4SMAM.s:1560   .text.TIM_OCStructInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:1567   .text.TIM_OCStructInit:0000000000000000 TIM_OCStructInit
     /tmp/ccu4SMAM.s:1597   .text.TIM_ICStructInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:1604   .text.TIM_ICStructInit:0000000000000000 TIM_ICStructInit
     /tmp/ccu4SMAM.s:1629   .text.TIM_BDTRStructInit:0000000000000000 $t
     /tmp/ccu4SMAM.s:1636   .text.TIM_BDTRStructInit:0000000000000000 TIM_BDTRStructInit
     /tmp/ccu4SMAM.s:1664   .text.TIM_Cmd:0000000000000000 $t
     /tmp/ccu4SMAM.s:1671   .text.TIM_Cmd:0000000000000000 TIM_Cmd
     /tmp/ccu4SMAM.s:1699   .text.TIM_CtrlPWMOutputs:0000000000000000 $t
     /tmp/ccu4SMAM.s:1706   .text.TIM_CtrlPWMOutputs:0000000000000000 TIM_CtrlPWMOutputs
     /tmp/ccu4SMAM.s:1733   .text.TIM_ITConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:1740   .text.TIM_ITConfig:0000000000000000 TIM_ITConfig
     /tmp/ccu4SMAM.s:1771   .text.TIM_GenerateEvent:0000000000000000 $t
     /tmp/ccu4SMAM.s:1778   .text.TIM_GenerateEvent:0000000000000000 TIM_GenerateEvent
     /tmp/ccu4SMAM.s:1793   .text.TIM_DMAConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:1800   .text.TIM_DMAConfig:0000000000000000 TIM_DMAConfig
     /tmp/ccu4SMAM.s:1817   .text.TIM_DMACmd:0000000000000000 $t
     /tmp/ccu4SMAM.s:1824   .text.TIM_DMACmd:0000000000000000 TIM_DMACmd
     /tmp/ccu4SMAM.s:1855   .text.TIM_InternalClockConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:1862   .text.TIM_InternalClockConfig:0000000000000000 TIM_InternalClockConfig
     /tmp/ccu4SMAM.s:1881   .text.TIM_ETRConfig:0000000000000000 $t
ARM GAS  /tmp/ccu4SMAM.s 			page 136


     /tmp/ccu4SMAM.s:1888   .text.TIM_ETRConfig:0000000000000000 TIM_ETRConfig
     /tmp/ccu4SMAM.s:1927   .text.TIM_ETRClockMode1Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:1934   .text.TIM_ETRClockMode1Config:0000000000000000 TIM_ETRClockMode1Config
     /tmp/ccu4SMAM.s:1965   .text.TIM_ETRClockMode2Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:1972   .text.TIM_ETRClockMode2Config:0000000000000000 TIM_ETRClockMode2Config
     /tmp/ccu4SMAM.s:1998   .text.TIM_PrescalerConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2005   .text.TIM_PrescalerConfig:0000000000000000 TIM_PrescalerConfig
     /tmp/ccu4SMAM.s:2022   .text.TIM_CounterModeConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2029   .text.TIM_CounterModeConfig:0000000000000000 TIM_CounterModeConfig
     /tmp/ccu4SMAM.s:2054   .text.TIM_SelectInputTrigger:0000000000000000 $t
     /tmp/ccu4SMAM.s:2061   .text.TIM_SelectInputTrigger:0000000000000000 TIM_SelectInputTrigger
     /tmp/ccu4SMAM.s:2086   .text.TIM_ITRxExternalClockConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2093   .text.TIM_ITRxExternalClockConfig:0000000000000000 TIM_ITRxExternalClockConfig
     /tmp/ccu4SMAM.s:2119   .text.TIM_TIxExternalClockConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2126   .text.TIM_TIxExternalClockConfig:0000000000000000 TIM_TIxExternalClockConfig
     /tmp/ccu4SMAM.s:2176   .text.TIM_EncoderInterfaceConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2183   .text.TIM_EncoderInterfaceConfig:0000000000000000 TIM_EncoderInterfaceConfig
     /tmp/ccu4SMAM.s:2256   .text.TIM_ForcedOC1Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:2263   .text.TIM_ForcedOC1Config:0000000000000000 TIM_ForcedOC1Config
     /tmp/ccu4SMAM.s:2288   .text.TIM_ForcedOC2Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:2295   .text.TIM_ForcedOC2Config:0000000000000000 TIM_ForcedOC2Config
     /tmp/ccu4SMAM.s:2323   .text.TIM_ForcedOC3Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:2330   .text.TIM_ForcedOC3Config:0000000000000000 TIM_ForcedOC3Config
     /tmp/ccu4SMAM.s:2355   .text.TIM_ForcedOC4Config:0000000000000000 $t
     /tmp/ccu4SMAM.s:2362   .text.TIM_ForcedOC4Config:0000000000000000 TIM_ForcedOC4Config
     /tmp/ccu4SMAM.s:2390   .text.TIM_ARRPreloadConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2397   .text.TIM_ARRPreloadConfig:0000000000000000 TIM_ARRPreloadConfig
     /tmp/ccu4SMAM.s:2425   .text.TIM_SelectCOM:0000000000000000 $t
     /tmp/ccu4SMAM.s:2432   .text.TIM_SelectCOM:0000000000000000 TIM_SelectCOM
     /tmp/ccu4SMAM.s:2460   .text.TIM_SelectCCDMA:0000000000000000 $t
     /tmp/ccu4SMAM.s:2467   .text.TIM_SelectCCDMA:0000000000000000 TIM_SelectCCDMA
     /tmp/ccu4SMAM.s:2495   .text.TIM_CCPreloadControl:0000000000000000 $t
     /tmp/ccu4SMAM.s:2502   .text.TIM_CCPreloadControl:0000000000000000 TIM_CCPreloadControl
     /tmp/ccu4SMAM.s:2530   .text.TIM_OC1PreloadConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2537   .text.TIM_OC1PreloadConfig:0000000000000000 TIM_OC1PreloadConfig
     /tmp/ccu4SMAM.s:2562   .text.TIM_OC2PreloadConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2569   .text.TIM_OC2PreloadConfig:0000000000000000 TIM_OC2PreloadConfig
     /tmp/ccu4SMAM.s:2597   .text.TIM_OC3PreloadConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2604   .text.TIM_OC3PreloadConfig:0000000000000000 TIM_OC3PreloadConfig
     /tmp/ccu4SMAM.s:2629   .text.TIM_OC4PreloadConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2636   .text.TIM_OC4PreloadConfig:0000000000000000 TIM_OC4PreloadConfig
     /tmp/ccu4SMAM.s:2664   .text.TIM_OC1FastConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2671   .text.TIM_OC1FastConfig:0000000000000000 TIM_OC1FastConfig
     /tmp/ccu4SMAM.s:2696   .text.TIM_OC2FastConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2703   .text.TIM_OC2FastConfig:0000000000000000 TIM_OC2FastConfig
     /tmp/ccu4SMAM.s:2731   .text.TIM_OC3FastConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2738   .text.TIM_OC3FastConfig:0000000000000000 TIM_OC3FastConfig
     /tmp/ccu4SMAM.s:2763   .text.TIM_OC4FastConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2770   .text.TIM_OC4FastConfig:0000000000000000 TIM_OC4FastConfig
     /tmp/ccu4SMAM.s:2798   .text.TIM_ClearOC1Ref:0000000000000000 $t
     /tmp/ccu4SMAM.s:2805   .text.TIM_ClearOC1Ref:0000000000000000 TIM_ClearOC1Ref
     /tmp/ccu4SMAM.s:2830   .text.TIM_ClearOC2Ref:0000000000000000 $t
     /tmp/ccu4SMAM.s:2837   .text.TIM_ClearOC2Ref:0000000000000000 TIM_ClearOC2Ref
     /tmp/ccu4SMAM.s:2864   .text.TIM_ClearOC3Ref:0000000000000000 $t
     /tmp/ccu4SMAM.s:2871   .text.TIM_ClearOC3Ref:0000000000000000 TIM_ClearOC3Ref
     /tmp/ccu4SMAM.s:2896   .text.TIM_ClearOC4Ref:0000000000000000 $t
     /tmp/ccu4SMAM.s:2903   .text.TIM_ClearOC4Ref:0000000000000000 TIM_ClearOC4Ref
ARM GAS  /tmp/ccu4SMAM.s 			page 137


     /tmp/ccu4SMAM.s:2930   .text.TIM_OC1PolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2937   .text.TIM_OC1PolarityConfig:0000000000000000 TIM_OC1PolarityConfig
     /tmp/ccu4SMAM.s:2962   .text.TIM_OC1NPolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:2969   .text.TIM_OC1NPolarityConfig:0000000000000000 TIM_OC1NPolarityConfig
     /tmp/ccu4SMAM.s:2994   .text.TIM_OC2PolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3001   .text.TIM_OC2PolarityConfig:0000000000000000 TIM_OC2PolarityConfig
     /tmp/ccu4SMAM.s:3029   .text.TIM_OC2NPolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3036   .text.TIM_OC2NPolarityConfig:0000000000000000 TIM_OC2NPolarityConfig
     /tmp/ccu4SMAM.s:3064   .text.TIM_OC3PolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3071   .text.TIM_OC3PolarityConfig:0000000000000000 TIM_OC3PolarityConfig
     /tmp/ccu4SMAM.s:3099   .text.TIM_OC3NPolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3106   .text.TIM_OC3NPolarityConfig:0000000000000000 TIM_OC3NPolarityConfig
     /tmp/ccu4SMAM.s:3134   .text.TIM_OC4PolarityConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3141   .text.TIM_OC4PolarityConfig:0000000000000000 TIM_OC4PolarityConfig
     /tmp/ccu4SMAM.s:3169   .text.TIM_CCxCmd:0000000000000000 $t
     /tmp/ccu4SMAM.s:3176   .text.TIM_CCxCmd:0000000000000000 TIM_CCxCmd
     /tmp/ccu4SMAM.s:3220   .text.TIM_CCxNCmd:0000000000000000 $t
     /tmp/ccu4SMAM.s:3227   .text.TIM_CCxNCmd:0000000000000000 TIM_CCxNCmd
     /tmp/ccu4SMAM.s:3271   .text.TIM_SelectOCxM:0000000000000000 $t
     /tmp/ccu4SMAM.s:3278   .text.TIM_SelectOCxM:0000000000000000 TIM_SelectOCxM
     /tmp/ccu4SMAM.s:3358   .text.TIM_UpdateDisableConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3365   .text.TIM_UpdateDisableConfig:0000000000000000 TIM_UpdateDisableConfig
     /tmp/ccu4SMAM.s:3393   .text.TIM_UpdateRequestConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3400   .text.TIM_UpdateRequestConfig:0000000000000000 TIM_UpdateRequestConfig
     /tmp/ccu4SMAM.s:3428   .text.TIM_SelectHallSensor:0000000000000000 $t
     /tmp/ccu4SMAM.s:3435   .text.TIM_SelectHallSensor:0000000000000000 TIM_SelectHallSensor
     /tmp/ccu4SMAM.s:3463   .text.TIM_SelectOnePulseMode:0000000000000000 $t
     /tmp/ccu4SMAM.s:3470   .text.TIM_SelectOnePulseMode:0000000000000000 TIM_SelectOnePulseMode
     /tmp/ccu4SMAM.s:3495   .text.TIM_SelectOutputTrigger:0000000000000000 $t
     /tmp/ccu4SMAM.s:3502   .text.TIM_SelectOutputTrigger:0000000000000000 TIM_SelectOutputTrigger
     /tmp/ccu4SMAM.s:3527   .text.TIM_SelectSlaveMode:0000000000000000 $t
     /tmp/ccu4SMAM.s:3534   .text.TIM_SelectSlaveMode:0000000000000000 TIM_SelectSlaveMode
     /tmp/ccu4SMAM.s:3559   .text.TIM_SelectMasterSlaveMode:0000000000000000 $t
     /tmp/ccu4SMAM.s:3566   .text.TIM_SelectMasterSlaveMode:0000000000000000 TIM_SelectMasterSlaveMode
     /tmp/ccu4SMAM.s:3591   .text.TIM_SetCounter:0000000000000000 $t
     /tmp/ccu4SMAM.s:3598   .text.TIM_SetCounter:0000000000000000 TIM_SetCounter
     /tmp/ccu4SMAM.s:3613   .text.TIM_SetAutoreload:0000000000000000 $t
     /tmp/ccu4SMAM.s:3620   .text.TIM_SetAutoreload:0000000000000000 TIM_SetAutoreload
     /tmp/ccu4SMAM.s:3635   .text.TIM_SetCompare1:0000000000000000 $t
     /tmp/ccu4SMAM.s:3642   .text.TIM_SetCompare1:0000000000000000 TIM_SetCompare1
     /tmp/ccu4SMAM.s:3657   .text.TIM_SetCompare2:0000000000000000 $t
     /tmp/ccu4SMAM.s:3664   .text.TIM_SetCompare2:0000000000000000 TIM_SetCompare2
     /tmp/ccu4SMAM.s:3679   .text.TIM_SetCompare3:0000000000000000 $t
     /tmp/ccu4SMAM.s:3686   .text.TIM_SetCompare3:0000000000000000 TIM_SetCompare3
     /tmp/ccu4SMAM.s:3701   .text.TIM_SetCompare4:0000000000000000 $t
     /tmp/ccu4SMAM.s:3708   .text.TIM_SetCompare4:0000000000000000 TIM_SetCompare4
     /tmp/ccu4SMAM.s:3723   .text.TIM_SetIC1Prescaler:0000000000000000 $t
     /tmp/ccu4SMAM.s:3730   .text.TIM_SetIC1Prescaler:0000000000000000 TIM_SetIC1Prescaler
     /tmp/ccu4SMAM.s:3755   .text.TIM_SetIC2Prescaler:0000000000000000 $t
     /tmp/ccu4SMAM.s:3762   .text.TIM_SetIC2Prescaler:0000000000000000 TIM_SetIC2Prescaler
     /tmp/ccu4SMAM.s:3789   .text.TIM_PWMIConfig:0000000000000000 $t
     /tmp/ccu4SMAM.s:3796   .text.TIM_PWMIConfig:0000000000000000 TIM_PWMIConfig
     /tmp/ccu4SMAM.s:3898   .text.TIM_SetIC3Prescaler:0000000000000000 $t
     /tmp/ccu4SMAM.s:3905   .text.TIM_SetIC3Prescaler:0000000000000000 TIM_SetIC3Prescaler
     /tmp/ccu4SMAM.s:3930   .text.TIM_SetIC4Prescaler:0000000000000000 $t
     /tmp/ccu4SMAM.s:3937   .text.TIM_SetIC4Prescaler:0000000000000000 TIM_SetIC4Prescaler
     /tmp/ccu4SMAM.s:3964   .text.TIM_ICInit:0000000000000000 $t
ARM GAS  /tmp/ccu4SMAM.s 			page 138


     /tmp/ccu4SMAM.s:3971   .text.TIM_ICInit:0000000000000000 TIM_ICInit
     /tmp/ccu4SMAM.s:4058   .text.TIM_SetClockDivision:0000000000000000 $t
     /tmp/ccu4SMAM.s:4065   .text.TIM_SetClockDivision:0000000000000000 TIM_SetClockDivision
     /tmp/ccu4SMAM.s:4090   .text.TIM_GetCapture1:0000000000000000 $t
     /tmp/ccu4SMAM.s:4097   .text.TIM_GetCapture1:0000000000000000 TIM_GetCapture1
     /tmp/ccu4SMAM.s:4115   .text.TIM_GetCapture2:0000000000000000 $t
     /tmp/ccu4SMAM.s:4122   .text.TIM_GetCapture2:0000000000000000 TIM_GetCapture2
     /tmp/ccu4SMAM.s:4140   .text.TIM_GetCapture3:0000000000000000 $t
     /tmp/ccu4SMAM.s:4147   .text.TIM_GetCapture3:0000000000000000 TIM_GetCapture3
     /tmp/ccu4SMAM.s:4165   .text.TIM_GetCapture4:0000000000000000 $t
     /tmp/ccu4SMAM.s:4172   .text.TIM_GetCapture4:0000000000000000 TIM_GetCapture4
     /tmp/ccu4SMAM.s:4190   .text.TIM_GetCounter:0000000000000000 $t
     /tmp/ccu4SMAM.s:4197   .text.TIM_GetCounter:0000000000000000 TIM_GetCounter
     /tmp/ccu4SMAM.s:4215   .text.TIM_GetPrescaler:0000000000000000 $t
     /tmp/ccu4SMAM.s:4222   .text.TIM_GetPrescaler:0000000000000000 TIM_GetPrescaler
     /tmp/ccu4SMAM.s:4240   .text.TIM_GetFlagStatus:0000000000000000 $t
     /tmp/ccu4SMAM.s:4247   .text.TIM_GetFlagStatus:0000000000000000 TIM_GetFlagStatus
     /tmp/ccu4SMAM.s:4274   .text.TIM_ClearFlag:0000000000000000 $t
     /tmp/ccu4SMAM.s:4281   .text.TIM_ClearFlag:0000000000000000 TIM_ClearFlag
     /tmp/ccu4SMAM.s:4299   .text.TIM_GetITStatus:0000000000000000 $t
     /tmp/ccu4SMAM.s:4306   .text.TIM_GetITStatus:0000000000000000 TIM_GetITStatus
     /tmp/ccu4SMAM.s:4346   .text.TIM_ClearITPendingBit:0000000000000000 $t
     /tmp/ccu4SMAM.s:4353   .text.TIM_ClearITPendingBit:0000000000000000 TIM_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
