ARM GAS  /tmp/ccdT6GFy.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_iwdg.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  16              		.align	1
  17              		.global	IWDG_WriteAccessCmd
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	IWDG_WriteAccessCmd:
  24              	.LFB56:
  25              		.file 1 "stm_lib/src/stm32f10x_iwdg.c"
   1:stm_lib/src/stm32f10x_iwdg.c **** /**
   2:stm_lib/src/stm32f10x_iwdg.c ****   ******************************************************************************
   3:stm_lib/src/stm32f10x_iwdg.c ****   * @file    stm32f10x_iwdg.c
   4:stm_lib/src/stm32f10x_iwdg.c ****   * @author  MCD Application Team
   5:stm_lib/src/stm32f10x_iwdg.c ****   * @version V3.5.0
   6:stm_lib/src/stm32f10x_iwdg.c ****   * @date    11-March-2011
   7:stm_lib/src/stm32f10x_iwdg.c ****   * @brief   This file provides all the IWDG firmware functions.
   8:stm_lib/src/stm32f10x_iwdg.c ****   ******************************************************************************
   9:stm_lib/src/stm32f10x_iwdg.c ****   * @attention
  10:stm_lib/src/stm32f10x_iwdg.c ****   *
  11:stm_lib/src/stm32f10x_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:stm_lib/src/stm32f10x_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:stm_lib/src/stm32f10x_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:stm_lib/src/stm32f10x_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:stm_lib/src/stm32f10x_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:stm_lib/src/stm32f10x_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:stm_lib/src/stm32f10x_iwdg.c ****   *
  18:stm_lib/src/stm32f10x_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:stm_lib/src/stm32f10x_iwdg.c ****   ******************************************************************************
  20:stm_lib/src/stm32f10x_iwdg.c ****   */
  21:stm_lib/src/stm32f10x_iwdg.c **** 
  22:stm_lib/src/stm32f10x_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:stm_lib/src/stm32f10x_iwdg.c **** #include "stm32f10x_iwdg.h"
  24:stm_lib/src/stm32f10x_iwdg.c **** 
  25:stm_lib/src/stm32f10x_iwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  27:stm_lib/src/stm32f10x_iwdg.c ****   */
  28:stm_lib/src/stm32f10x_iwdg.c **** 
  29:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG 
  30:stm_lib/src/stm32f10x_iwdg.c ****   * @brief IWDG driver modules
  31:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  32:stm_lib/src/stm32f10x_iwdg.c ****   */ 
  33:stm_lib/src/stm32f10x_iwdg.c **** 
ARM GAS  /tmp/ccdT6GFy.s 			page 2


  34:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_TypesDefinitions
  35:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  36:stm_lib/src/stm32f10x_iwdg.c ****   */
  37:stm_lib/src/stm32f10x_iwdg.c **** 
  38:stm_lib/src/stm32f10x_iwdg.c **** /**
  39:stm_lib/src/stm32f10x_iwdg.c ****   * @}
  40:stm_lib/src/stm32f10x_iwdg.c ****   */
  41:stm_lib/src/stm32f10x_iwdg.c **** 
  42:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Defines
  43:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  44:stm_lib/src/stm32f10x_iwdg.c ****   */ 
  45:stm_lib/src/stm32f10x_iwdg.c **** 
  46:stm_lib/src/stm32f10x_iwdg.c **** /* ---------------------- IWDG registers bit mask ----------------------------*/
  47:stm_lib/src/stm32f10x_iwdg.c **** 
  48:stm_lib/src/stm32f10x_iwdg.c **** /* KR register bit mask */
  49:stm_lib/src/stm32f10x_iwdg.c **** #define KR_KEY_Reload    ((uint16_t)0xAAAA)
  50:stm_lib/src/stm32f10x_iwdg.c **** #define KR_KEY_Enable    ((uint16_t)0xCCCC)
  51:stm_lib/src/stm32f10x_iwdg.c **** 
  52:stm_lib/src/stm32f10x_iwdg.c **** /**
  53:stm_lib/src/stm32f10x_iwdg.c ****   * @}
  54:stm_lib/src/stm32f10x_iwdg.c ****   */ 
  55:stm_lib/src/stm32f10x_iwdg.c **** 
  56:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Macros
  57:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  58:stm_lib/src/stm32f10x_iwdg.c ****   */
  59:stm_lib/src/stm32f10x_iwdg.c **** 
  60:stm_lib/src/stm32f10x_iwdg.c **** /**
  61:stm_lib/src/stm32f10x_iwdg.c ****   * @}
  62:stm_lib/src/stm32f10x_iwdg.c ****   */
  63:stm_lib/src/stm32f10x_iwdg.c **** 
  64:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Variables
  65:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  66:stm_lib/src/stm32f10x_iwdg.c ****   */
  67:stm_lib/src/stm32f10x_iwdg.c **** 
  68:stm_lib/src/stm32f10x_iwdg.c **** /**
  69:stm_lib/src/stm32f10x_iwdg.c ****   * @}
  70:stm_lib/src/stm32f10x_iwdg.c ****   */
  71:stm_lib/src/stm32f10x_iwdg.c **** 
  72:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_FunctionPrototypes
  73:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  74:stm_lib/src/stm32f10x_iwdg.c ****   */
  75:stm_lib/src/stm32f10x_iwdg.c **** 
  76:stm_lib/src/stm32f10x_iwdg.c **** /**
  77:stm_lib/src/stm32f10x_iwdg.c ****   * @}
  78:stm_lib/src/stm32f10x_iwdg.c ****   */
  79:stm_lib/src/stm32f10x_iwdg.c **** 
  80:stm_lib/src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Functions
  81:stm_lib/src/stm32f10x_iwdg.c ****   * @{
  82:stm_lib/src/stm32f10x_iwdg.c ****   */
  83:stm_lib/src/stm32f10x_iwdg.c **** 
  84:stm_lib/src/stm32f10x_iwdg.c **** /**
  85:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
  86:stm_lib/src/stm32f10x_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
  87:stm_lib/src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
  88:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
  89:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR registers
  90:stm_lib/src/stm32f10x_iwdg.c ****   * @retval None
ARM GAS  /tmp/ccdT6GFy.s 			page 3


  91:stm_lib/src/stm32f10x_iwdg.c ****   */
  92:stm_lib/src/stm32f10x_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
  93:stm_lib/src/stm32f10x_iwdg.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  94:stm_lib/src/stm32f10x_iwdg.c ****   /* Check the parameters */
  95:stm_lib/src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
  96:stm_lib/src/stm32f10x_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  32              		.loc 1 96 0
  33 0000 014B     		ldr	r3, .L2
  34 0002 1860     		str	r0, [r3]
  35 0004 7047     		bx	lr
  36              	.L3:
  37 0006 00BF     		.align	2
  38              	.L2:
  39 0008 00300040 		.word	1073754112
  40              		.cfi_endproc
  41              	.LFE56:
  43              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  44              		.align	1
  45              		.global	IWDG_SetPrescaler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	IWDG_SetPrescaler:
  52              	.LFB57:
  97:stm_lib/src/stm32f10x_iwdg.c **** }
  98:stm_lib/src/stm32f10x_iwdg.c **** 
  99:stm_lib/src/stm32f10x_iwdg.c **** /**
 100:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 101:stm_lib/src/stm32f10x_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 102:stm_lib/src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 103:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 104:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 105:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 106:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 107:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 108:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 109:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 110:stm_lib/src/stm32f10x_iwdg.c ****   * @retval None
 111:stm_lib/src/stm32f10x_iwdg.c ****   */
 112:stm_lib/src/stm32f10x_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 113:stm_lib/src/stm32f10x_iwdg.c **** {
  53              		.loc 1 113 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
 114:stm_lib/src/stm32f10x_iwdg.c ****   /* Check the parameters */
 115:stm_lib/src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 116:stm_lib/src/stm32f10x_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
ARM GAS  /tmp/ccdT6GFy.s 			page 4


  59              		.loc 1 116 0
  60 0000 014B     		ldr	r3, .L5
  61 0002 5860     		str	r0, [r3, #4]
  62 0004 7047     		bx	lr
  63              	.L6:
  64 0006 00BF     		.align	2
  65              	.L5:
  66 0008 00300040 		.word	1073754112
  67              		.cfi_endproc
  68              	.LFE57:
  70              		.section	.text.IWDG_SetReload,"ax",%progbits
  71              		.align	1
  72              		.global	IWDG_SetReload
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu softvfp
  78              	IWDG_SetReload:
  79              	.LFB58:
 117:stm_lib/src/stm32f10x_iwdg.c **** }
 118:stm_lib/src/stm32f10x_iwdg.c **** 
 119:stm_lib/src/stm32f10x_iwdg.c **** /**
 120:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Reload value.
 121:stm_lib/src/stm32f10x_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 122:stm_lib/src/stm32f10x_iwdg.c ****   *   This parameter must be a number between 0 and 0x0FFF.
 123:stm_lib/src/stm32f10x_iwdg.c ****   * @retval None
 124:stm_lib/src/stm32f10x_iwdg.c ****   */
 125:stm_lib/src/stm32f10x_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 126:stm_lib/src/stm32f10x_iwdg.c **** {
  80              		.loc 1 126 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL2:
 127:stm_lib/src/stm32f10x_iwdg.c ****   /* Check the parameters */
 128:stm_lib/src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 129:stm_lib/src/stm32f10x_iwdg.c ****   IWDG->RLR = Reload;
  86              		.loc 1 129 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 9860     		str	r0, [r3, #8]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 00300040 		.word	1073754112
  94              		.cfi_endproc
  95              	.LFE58:
  97              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	IWDG_ReloadCounter
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	IWDG_ReloadCounter:
 106              	.LFB59:
ARM GAS  /tmp/ccdT6GFy.s 			page 5


 130:stm_lib/src/stm32f10x_iwdg.c **** }
 131:stm_lib/src/stm32f10x_iwdg.c **** 
 132:stm_lib/src/stm32f10x_iwdg.c **** /**
 133:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 134:stm_lib/src/stm32f10x_iwdg.c ****   *   (write access to IWDG_PR and IWDG_RLR registers disabled).
 135:stm_lib/src/stm32f10x_iwdg.c ****   * @param  None
 136:stm_lib/src/stm32f10x_iwdg.c ****   * @retval None
 137:stm_lib/src/stm32f10x_iwdg.c ****   */
 138:stm_lib/src/stm32f10x_iwdg.c **** void IWDG_ReloadCounter(void)
 139:stm_lib/src/stm32f10x_iwdg.c **** {
 107              		.loc 1 139 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 140:stm_lib/src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Reload;
 112              		.loc 1 140 0
 113 0000 4AF6AA22 		movw	r2, #43690
 114 0004 014B     		ldr	r3, .L11
 115 0006 1A60     		str	r2, [r3]
 116 0008 7047     		bx	lr
 117              	.L12:
 118 000a 00BF     		.align	2
 119              	.L11:
 120 000c 00300040 		.word	1073754112
 121              		.cfi_endproc
 122              	.LFE59:
 124              		.section	.text.IWDG_Enable,"ax",%progbits
 125              		.align	1
 126              		.global	IWDG_Enable
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	IWDG_Enable:
 133              	.LFB60:
 141:stm_lib/src/stm32f10x_iwdg.c **** }
 142:stm_lib/src/stm32f10x_iwdg.c **** 
 143:stm_lib/src/stm32f10x_iwdg.c **** /**
 144:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 145:stm_lib/src/stm32f10x_iwdg.c ****   * @param  None
 146:stm_lib/src/stm32f10x_iwdg.c ****   * @retval None
 147:stm_lib/src/stm32f10x_iwdg.c ****   */
 148:stm_lib/src/stm32f10x_iwdg.c **** void IWDG_Enable(void)
 149:stm_lib/src/stm32f10x_iwdg.c **** {
 134              		.loc 1 149 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 150:stm_lib/src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Enable;
 139              		.loc 1 150 0
 140 0000 4CF6CC42 		movw	r2, #52428
 141 0004 014B     		ldr	r3, .L14
 142 0006 1A60     		str	r2, [r3]
 143 0008 7047     		bx	lr
 144              	.L15:
ARM GAS  /tmp/ccdT6GFy.s 			page 6


 145 000a 00BF     		.align	2
 146              	.L14:
 147 000c 00300040 		.word	1073754112
 148              		.cfi_endproc
 149              	.LFE60:
 151              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 152              		.align	1
 153              		.global	IWDG_GetFlagStatus
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	IWDG_GetFlagStatus:
 160              	.LFB61:
 151:stm_lib/src/stm32f10x_iwdg.c **** }
 152:stm_lib/src/stm32f10x_iwdg.c **** 
 153:stm_lib/src/stm32f10x_iwdg.c **** /**
 154:stm_lib/src/stm32f10x_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 155:stm_lib/src/stm32f10x_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 156:stm_lib/src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 157:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 158:stm_lib/src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_RVU: Reload Value Update on going
 159:stm_lib/src/stm32f10x_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 160:stm_lib/src/stm32f10x_iwdg.c ****   */
 161:stm_lib/src/stm32f10x_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 162:stm_lib/src/stm32f10x_iwdg.c **** {
 161              		.loc 1 162 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL3:
 163:stm_lib/src/stm32f10x_iwdg.c ****   FlagStatus bitstatus = RESET;
 164:stm_lib/src/stm32f10x_iwdg.c ****   /* Check the parameters */
 165:stm_lib/src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 166:stm_lib/src/stm32f10x_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 167              		.loc 1 166 0
 168 0000 034B     		ldr	r3, .L20
 169 0002 DB68     		ldr	r3, [r3, #12]
 170 0004 1842     		tst	r0, r3
 171 0006 01D1     		bne	.L19
 167:stm_lib/src/stm32f10x_iwdg.c ****   {
 168:stm_lib/src/stm32f10x_iwdg.c ****     bitstatus = SET;
 169:stm_lib/src/stm32f10x_iwdg.c ****   }
 170:stm_lib/src/stm32f10x_iwdg.c ****   else
 171:stm_lib/src/stm32f10x_iwdg.c ****   {
 172:stm_lib/src/stm32f10x_iwdg.c ****     bitstatus = RESET;
 172              		.loc 1 172 0
 173 0008 0020     		movs	r0, #0
 174              	.LVL4:
 173:stm_lib/src/stm32f10x_iwdg.c ****   }
 174:stm_lib/src/stm32f10x_iwdg.c ****   /* Return the flag status */
 175:stm_lib/src/stm32f10x_iwdg.c ****   return bitstatus;
 176:stm_lib/src/stm32f10x_iwdg.c **** }
 175              		.loc 1 176 0
 176 000a 7047     		bx	lr
 177              	.LVL5:
ARM GAS  /tmp/ccdT6GFy.s 			page 7


 178              	.L19:
 168:stm_lib/src/stm32f10x_iwdg.c ****   }
 179              		.loc 1 168 0
 180 000c 0120     		movs	r0, #1
 181              	.LVL6:
 182 000e 7047     		bx	lr
 183              	.L21:
 184              		.align	2
 185              	.L20:
 186 0010 00300040 		.word	1073754112
 187              		.cfi_endproc
 188              	.LFE61:
 190              		.text
 191              	.Letext0:
 192              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 193              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 194              		.file 4 "cmsis/core_cm3.h"
 195              		.file 5 "cmsis_boot/system_stm32f10x.h"
 196              		.file 6 "stm_lib/inc/stm32f10x.h"
ARM GAS  /tmp/ccdT6GFy.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_iwdg.c
     /tmp/ccdT6GFy.s:16     .text.IWDG_WriteAccessCmd:0000000000000000 $t
     /tmp/ccdT6GFy.s:23     .text.IWDG_WriteAccessCmd:0000000000000000 IWDG_WriteAccessCmd
     /tmp/ccdT6GFy.s:39     .text.IWDG_WriteAccessCmd:0000000000000008 $d
     /tmp/ccdT6GFy.s:44     .text.IWDG_SetPrescaler:0000000000000000 $t
     /tmp/ccdT6GFy.s:51     .text.IWDG_SetPrescaler:0000000000000000 IWDG_SetPrescaler
     /tmp/ccdT6GFy.s:66     .text.IWDG_SetPrescaler:0000000000000008 $d
     /tmp/ccdT6GFy.s:71     .text.IWDG_SetReload:0000000000000000 $t
     /tmp/ccdT6GFy.s:78     .text.IWDG_SetReload:0000000000000000 IWDG_SetReload
     /tmp/ccdT6GFy.s:93     .text.IWDG_SetReload:0000000000000008 $d
     /tmp/ccdT6GFy.s:98     .text.IWDG_ReloadCounter:0000000000000000 $t
     /tmp/ccdT6GFy.s:105    .text.IWDG_ReloadCounter:0000000000000000 IWDG_ReloadCounter
     /tmp/ccdT6GFy.s:120    .text.IWDG_ReloadCounter:000000000000000c $d
     /tmp/ccdT6GFy.s:125    .text.IWDG_Enable:0000000000000000 $t
     /tmp/ccdT6GFy.s:132    .text.IWDG_Enable:0000000000000000 IWDG_Enable
     /tmp/ccdT6GFy.s:147    .text.IWDG_Enable:000000000000000c $d
     /tmp/ccdT6GFy.s:152    .text.IWDG_GetFlagStatus:0000000000000000 $t
     /tmp/ccdT6GFy.s:159    .text.IWDG_GetFlagStatus:0000000000000000 IWDG_GetFlagStatus
     /tmp/ccdT6GFy.s:186    .text.IWDG_GetFlagStatus:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
